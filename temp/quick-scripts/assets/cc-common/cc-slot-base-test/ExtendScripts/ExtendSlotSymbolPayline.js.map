{"version":3,"sources":["ExtendSlotSymbolPayline.js"],"names":["DIM_COLOR","cc","Color","WHITE_COLOR","WHITE","Class","extends","require","onLoad","staticSymbol","scale","node","playSpecialSymbolAppear","bind","winEffect","active","_super","changeToSymbol","symbolName","spineNode","havingAnim","_symbolName","symbol","_isPlaying","symbolAnim","findSymbolSpineData","animation","skeletonData","spine","isSymbolAnimated","playAnimation","opacity","findAnimation","setAnimation","warn","name","addAnimation","stopAnimation","blinkHighlight","enableHighlight","color","disableHighlight","isSpecialSymbol","reset"],"mappings":"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","file":"ExtendSlotSymbolPayline.js","sourceRoot":"../../../../../../assets/cc-common/cc-slot-base-test/ExtendScripts","sourcesContent":["const DIM_COLOR = new cc.Color(100, 100, 100);\nconst WHITE_COLOR = cc.Color.WHITE;\n\ncc.Class({\n    extends: require('SlotSymbolPaylinev2'),\n\n    onLoad() {\n        this.staticSymbol = { scale: 1 };\n        this.node.playSpecialSymbolAppear = this.playSpecialSymbolAppear.bind(this);\n        if (this.winEffect) {\n            this.winEffect.active = false;\n        }\n        this._super();\n    },\n\n    changeToSymbol(symbolName) {\n        this.spineNode.active = false;\n        this.havingAnim = false;\n        this._symbolName = symbolName;\n        this.node.symbol = symbolName;\n        this._isPlaying = false;\n        this.symbolAnim = this.findSymbolSpineData(symbolName);\n\n        if (this.symbolAnim) {\n            this.animation.skeletonData = this.symbolAnim.spine;\n            this.havingAnim = true;\n        }\n        this.node.isSymbolAnimated = this.havingAnim;\n    },\n\n    playAnimation() {\n        if (this.havingAnim && !this._isPlaying) {\n            this._isPlaying = true;\n            this.spineNode.opacity = 255;\n            this.spineNode.active = true;\n            if (this.animation.findAnimation('animation')) {\n                this.animation.setAnimation(0, \"animation\", true);\n            } else {\n                cc.warn(\"wrong animation name on spine: \", this.animation.skeletonData.name);\n            }\n        }\n    },\n\n    playSpecialSymbolAppear() {\n        if (!this.havingAnim) return;\n        this.spineNode.opacity = 255;\n        this.spineNode.active = true;\n        if (this.animation.findAnimation('Appear')) {\n            this.animation.setAnimation(0, \"Appear\", false);\n            this.animation.addAnimation(0, \"Idle\", true);\n        } if (this.animation.findAnimation('animation')) {\n            this.animation.setAnimation(0, \"animation\", true);\n        } else {\n            cc.warn(\"wrong animation name on spine: \", this.animation.skeletonData.name);\n        }\n    },\n\n    stopAnimation() {\n        this.spineNode.active = false;\n    },\n\n    blinkHighlight() {\n        this._isPlaying = false;\n        this.spineNode.active = false;\n    },\n\n    enableHighlight() {\n        this.spineNode.color = WHITE_COLOR;\n    },\n\n    disableHighlight() {\n        if (!this._isPlaying && !this.node.isSpecialSymbol) {\n            this.spineNode.active = false;\n        }\n        this.spineNode.color = DIM_COLOR;\n    },\n\n    reset() {\n        this.spineNode.color = WHITE_COLOR;\n        this.node.isSpecialSymbol = false;\n        this._isPlaying = false;\n    }\n});"]}