{"version":3,"sources":["../../../../../../assets/cc-common/cc-share-v1/common/assets/cc-common/cc-share-v1/common/globalMiniGameState.js"],"names":["globalMiniGameState","gameState","isOpen","isMinimized","data","updateDataForGame","gameId","Object","keys","map","key","updateOpenGame","updateMinimizeGame","getListGameState","module","exports"],"mappings":";;;;;;AACA,SAASA,mBAAT,GAA+B;AAAA;;AAC3B,SAAKC,SAAL,GAAiB;AACb,gBAAQ;AACJC,oBAAQ,KADJ;AAEJC,yBAAa,KAFT;AAGJC,kBAAM;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AAPE;AAHF;AADK,KAAjB;;AAgBA,QAAMC,oBAAoB,SAApBA,iBAAoB,CAACC,MAAD,EAASF,IAAT,EAAkB;AACxCG,eAAOC,IAAP,CAAYJ,IAAZ,EAAkBK,GAAlB,CAAsB,UAACC,GAAD,EAAS;AAC3B,kBAAKT,SAAL,CAAeK,MAAf,EAAuBF,IAAvB,CAA4BM,GAA5B,IAAmCN,KAAKM,GAAL,CAAnC;AACH,SAFD;AAGH,KAJD;AAKA,QAAMC,iBAAiB,SAAjBA,cAAiB,CAACL,MAAD,EAASJ,MAAT,EAAoB;AACvC,cAAKD,SAAL,CAAeK,MAAf,EAAuBJ,MAAvB,GAAgCA,MAAhC;AACH,KAFD;;AAIA,QAAMU,qBAAqB,SAArBA,kBAAqB,CAACN,MAAD,EAASH,WAAT,EAAyB;AAChD,cAAKF,SAAL,CAAeK,MAAf,EAAuBH,WAAvB,GAAqCA,WAArC;AACH,KAFD;;AAIA,QAAMU,mBAAmB,SAAnBA,gBAAmB,GAAM;AAC3B,eAAO,MAAKZ,SAAZ;AACH,KAFD;;AAIA,WAAO;AACHI,4CADG;AAEHO,8CAFG;AAGHD,sCAHG;AAIHE;AAJG,KAAP;AAMH;;AAGDC,OAAOC,OAAP,GAAiB,IAAIf,mBAAJ,EAAjB","file":"globalMiniGameState.js","sourceRoot":"../../../../../../assets/cc-common/cc-share-v1/common","sourcesContent":["\nfunction globalMiniGameState() {\n    this.gameState = {\n        '5999': {\n            isOpen: false,\n            isMinimized: false,\n            data: {\n                // wallet: 0,\n                // winAmount: 0,\n                // betValue: 0,\n                // spinTimes: 0,\n                // isAutoSpin: false,\n                // freeSpin: 0,\n                // isTurbo: false\n            }\n        }\n    };\n\n    const updateDataForGame = (gameId, data) => {\n        Object.keys(data).map((key) => {\n            this.gameState[gameId].data[key] = data[key];\n        });\n    };\n    const updateOpenGame = (gameId, isOpen) => {\n        this.gameState[gameId].isOpen = isOpen;\n    };\n\n    const updateMinimizeGame = (gameId, isMinimized) => {\n        this.gameState[gameId].isMinimized = isMinimized;\n    };\n\n    const getListGameState = () => {\n        return this.gameState;\n    };\n\n    return {\n        updateDataForGame,\n        updateMinimizeGame,\n        updateOpenGame,\n        getListGameState\n    };\n}\n\n\nmodule.exports = new globalMiniGameState();\n"]}