{"version":3,"sources":["Director.js"],"names":["baseDirector","require","globalNetwork","handleFlowOutGame","handleBackLogin","getUrlParam","handleCloseGameIframe","formatWalletMoney","findKeyByValue","updateUtilConfig","lodash","tutorialManager","gameNetwork","window","GameNetwork","EventManager","PROMOTION_ERROR","WRONG_BET","EXPIRED","RESET","NEW","cc","Class","extends","properties","backToLobby","Node","info","setting","bet","turbo","jackpot","wallet","gui","cutscene","normalGame","freeGame","bonusGame","gameText","JsonAsset","gameTrialSupport","default","realWalletAmount","type","trialWalletAmount","trialButton","realButton","jackpotHistory","betHistory","backgroundLoading","tutorialData","Asset","tutorialMgr","toastMessage","waitingScene","demoGroup","isGamePrefab","onLoad","_super","gameTrialData","node","trialData","tutorialSpinData","json","active","on","ev","evName","getUserData","trigger","onIngameEvent","stopPropagation","setMainGameMgr","enableButtonControl","disableButtonControl","hideTutorial","setUpSpineDatabase","bind","setupGameMode","showMessageForceClose","networkWarningTime","joinGameSuccess","loadConfigAsync","getConfig","LOGIN_IFRAME","playingDemo","_setUpGameVersion","usingPopups","start","loadText","config","GAME_TEXT","promotionMessage","MESSAGE_DIALOG","PROMOTION_MESSAGE","promotionReset","PROMOTION_RESET","promotionNew","PROMOTION_NEW","versionSlot","getComponentInChildren","versionFile","version","Sentry","configureScope","scope","setExtra","trialMode","getGameId","gSlotDataStore","gameId","getGameMeta","cutSceneMgr","getComponent","currentGameMode","name","getDisplayCutscene","getLastCommand","getRemainScripts","init","runAction","fadeTo","readyToPlay","toggleModeTurbo","emit","children","forEach","cutsceneMode","element","evt","propagationStopped","detail","spineSkeletonDatabase","getSpineSkeletonData","spineName","gameModeList","push","isTutorialShowing","isShowing","isTutorialFinished","isFinished","enableTrialButton","enable","enableCheckForever","getServerVersion","SERVER_VERSION","setUpGame","resumeDelay","serverVersion","gameStateManager","registerGame","isSlotGame","stateUpdate","userLogout","initJP","onJackpotWin","playJackpotWin","onNoticeJackpotWin","noticeJackpotWin","authFailed","showMessageAuthFailed","onNetworkFailed","onNetworkError","onNetworkDisconnect","onNetworkResume","onNetworkWarning","onShowPopupDisconnected","onNetworkConnected","onJoinGameDenied","onRequestDenied","useShortParam","USE_SHORT_PARAM","onNoticeUserWinJackpot","isHidden","game","EVENT_HIDE","onEventHide","EVENT_SHOW","onEventShow","setPlayDemoMode","log","gameOnPause","gameOnResume","initGameMode","show","enter","extendInit","meta","enableButtonInteraction","extendData","dataResume","metaDataPromotion","isEmpty","extendCommon","ec","extendCommonData","parseExtendCommonData","IS_SUPPORT_MULTI_CURRENCY","_updateCurrencyConfig","_isCurrencyError","metaDataUser","currentWalletAmount","mBet","listDataBet","split","steps","item","Number","slotBetDataStore","createDefaultBet","updateJackpotHistoryBet","GAME_ID","betId","DEFAULT_BET","_updateJackpot","updateTrialBet","changeBetCallback","amount","clone","disableBet","extendActionForResume","isResume","promotionUpdate","enableBet","havingDirector","director","hideAnimIntro","isPlayDemo","setupPlayDemo","countF2R","switchToTrialMode","skipTutorial","_listenActionOnButtons","_detectAFK","_allButtons","getComponentsInChildren","Button","btn","EventType","TOUCH_START","interactable","lastActionTime","Date","now","timerAFK","tweenDetectAFK","tween","delay","call","isAutoSpin","showPopupRedirect","union","repeatForever","_isShowPopupRedirect","stopAutoSpinClick","NAME","FINISH_DEMO","showCutscene","strText","actionBtnOK","showWaitingCutScene","scheduleOnce","finishDemoCallBack","actionCancel","countingFastToResult","modeTurbo","showPopupSuggestTurbo","SUGGEST_TURBO","data","isMe","canNotifyJackpot","pauseJackpot","jpInfo","warn","JSON","stringify","IS_SHOW_JACKPOT_EXPLOSION","stopJackpotWin","onStateUpdate","stopSpinCurrentMode","forceStopSpinning","logOutUser","sequence","delayTime","callFunc","ANOTHER_ACCOUNT","showPopupHandleOutGame","table","isUserLogout","isShowWaitingCutScene","text","cbHandler","gameCommonUtils","isEnableBtn","checkConditionCloseGameIframe","sys","isNative","closeCreatorGame","AUTHEN_FAILED","ACCOUNT_BLOCKED","REQUEST_DENIED","onNetworkProblem","reason","MISMATCH_DATA","metaData","promotionRemain","promotionTotal","promotion","promotionBetId","runDelayPromtion","updatePromotionData","showPromotionPopup","promotionErrorCode","totalBetValue","getTotalBetValue","message","replace","setUpPromotion","stopPromotionAnim","showPopupPromotionAnim","stopAction","runPromotionSpin","sendSpinToNetwork","currentBetData","triggerFreeSpinRequest","triggerSpinRequest","spinPromotion","newGameMode","callback","hide","resumeGameMode","content","isCheck","setModeTurbo","value","updateBet","forced","_stateUpdate","script","executeNextScript","_stateResume","stateResume","haveMessageDialog","isDisplayDialog","isDisplayCutscene","updateWallet","isUpdateWinAmount","walletController","updateMoneyWallet","onDestroy","audioEngine","stopAll","off","setTimeScale","scale","getScheduler","switchMode","hideCurrentPopups","switchToRealMode","isTrialMode","updateJackpot","skipTutorialMode","useTutorialData","IS_PRODUCTION","CC_DEBUG","MAX_BET","DEFAULT_TRIAL_WALLET","switchToTrial","controller","isInit","setDefaultValue","resetTrialValue","trialWallet","lastValue","startTutorial","opacity","storeForCheckStatusTurbo","switchToReal","onTutorialFinish","playAnimSwitchToReal","CAN_BACK_TO_REAL_MODE","forceBackToRealMode","cleanUpNetWork","spinTimes","playSession","freeGameRemain","bonusGameRemain","isResumeNormal","forceResetSoundNormalGame","soundPlayer","stopAllEffects","playMainBGM","showTrialButtons","isOn","updateWalletOnTrialSpinClick","updateTrialWallet","winAmount","setDynamicBet","isPauseTutorialFlag","flag","isContainFlag","checkPauseTutorial","resumeJackpot","SYSTEM_ERROR","CAN_NOT_CONNECT","MISMATCH_DATA_VERSION","MISMATCH_COMMAND_ID","EXPECTED_EVENT_TIMEOUT","code","interruptGame","isPromotionError","NO_MONEY","NO_PLAYSESSION","GROUP_MAINTAIN","NO_FREESPIN_OPTION","EVENT_ENDED","SPIN_UNSUCCESS","handlePromotionError","propertyPath","promotionString","get","promotionData","updatedData","PROMOTION_EXPIRED","networkWaiting","DISCONNECT","NETWORK_DISCONNECT","showMessage","NETWORK_WARNING","onDisable","this","stop","property","stringValue","key","currencyCode","_getCurrency","defaultCurrency","_updateGameConfig","currencyConfig","MONEY_FORMAT","DEFAULT_CURRENCY","serverCurrency","getServerCurrency","clientCurrency","getClientCurrency","showCurrencyErrorPopup","toUpperCase","c","CURRENCY_CONFIG","updatedConfig","Object","assign","CURRENCY_NOT_SUPPORTED","actionOK","localStorage","getItem","closePopups","playSFXClick","popup"],"mappings":";;;;;;AAAA;AACA,IAAMA,eAAeC,QAAQ,gBAAR,CAArB;AACA,IAAMC,gBAAgBD,QAAQ,eAAR,CAAtB;;eACmFA,QAAQ,iBAAR;IAA3EE,6BAAAA;IAAmBC,2BAAAA;IAAiBC,uBAAAA;IAAaC,iCAAAA;;gBACOL,QAAQ,OAAR;IAAxDM,8BAAAA;IAAmBC,2BAAAA;IAAgBC,6BAAAA;;AAC3C,IAAMC,SAAST,QAAQ,QAAR,CAAf;AACA,IAAMU,kBAAkBV,QAAQ,aAAR,CAAxB;AACA,IAAMW,cAAcC,OAAOC,WAAP,IAAsBb,QAAQ,cAAR,CAA1C;AACA,IAAMc,eAAeH,YAAYG,YAAjC;AACA,IAAMC,kBAAkB;AACpBC,eAAW,MADS;AAEpBC,aAAS,MAFW;AAGpBC,WAAO,MAHa;AAIpBC,SAAK;AAJe,CAAxB;;AAOAC,GAAGC,KAAH,CAAS;AACLC,aAASvB,YADJ;;AAGLwB,gBAAY;AACRC,qBAAaJ,GAAGK,IADR;AAERC,cAAMN,GAAGK,IAFD;AAGRE,iBAASP,GAAGK,IAHJ;AAIRG,aAAKR,GAAGK,IAJA;AAKRI,eAAOT,GAAGK,IALF;AAMRK,iBAASV,GAAGK,IANJ;AAORM,gBAAQX,GAAGK,IAPH;AAQRO,aAAKZ,GAAGK,IARA;AASRQ,kBAAUb,GAAGK,IATL;AAURS,oBAAYd,GAAGK,IAVP;AAWRU,kBAAUf,GAAGK,IAXL;AAYRW,mBAAWhB,GAAGK,IAZN;AAaRY,kBAAUjB,GAAGkB,SAbL;AAcRC,0BAAkB;AACdC,qBAAS;AADK,SAdV;AAiBRC,0BAAkB;AACdD,qBAAS,IADK;AAEdE,kBAAMtB,GAAGK;AAFK,SAjBV;AAqBRkB,2BAAmB;AACfH,qBAAS,IADM;AAEfE,kBAAMtB,GAAGK;AAFM,SArBX;AAyBRmB,qBAAa;AACTJ,qBAAS,IADA;AAETE,kBAAMtB,GAAGK;AAFA,SAzBL;AA6BRoB,oBAAY;AACRL,qBAAS,IADD;AAERE,kBAAMtB,GAAGK;AAFD,SA7BJ;AAiCRqB,wBAAgB1B,GAAGK,IAjCX;AAkCRsB,oBAAY3B,GAAGK,IAlCP;AAmCRuB,2BAAmB5B,GAAGK,IAnCd;AAoCRwB,sBAAc;AACVP,kBAAMtB,GAAG8B,KADC;AAEVV,qBAAS;AAFC,SApCN;AAwCRW,qBAAazC,eAxCL;AAyCR0C,sBAAcpD,QAAQ,WAAR,CAzCN;AA0CRqD,sBAAcjC,GAAGK,IA1CT;AA2CR6B,mBAAWlC,GAAGK,IA3CN;AA4CR8B,sBAAc;AA5CN,KAHP;;AAkDLC,UAlDK,oBAkDI;AAAA;;AACL,aAAKC,MAAL;AACA,aAAKC,aAAL,GAAqB,KAAKC,IAAL,CAAUC,SAAV,IAAuB,IAA5C;AACA,YAAI,KAAKX,YAAT,EAAuB,KAAKY,gBAAL,GAAwB,KAAKZ,YAAL,CAAkBa,IAA1C;AACvB;AACA,YAAI,KAAKd,iBAAT,EAA4B;AACxB,iBAAKA,iBAAL,CAAuBe,MAAvB,GAAgC,IAAhC;AACH;AACD,aAAKJ,IAAL,CAAUK,EAAV,CAAa,qBAAb,EAAoC,UAACC,EAAD,EAAQ;AACxC,gBAAIC,SAASD,GAAGE,WAAH,GAAiBC,OAA9B;AACA,kBAAKC,aAAL,CAAmBH,MAAnB;AACAD,eAAGK,eAAH;AACH,SAJD;AAKA,YAAI,KAAKnB,WAAT,EAAsB,KAAKA,WAAL,CAAiBoB,cAAjB,CAAgC,IAAhC;AACtB,aAAKZ,IAAL,CAAUK,EAAV,CAAa,uBAAb,EAAsC,KAAKQ,mBAA3C,EAAgE,IAAhE;AACA,aAAKb,IAAL,CAAUK,EAAV,CAAa,wBAAb,EAAuC,KAAKS,oBAA5C,EAAkE,IAAlE;AACA,aAAKd,IAAL,CAAUK,EAAV,CAAa,eAAb,EAA8B,KAAKU,YAAnC,EAAiD,IAAjD;AACA,aAAKf,IAAL,CAAUK,EAAV,CAAa,uBAAb,EAAsC,KAAKW,kBAAL,CAAwBC,IAAxB,CAA6B,IAA7B,CAAtC;AACA,aAAKC,aAAL;AACA,aAAKC,qBAAL,GAA6B,KAA7B;AACA,aAAKC,kBAAL,GAA0B,CAA1B;AACA,aAAKC,eAAL,GAAuB,KAAvB;;AAEA,YAAMC,kBAAkBjF,QAAQ,iBAAR,CAAxB;;AAvBK,oCAwBoBiF,gBAAgBC,SAAhB,EAxBpB;AAAA,YAwBGC,YAxBH,yBAwBGA,YAxBH;;AAyBL,YAAIA,YAAJ,EAAkB;AACd,iBAAKC,WAAL,GAAoBhF,YAAY,WAAZ,MAA6B,MAAjD;AACH;AACD,aAAKiF,iBAAL;;AAEA,aAAKC,WAAL,GAAmB,CAAC,KAAK3D,OAAN,EAAe,KAAKD,IAApB,EAA0B,KAAKoB,cAA/B,EAA+C,KAAKC,UAApD,CAAnB;AACH,KAjFI;AAmFLwC,SAnFK,mBAmFG;AACJ,aAAK9B,MAAL;AACA,aAAK+B,QAAL;AACH,KAtFI;AAwFLA,YAxFK,sBAwFM;AACP,YAAI,KAAKnD,QAAT,EAAmB;AACf,iBAAKsB,IAAL,CAAU8B,MAAV,CAAiBC,SAAjB,GAA6B,KAAKrD,QAAL,CAAcyB,IAA3C;AACH;AACD,aAAK6B,gBAAL,GAAwB,KAAKhC,IAAL,CAAU8B,MAAV,CAAiBG,cAAjB,CAAgCC,iBAAxD;AACA,aAAKC,cAAL,GAAsB,KAAKnC,IAAL,CAAU8B,MAAV,CAAiBG,cAAjB,CAAgCG,eAAtD;AACA,aAAKC,YAAL,GAAoB,KAAKrC,IAAL,CAAU8B,MAAV,CAAiBG,cAAjB,CAAgCK,aAApD;AACH,KA/FI;AAiGLZ,qBAjGK,+BAiGe;AAChB,YAAMa,cAAc,KAAKvC,IAAL,CAAUwC,sBAAV,CAAiC,aAAjC,CAApB;AACA,YAAID,eAAeA,YAAYE,WAA3B,IAA0CF,YAAYE,WAAZ,CAAwBtC,IAAxB,CAA6BuC,OAA3E,EAAoF;AAChF,gBAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AAC/BA,uBAAOC,cAAP,CAAsB,UAAUC,KAAV,EAAiB;AACnCA,0BAAMC,QAAN,CAAe,aAAf,EAA8BP,YAAYE,WAAZ,CAAwBtC,IAAxB,CAA6BuC,OAA3D;AACH,iBAFD;AAGH;AACJ;AACJ,KA1GI;AA4GLhC,iBA5GK,yBA4GSH,MA5GT,EA4GiB;AAClB,aAAKwC,SAAL,IAAkB,KAAKvD,WAAvB,IAAsC,KAAKA,WAAL,CAAiBiB,OAAjB,CAAyBF,MAAzB,CAAtC;AACH,KA9GI;AAgHLyC,aAhHK,uBAgHO;AACR,eAAO,KAAKhD,IAAL,CAAUiD,cAAV,CAAyBC,MAAhC;AACH,KAlHI;AAoHLC,eApHK,yBAoHS;AACV;AACA,YAAIC,cAAc,KAAK9E,QAAL,CAAc+E,YAAd,CAA2B,iBAA3B,CAAlB;AACA,eAAO;AACH,wBAAY,KAAKC,eAAL,CAAqBC,IAD9B;AAEH,wBAAYH,YAAYI,kBAAZ,EAFT;AAGH,2BAAe,KAAKF,eAAL,CAAqBD,YAArB,CAAkC,kBAAlC,EAAsDI,cAAtD,EAHZ;AAIH,uBAAW,KAAKH,eAAL,CAAqBD,YAArB,CAAkC,kBAAlC,EAAsDK,gBAAtD;AAJR,SAAP;AAMH,KA7HI;AA+HLC,QA/HK,kBA+HE;AAAA;;AACH;AACA,YAAI,KAAKtE,iBAAT,EAA4B;AACxB,iBAAKA,iBAAL,CAAuBuE,SAAvB,CAAiCnG,GAAGoG,MAAH,CAAU,GAAV,EAAe,CAAf,CAAjC;AACH;AACD,YAAI,CAAC,KAAKzF,MAAV,EAAkB,KAAKA,MAAL,GAAc,KAAK4B,IAAnB;AAClB,YAAI,CAAC,KAAK/B,GAAV,EAAe,KAAKA,GAAL,GAAW,KAAK+B,IAAhB;AACf,YAAI,CAAC,KAAK7B,OAAV,EAAmB,KAAKA,OAAL,GAAe,KAAK6B,IAApB;AACnB,YAAI,CAAC,KAAK9B,KAAV,EAAiB,KAAKA,KAAL,GAAa,KAAK8B,IAAlB;AACjB,YAAI,CAAC,KAAKhC,OAAV,EAAmB,KAAKA,OAAL,GAAe,KAAKgC,IAApB;AACnB,YAAI,CAAC,KAAK1B,QAAV,EAAoB,KAAKA,QAAL,GAAgB,KAAK0B,IAArB;AACpB,aAAK8D,WAAL,GAAmB,KAAnB;AACA,aAAKf,SAAL,GAAiB,KAAjB;;AAEA;AACA,aAAK7E,KAAL,CAAWmC,EAAX,CAAc,cAAd,EAA8B,KAAK0D,eAAnC,EAAoD,IAApD;AACA,aAAK/F,OAAL,CAAagG,IAAb,CAAkB,MAAlB;AACA,aAAK1F,QAAL,CAAc2F,QAAd,CAAuBC,OAAvB,CAA+B,mBAAW;AACtC,gBAAMC,eAAeC,QAAQf,YAAR,CAAqB,cAArB,CAArB;AACAc,4BAAgBA,aAAaR,IAAb,QAAhB;AACH,SAHD;AAIH,KApJI;AAsJL3C,sBAtJK,8BAsJcqD,GAtJd,EAsJmB;AACpBA,YAAIC,kBAAJ,GAAyB,IAAzB;AACA,YAAID,IAAIE,MAAR,EAAgB;AACZ,iBAAKC,qBAAL,GAA6BH,IAAIE,MAAJ,CAAWC,qBAAxC;AACH;AACJ,KA3JI;AA6JLC,wBA7JK,gCA6JgBC,SA7JhB,EA6J2B;AAC5B,YAAI,KAAK1E,IAAL,IAAa,KAAKwE,qBAAlB,IAA2C,KAAKA,qBAAL,CAA2BC,oBAA1E,EAAgG;AAC5F,mBAAO,KAAKD,qBAAL,CAA2BC,oBAA3B,CAAgDC,SAAhD,CAAP;AACH;AACD,eAAO,IAAP;AACH,KAlKI;AAoKLxD,iBApKK,2BAoKW;AACZ,aAAKyD,YAAL,GAAoB,EAApB;AACA,YAAI,KAAKpG,UAAT,EAAqB,KAAKoG,YAAL,CAAkBC,IAAlB,CAAuB,KAAKrG,UAA5B;AACrB,YAAI,KAAKC,QAAT,EAAmB,KAAKmG,YAAL,CAAkBC,IAAlB,CAAuB,KAAKpG,QAA5B;AACnB,YAAI,KAAKC,SAAT,EAAoB,KAAKkG,YAAL,CAAkBC,IAAlB,CAAuB,KAAKnG,SAA5B;AACvB,KAzKI;AA2KLoG,qBA3KK,+BA2Ke;AAChB,eAAO,KAAKrF,WAAL,IAAoB,KAAKA,WAAL,CAAiBsF,SAAjB,EAA3B;AACH,KA7KI;AA+KLC,sBA/KK,gCA+KgB;AACjB,eAAO,CAAC,KAAKvF,WAAN,IAAqB,KAAKA,WAAL,CAAiBwF,UAAjB,EAA5B;AACH,KAjLI;AAmLLC,qBAnLK,6BAmLaC,MAnLb,EAmLqB;AACtB,YAAI,KAAKjG,WAAT,EAAsB,KAAKA,WAAL,CAAiB+E,IAAjB,CAAsB,gBAAtB,EAAwCkB,MAAxC;AACzB,KArLI;;AAsLL;AACAC,sBAvLK,gCAuLgB,CAEpB,CAzLI;AA2LLC,oBA3LK,8BA2Lc;AAAA,wBACS/I,QAAQ,iBAAR,CADT;AAAA,YACPI,WADO,aACPA,WADO;;AAEf,YAAM6E,kBAAkBjF,QAAQ,iBAAR,CAAxB;;AAFe,qCAGUiF,gBAAgBC,SAAhB,EAHV;AAAA,YAGPC,YAHO,0BAGPA,YAHO;;AAIf,YAAIkB,UAAU,KAAK1C,IAAL,CAAU8B,MAAV,CAAiBuD,cAAjB,IAAmC,EAAjD;AACA,YAAI7D,YAAJ,EAAkB;AACdkB,sBAAUjG,YAAY,aAAZ,KAA8BiG,OAAxC;AACH;AACD,YAAI,KAAKjB,WAAT,EAAsB,OAAO,CAAP;AACtB,eAAOiB,OAAP;AACH,KArMI;AAuML4C,aAvMK,uBAuMO;AACR,aAAKC,WAAL,GAAmB,GAAnB;AACA,YAAMC,gBAAgB,KAAKJ,gBAAL,EAAtB;AACA,aAAKK,gBAAL,GAAwBnJ,cAAcoJ,YAAd,CAA2B;AAC/CxC,oBAAQ,KAAKlD,IAAL,CAAUiD,cAAV,CAAyBC,MADc;AAE/CyC,wBAAY,IAFmC;AAG/CH,wCAH+C;AAI/CI,yBAAa,KAAKA,WAAL,CAAiB3E,IAAjB,CAAsB,IAAtB,CAJkC;AAK/C4E,wBAAY,KAAKA,UAAL,CAAgB5E,IAAhB,CAAqB,IAArB,CALmC;AAM/CI,6BAAiB,KAAKyE,MAAL,CAAY7E,IAAZ,CAAiB,IAAjB,CAN8B;AAO/C8E,0BAAc,KAAKC,cAAL,CAAoB/E,IAApB,CAAyB,IAAzB,CAPiC,EAOD;AAC9CgF,gCAAoB,KAAKC,gBAAL,CAAsBjF,IAAtB,CAA2B,IAA3B,CAR2B,EAQO;AACtDkF,wBAAY,KAAKC,qBAAL,CAA2BnF,IAA3B,CAAgC,IAAhC,CATmC;AAU/C3B,0BAAc,KAAKY,gBAV4B;AAW/CmG,6BAAiB,KAAKA,eAAL,CAAqBpF,IAArB,CAA0B,IAA1B,CAX8B;AAY/CqF,4BAAgB,KAAKA,cAAL,CAAoBrF,IAApB,CAAyB,IAAzB,CAZ+B;AAa/CsF,iCAAqB,KAAKA,mBAAL,CAAyBtF,IAAzB,CAA8B,IAA9B,CAb0B;AAc/CuF,6BAAiB,KAAKA,eAAL,CAAqBvF,IAArB,CAA0B,IAA1B,CAd8B;AAe/CwF,8BAAkB,KAAKA,gBAAL,CAAsBxF,IAAtB,CAA2B,IAA3B,CAf6B;AAgB/CyF,qCAAyB,KAAKA,uBAAL,CAA6BzF,IAA7B,CAAkC,IAAlC,CAhBsB;AAiB/C0F,gCAAoB,KAAKA,kBAAL,CAAwB1F,IAAxB,CAA6B,IAA7B,CAjB2B;AAkB/C2F,8BAAkB,KAAKA,gBAAL,CAAsB3F,IAAtB,CAA2B,IAA3B,CAlB6B;AAmB/C4F,6BAAiB,KAAKA,eAAL,CAAqB5F,IAArB,CAA0B,IAA1B,CAnB8B;AAoB/C6F,2BAAe,KAAK9G,IAAL,CAAU8B,MAAV,CAAiBiF,eApBe;AAqB/CC,oCAAwB,KAAKA,sBAAL,CAA4B/F,IAA5B,CAAiC,IAAjC;AArBuB,SAA3B,CAAxB;AAuBA,aAAKgG,QAAL,GAAgB,KAAhB;AACAxJ,WAAGyJ,IAAH,CAAQ7G,EAAR,CAAW5C,GAAGyJ,IAAH,CAAQC,UAAnB,EAA+B,KAAKC,WAApC,EAAiD,IAAjD;AACA3J,WAAGyJ,IAAH,CAAQ7G,EAAR,CAAW5C,GAAGyJ,IAAH,CAAQG,UAAnB,EAA+B,KAAKC,WAApC,EAAiD,IAAjD;AACA,YAAI,KAAK7F,WAAT,EAAsB;AAClB,iBAAKxC,WAAL,CAAiBsI,eAAjB;AACA,gBAAI,KAAK5H,SAAT,EAAoB,KAAKA,SAAL,CAAeS,MAAf,GAAwB,IAAxB;AACvB;AACJ,KAxOI;AA0OLgH,eA1OK,yBA0OS;AACV3J,WAAG+J,GAAH,CAAO,WAAP;AACA,aAAKP,QAAL,GAAgB,IAAhB;AACA,YAAI,KAAKxB,gBAAT,EAA2B;AACvB,iBAAKA,gBAAL,CAAsBgC,WAAtB;AACH;AACJ,KAhPI;AAkPLH,eAlPK,yBAkPS;AACV7J,WAAG+J,GAAH,CAAO,WAAP;AACA,aAAKP,QAAL,GAAgB,KAAhB;AACA,YAAI,KAAKxB,gBAAT,EAA2B;AACvB,iBAAKA,gBAAL,CAAsBiC,YAAtB;AACH;AACJ,KAxPI;AA0PLC,gBA1PK,0BA0PU;AACX;AACA,YAAI,KAAKpJ,UAAT,EAAqB,KAAKA,UAAL,CAAgBoF,IAAhB,CAAqB,IAArB,EAA2B,IAA3B;AACrB,YAAI,KAAKnF,QAAT,EAAmB,KAAKA,QAAL,CAAcmF,IAAd,CAAmB,IAAnB;AACnB,YAAI,KAAKlF,SAAT,EAAoB,KAAKA,SAAL,CAAekF,IAAf,CAAoB,IAApB;;AAEpB;AACA,aAAK3D,IAAL,CAAUiD,cAAV,CAAyBK,eAAzB,GAA2C,YAA3C;AACA,aAAKA,eAAL,GAAuB,KAAK,KAAKtD,IAAL,CAAUiD,cAAV,CAAyBK,eAA9B,CAAvB;;AAEA,aAAKjF,GAAL,CAASuJ,IAAT;AACA,aAAKtE,eAAL,CAAqBuE,KAArB;AACH,KAtQI;AAwQLC,cAxQK,sBAwQMC,IAxQN,EAwQY,CAAE;AACf;AACH,KA1QI;AA4QLC,2BA5QK,qCA4QqB;AACtB,YAAI,KAAKzJ,UAAT,EAAqB,KAAKA,UAAL,CAAgByF,IAAhB,CAAqB,2BAArB;AACrB,YAAI,KAAKxF,QAAT,EAAmB,KAAKA,QAAL,CAAcwF,IAAd,CAAmB,2BAAnB;AACnB,YAAI,KAAKvF,SAAT,EAAoB,KAAKA,SAAL,CAAeuF,IAAf,CAAoB,2BAApB;AACvB,KAhRI;AAkRL8B,UAlRK,kBAkREiC,IAlRF,EAkRQ;AAAA;;AAET;AACA,aAAKC,uBAAL;AACA,YAAI5J,SAAS,CAAb;AAJS,YAKD6J,UALC,GAK6CF,IAL7C,CAKDE,UALC;AAAA,YAKWC,UALX,GAK6CH,IAL7C,CAKWG,UALX;AAAA,YAKuBC,iBALvB,GAK6CJ,IAL7C,CAKuBI,iBALvB;;AAMT,YAAI,CAACrL,OAAOsL,OAAP,CAAeH,UAAf,CAAL,EAAiC;AAAA,gBACnBI,YADmB,GACFJ,UADE,CACvBK,EADuB;;AAE7B,gBAAID,YAAJ,EAAkB;AACd,qBAAKE,gBAAL,GAAwB,KAAKC,qBAAL,CAA2BH,YAA3B,CAAxB;AACH;AACD,gBAAI,KAAKE,gBAAL,IAAyB,KAAKvI,IAAL,CAAU8B,MAAV,CAAiB2G,yBAA9C,EAAyE;AACrE,qBAAKC,qBAAL;AACH;AACD,gBAAI,KAAKC,gBAAT,EAA2B;AAC9B;;AAED,aAAKtH,eAAL,GAAuB,IAAvB;AACA,YAAI,CAACvE,OAAOsL,OAAP,CAAeH,UAAf,CAAD,IAA+B,CAACnL,OAAOsL,OAAP,CAAeH,WAAWW,YAA1B,CAAhC,IAA2EX,WAAWW,YAAX,CAAwBC,mBAAvG,EAA4H;AACxHzK,qBAAS6J,WAAWW,YAAX,CAAwBC,mBAAjC;AACH;AACD,YAAI,CAAC/L,OAAOsL,OAAP,CAAeH,UAAf,CAAD,IAA+B,CAACnL,OAAOsL,OAAP,CAAeH,WAAWa,IAA1B,CAApC,EAAqE;AACjE,gBAAMC,cAAcd,WAAWa,IAAX,CAAgBE,KAAhB,CAAsB,GAAtB,CAApB;AACA,gBAAIC,QAAQ,EAAZ;AACAF,wBAAY7E,OAAZ,CAAoB,gBAAQ;AACxB+E,sBAAMC,KAAKF,KAAL,CAAW,GAAX,EAAgB,CAAhB,EAAmB,CAAnB,CAAN,IAA+BG,OAAOD,KAAKF,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAP,CAA/B;AACH,aAFD;AAGA,iBAAKhJ,IAAL,CAAUiD,cAAV,CAAyBmG,gBAAzB,CAA0CC,gBAA1C,CAA2D,KAAKrJ,IAAL,CAAU8B,MAArE,EAA6EmH,KAA7E;AACA,iBAAKK,uBAAL,CAA6BrB,WAAWa,IAAxC;AACH;AACD,aAAK7K,GAAL,CAAS+F,IAAT,CAAc,UAAd,EAA0B,EAAEd,QAAQ,KAAKlD,IAAL,CAAU8B,MAAV,CAAiByH,OAA3B,EAAoCC,OAAO,KAAKxJ,IAAL,CAAU8B,MAAV,CAAiB2H,WAA5D,EAA1B;;AAEA,aAAKxL,GAAL,CAASoC,EAAT,CAAY,YAAZ,EAA0B,UAACmJ,KAAD,EAAW;AACjC,mBAAKrL,OAAL,CAAa6F,IAAb,CAAkB,gBAAlB;AACA,mBAAKxE,WAAL,IAAoB,OAAKA,WAAL,CAAiBkK,cAAjB,EAApB;AACA,gBAAI,OAAK3G,SAAL,IAAkByG,KAAtB,EAA6B;AACzB,uBAAKG,cAAL,CAAoBH,KAApB;AACH;AACD,mBAAKI,iBAAL,CAAuBJ,KAAvB;AACH,SAPD;AAQA,aAAKrL,OAAL,CAAa6F,IAAb,CAAkB,kBAAlB,EAAsC,KAAKhE,IAAL,CAAUiD,cAAV,CAAyBC,MAA/D,EAAuE6E,IAAvE,EAA6E,KAAKtC,gBAAlF;AACA,aAAK3B,WAAL,GAAmB,IAAnB;AACA,aAAK1F,MAAL,CAAY4F,IAAZ,CAAiB,eAAjB,EAAkC,EAAE6F,QAAQzL,MAAV,EAAlC;AACA,aAAKe,cAAL,IAAuB,KAAKA,cAAL,CAAoB6E,IAApB,CAAyB,gBAAzB,CAAvB;AACA,aAAK/E,WAAL,IAAoB,KAAKA,WAAL,CAAiB+E,IAAjB,CAAsB,iBAAtB,CAApB;;AAEA,aAAK8D,UAAL,CAAgBhL,OAAOgN,KAAP,CAAa/B,IAAb,CAAhB;AACA;AACA,YAAIG,UAAJ,EAAgB;AACZ,iBAAK3J,UAAL,CAAgByF,IAAhB,CAAqB,cAArB;AACA,iBAAK+F,UAAL;AACA,iBAAKC,qBAAL;AACA,iBAAKpG,SAAL,CAAe,QAAf,EAAyBsE,UAAzB;AACA,gBAAIC,iBAAJ,EAAuB;AACnB,oBAAM8B,WAAW,IAAjB;AACA,qBAAKC,eAAL,CAAqB/B,iBAArB,EAAwC8B,QAAxC;AACH;AACJ,SATD,MAUK;AACD,iBAAK1L,UAAL,CAAgByF,IAAhB,CAAqB,aAArB;AACA,gBAAImE,iBAAJ,EAAuB;AACnB,qBAAK+B,eAAL,CAAqB/B,iBAArB;AACH,aAFD,MAEO;AACH,qBAAKgC,SAAL;AACA,qBAAKlF,iBAAL,CAAuB,IAAvB;AACH;AACJ;AACD,YAAMmF,iBAAiB,KAAK9G,eAAL,IAAwB,KAAKA,eAAL,CAAqB+G,QAApE;AACA,YAAID,kBAAkBlC,UAAtB,EAAkC;AAC9B,iBAAK5E,eAAL,CAAqB+G,QAArB,CAA8BC,aAA9B;AACH;AACD,YAAI,KAAK7I,WAAT,EAAsB;AAClB,iBAAKzB,IAAL,CAAUiD,cAAV,CAAyBsH,UAAzB,GAAsC,IAAtC;AACA,iBAAKC,aAAL;AACH;AACD,YAAI,KAAKxM,OAAT,EAAkB;AACd,iBAAKA,OAAL,CAAagG,IAAb,CAAkB,2BAAlB,EAA+C,KAAKyB,gBAApD;AACH;AACJ,KAhWI;AAkWL+E,iBAlWK,2BAkWW;AACZ,aAAKC,QAAL,GAAgB,CAAhB;AACA,aAAKC,iBAAL;AACA,aAAKlL,WAAL,CAAiBmL,YAAjB;AACA,aAAKC,sBAAL;AACA,aAAKC,UAAL;AACH,KAxWI;AAyWLD,0BAzWK,oCAyWoB;AAAA;;AACrB,aAAKE,WAAL,GAAmB,KAAK9K,IAAL,CAAU+K,uBAAV,CAAkCtN,GAAGuN,MAArC,CAAnB;AACA,aAAKF,WAAL,CAAiB5G,OAAjB,CAAyB,eAAO;AAC5B+G,gBAAIjL,IAAJ,CAASK,EAAT,CAAY5C,GAAGK,IAAH,CAAQoN,SAAR,CAAkBC,WAA9B,EAA2C,YAAM;AAC7C,oBAAIF,IAAIG,YAAR,EAAsB;AAClB,2BAAKpL,IAAL,CAAUiD,cAAV,CAAyBoI,cAAzB,GAA0CC,KAAKC,GAAL,EAA1C;AACH;AACJ,aAJD;AAKH,SAND;AAOH,KAlXI;AAmXLV,cAnXK,wBAmXQ;AAAA;;AACT,aAAK7K,IAAL,CAAUiD,cAAV,CAAyBuI,QAAzB,GAAoC,CAApC;AACA,aAAKC,cAAL,GAAsBhO,GAAGiO,KAAH,CAAS,IAAT,EACjBC,KADiB,CACX,CADW,EAEjBC,IAFiB,CAEZ,YAAM;AACR,mBAAK5L,IAAL,CAAUiD,cAAV,CAAyBuI,QAAzB;AADQ,uCAE0C,OAAKxL,IAAL,CAAUiD,cAFpD;AAAA,gBAEA4I,UAFA,wBAEAA,UAFA;AAAA,gBAEYvI,eAFZ,wBAEYA,eAFZ;AAAA,gBAE6BkI,QAF7B,wBAE6BA,QAF7B;;AAGR,gBAAIlI,oBAAoB,YAAxB,EAAsC;AACtC,gBAAIuI,UAAJ,EAAgB;AAChB,gBAAIL,WAAW,EAAf,EAAmB,OAAKM,iBAAL;AACtB,SARiB,EASjBC,KATiB,GAUjBC,aAViB,GAWjBpK,KAXiB,EAAtB;AAYH,KAjYI;AAkYLkK,qBAlYK,+BAkYe;AAAA;;AAChB,YAAI,CAAC,KAAKrK,WAAV,EAAuB;AADP,oCAEqB,KAAKzB,IAAL,CAAUiD,cAF/B;AAAA,YAET4I,UAFS,yBAETA,UAFS;AAAA,YAEEvI,eAFF,yBAEEA,eAFF;;AAGhB,YAAI,KAAK2I,oBAAT,EAA+B;AAC/B,aAAKA,oBAAL,GAA4B,IAA5B;AACA,YAAI3I,oBAAoB,YAApB,IAAoCuI,UAAxC,EAAoD;AAChD,iBAAKvI,eAAL,CAAqB+G,QAArB,CAA8B6B,iBAA9B;AACH;AAPe,oCAQc,KAAKlM,IAAL,CAAU8B,MAAV,CAAiBG,cAR/B;AAAA,YAQRkK,IARQ,yBAQRA,IARQ;AAAA,YAQFC,WARE,yBAQFA,WARE;;AAShB,aAAKC,YAAL,CAAkBF,IAAlB,EAAwB;AACpBG,qBAASF,WADW;AAEpBG,yBAAa,uBAAM;AACf,uBAAKN,oBAAL,GAA4B,KAA5B;AACA,uBAAKjM,IAAL,CAAUiD,cAAV,CAAyBuI,QAAzB,GAAoC,CAApC;AACA,uBAAKgB,mBAAL;AACA,uBAAKC,YAAL,CAAkB,YAAM;AACpB,wBAAI,OAAOC,kBAAP,KAA8B,UAAlC,EAA8C;AAC1CA;AACH,qBAFD,MAEO;AACHhQ;AACH;AACJ,iBAND,EAMG,GANH;AAOH,aAbmB;AAcpBiQ,0BAAc,wBAAM;AAChB,uBAAKV,oBAAL,GAA4B,KAA5B;AACA,uBAAKjM,IAAL,CAAUiD,cAAV,CAAyBuI,QAAzB,GAAoC,CAApC;AACH;AAjBmB,SAAxB;AAmBH,KA9ZI;AA+ZLoB,wBA/ZK,kCA+ZkB;AACnB,YAAI,CAAC,KAAKnL,WAAV,EAAuB;AACvB,YAAI,KAAKzB,IAAL,CAAUiD,cAAV,CAAyB4J,SAAzB,KAAuC,IAA3C,EAAiD;AACjD,YAAI,KAAKpC,QAAL,KAAkB,IAAtB,EAA4B;AAC5B,aAAKA,QAAL;AACA,YAAI,KAAKA,QAAL,KAAkB,CAAtB,EAAyB;AACrB,iBAAKqC,qBAAL;AACA,iBAAKrC,QAAL,GAAgB,IAAhB;AACH;AACJ,KAxaI;AAyaLqC,yBAzaK,mCAyamB;AAAA;;AAAA,qCACY,KAAK9M,IAAL,CAAU8B,MAAV,CAAiBG,cAD7B;AAAA,YACZkK,IADY,0BACZA,IADY;AAAA,YACNY,aADM,0BACNA,aADM;;AAEpB,aAAKV,YAAL,CAAkBF,IAAlB,EAAwB;AACpBG,qBAASS,aADW;AAEpBR,yBAAa,uBAAM;AACf,uBAAKrO,KAAL,CAAW8F,IAAX,CAAgB,SAAhB;AACH,aAJmB;AAKpB2I,0BAAc,wBAAM,CAAG;AALH,SAAxB;AAOH,KAlbI;AAobL3G,kBApbK,0BAobUgH,IApbV,EAobgBC,IApbhB,EAobsB;AACvB,YAAI,CAAC,KAAKC,gBAAL,CAAsBF,IAAtB,CAAL,EAAkC;AAClC,YAAIC,IAAJ,EAAU,OAAO,KAAKE,YAAL,EAAP;AACV,aAAKhP,OAAL,CAAa6F,IAAb,CAAkB,wBAAlB,EAA4CgJ,KAAKI,MAAjD;AACA3P,WAAG4P,IAAH,CAAQ,gBAAR,EAA0B,aAA1B,EAAyCC,KAAKC,SAAL,CAAeP,KAAKI,MAApB,CAAzC;AACH,KAzbI;AA2bLlH,oBA3bK,4BA2bY8G,IA3bZ,EA2bkBC,IA3blB,EA2bwB;AACzB,YAAI,CAAC,KAAKC,gBAAL,CAAsBF,IAAtB,CAAL,EAAkC;AAClC,YAAIC,IAAJ,EAAU,OAAO,KAAKE,YAAL,EAAP;AACV,aAAKhP,OAAL,CAAa6F,IAAb,CAAkB,oBAAlB,EAAwCgJ,KAAKI,MAA7C;AACH,KA/bI;AAicLpG,0BAjcK,kCAickBgG,IAjclB,EAicwBC,IAjcxB,EAic8B,CAClC,CAlcI;AAocLC,oBApcK,4BAocYF,IApcZ,EAockB;AACnB,YAAI,CAACA,IAAD,IAAS,CAACA,KAAKI,MAAf,IACA,CAAC,KAAKpN,IAAL,CAAU8B,MAAV,CAAiB0L,yBADlB,IAC+C,KAAKvG,QADpD,IAEA,KAAKlE,SAFL,IAEkB,KAAK/C,IAAL,CAAUiD,cAAV,CAAyBK,eAAzB,KAA6C,WAFnE,EAEgF,OAAO,KAAP;AAChF,eAAO,IAAP;AACH,KAzcI;AA4cLmK,kBA5cK,4BA4cY;AACb,YAAG,CAAC,KAAKzN,IAAL,CAAU8B,MAAV,CAAiB0L,yBAArB,EAAgD;AAChD,YAAI,CAAC,KAAKzK,SAAV,EAAqB;AACjB,iBAAK5E,OAAL,CAAa6F,IAAb,CAAkB,wBAAlB;AACH;AACJ,KAjdI;AAkdLgG,yBAldK,mCAkdmB;AACpB;AACH,KApdI;;;AAsdL;AACApE,eAvdK,uBAudOoH,IAvdP,EAuda;AACd,aAAKpJ,SAAL,CAAe,QAAf,EAAyBoJ,IAAzB;AACA,YAAI,KAAKxN,WAAL,IAAoB,KAAKuD,SAA7B,EAAwC;AACpC,iBAAKvD,WAAL,CAAiBkO,aAAjB,CAA+BV,IAA/B;AACH;AACJ,KA5dI;AA6dLW,uBA7dK,iCA6diB;AAClB,YAAI,KAAKrK,eAAL,IAAwB,KAAKA,eAAL,CAAqB+G,QAA7C,IAAyD,KAAK/G,eAAL,CAAqB+G,QAArB,CAA8BuD,iBAA3F,EAA8G;AAC1G,iBAAKtK,eAAL,CAAqB+G,QAArB,CAA8BuD,iBAA9B;AACH;AACJ,KAjeI;AAkeL/H,cAleK,wBAkeQ;AAAA;;AACT,aAAKgI,UAAL,GAAkB,IAAlB;AACA,YAAI,CAAC,KAAK7N,IAAV,EAAgB;AAChB,aAAKA,IAAL,CAAU4D,SAAV,CAAoBnG,GAAGqQ,QAAH,CAChBrQ,GAAGsQ,SAAH,CAAa,GAAb,CADgB,EAEhBtQ,GAAGuQ,QAAH,CAAY,YAAM;AAAA,gBACNC,eADM,GACc,OAAKjO,IAAL,CAAU8B,MAAV,CAAiBG,cAD/B,CACNgM,eADM;;AAEd,mBAAKC,sBAAL,CAA4BD,eAA5B,EAA6CzR,eAA7C;AACA,gBAAI,OAAK8G,eAAL,IAAwB,OAAKA,eAAL,CAAqB+G,QAA7C,IAAyD,OAAK/G,eAAL,CAAqB+G,QAArB,CAA8B8D,KAA3F,EAAkG;AAC9F,uBAAK7K,eAAL,CAAqB+G,QAArB,CAA8BuD,iBAA9B;AACA,uBAAKtK,eAAL,CAAqB+G,QAArB,CAA8B8D,KAA9B,CAAoCnK,IAApC,CAAyC,gBAAzC;AACH;AACJ,SAPD,CAFgB,CAApB;AAWH,KAhfI;AAifLoK,gBAjfK,0BAifU;AACX,eAAO,KAAKP,UAAZ;AACH,KAnfI;AAofLrB,uBApfK,iCAofiB;AAClB,aAAK6B,qBAAL,GAA6B,IAA7B;AACA,aAAKhC,YAAL,CAAkB,cAAlB;AACH,KAvfI;AAwfL6B,0BAxfK,kCAwfkBI,IAxflB,EAwfwBC,SAxfxB,EAwfmC;AAAA;;AAAA,YAC5BpC,IAD4B,GACnB,KAAKnM,IAAL,CAAU8B,MAAV,CAAiBG,cADE,CAC5BkK,IAD4B;;AAEpC,YAAM7K,kBAAkBjF,QAAQ,iBAAR,CAAxB;;AAFoC,qCAGXiF,gBAAgBC,SAAhB,EAHW;AAAA,YAG5BC,YAH4B,0BAG5BA,YAH4B;;AAKpC,YAAIA,YAAJ,EAAkB;AACd,gBAAMgN,kBAAkBnS,QAAQ,iBAAR,CAAxB;AACA,gBAAMoS,cAAcD,gBAAgBE,6BAAhB,EAApB;AACA,gBAAID,WAAJ,EAAiB;AACb,qBAAKpC,YAAL,CAAkBF,IAAlB,EAAwB;AACpBG,6BAASgC,IADW,EACL/B,aAAa,uBAAM;AAC9B,+BAAKC,mBAAL;AACA,+BAAKC,YAAL,CAAkB,YAAM;AACpB+B,4CAAgB9R,qBAAhB;AACH,yBAFD,EAEG,GAFH;AAGH;AANmB,iBAAxB;AAQH,aATD,MASO;AACH,qBAAK2P,YAAL,CAAkBF,IAAlB,EAAwB;AACpBG,6BAASgC;AADW,iBAAxB;AAGH;AACJ,SAjBD,MAiBO;AACH,iBAAKjC,YAAL,CAAkBF,IAAlB,EAAwB;AACpBG,yBAASgC,IADW,EACL/B,aAAa,uBAAM;AAC9B,2BAAKC,mBAAL;AACA,wBAAI/O,GAAGkR,GAAH,CAAOC,QAAP,IAAmB,OAAQC,gBAAR,KAA8B,UAArD,EAAiE;AAC7DN;AACH,qBAFD,MAEO;AACH,+BAAK9B,YAAL,CAAkB,YAAM;AACpB8B;AACH,yBAFD,EAEG,GAFH;AAGH;AACJ;AAVmB,aAAxB;AAYH;AACJ,KA5hBI;AA6hBLnI,yBA7hBK,mCA6hBmB;AAAA;;AACpB,YAAI,CAAC,KAAKpG,IAAV,EAAgB;AAChB,aAAKA,IAAL,CAAU4D,SAAV,CAAoBnG,GAAGqQ,QAAH,CAChBrQ,GAAGsQ,SAAH,CAAa,GAAb,CADgB,EAEhBtQ,GAAGuQ,QAAH,CAAY,YAAM;AAAA,gBACNc,aADM,GACY,QAAK9O,IAAL,CAAU8B,MAAV,CAAiBG,cAD7B,CACN6M,aADM;;AAEd,oBAAKZ,sBAAL,CAA4BY,aAA5B,EAA2CtS,eAA3C;AACH,SAHD,CAFgB,CAApB;AAOH,KAtiBI;AAuiBLoK,oBAviBK,8BAuiBc;AAAA;;AACf,YAAI,CAAC,KAAK5G,IAAV,EAAgB;AAChB,aAAKA,IAAL,CAAU4D,SAAV,CAAoBnG,GAAGqQ,QAAH,CAChBrQ,GAAGsQ,SAAH,CAAa,GAAb,CADgB,EAEhBtQ,GAAGuQ,QAAH,CAAY,YAAM;AAAA,gBACNe,eADM,GACc,QAAK/O,IAAL,CAAU8B,MAAV,CAAiBG,cAD/B,CACN8M,eADM;;AAEd,oBAAKb,sBAAL,CAA4Ba,eAA5B,EAA6CvS,eAA7C;AACH,SAHD,CAFgB,CAApB;AAOH,KAhjBI;AAkjBLqK,mBAljBK,6BAkjBa;AAAA;;AACd,YAAI,CAAC,KAAK7G,IAAV,EAAgB;AAChB,aAAKA,IAAL,CAAU4D,SAAV,CAAoBnG,GAAGqQ,QAAH,CAChBrQ,GAAGsQ,SAAH,CAAa,GAAb,CADgB,EAEhBtQ,GAAGuQ,QAAH,CAAY,YAAM;AAAA,gBACNgB,cADM,GACa,QAAKhP,IAAL,CAAU8B,MAAV,CAAiBG,cAD9B,CACN+M,cADM;;AAEd,oBAAKd,sBAAL,CAA4Bc,cAA5B,EAA4CxS,eAA5C;AACH,SAHD,CAFgB,CAApB;AAOH,KA3jBI;AA4jBLyS,oBA5jBK,4BA4jBYC,MA5jBZ,EA4jBoB;AACrB,YAAI,KAAKrB,UAAT,EAAqB;;AAErB,YAAIqB,UAAU,kBAAd,EAAkC;AAAA,gBACtBC,aADsB,GACJ,KAAKnP,IAAL,CAAU8B,MAAV,CAAiBG,cADb,CACtBkN,aADsB;;AAE9B,iBAAKjB,sBAAL,CAA4BiB,aAA5B,EAA2C5S,iBAA3C;AACH;AACD,YAAI,KAAK+G,eAAL,IAAwB,KAAKA,eAAL,CAAqB+G,QAA7C,IAAyD,KAAK/G,eAAL,CAAqB+G,QAArB,CAA8B8D,KAA3F,EAAkG;AAC9F,iBAAK7K,eAAL,CAAqB+G,QAArB,CAA8B8D,KAA9B,CAAoCnK,IAApC,CAAyC,gBAAzC;AACH;AACJ,KAtkBI;AAwkBLkG,mBAxkBK,2BAwkBWkF,QAxkBX,EAwkBuC;AAAA;;AAAA,YAAlBnF,QAAkB,uEAAP,KAAO;;AACxC,YAAImF,QAAJ,EAAc;AACV,iBAAKrF,UAAL;AACA,gBAAI,KAAK/J,IAAL,IAAa,KAAKA,IAAL,CAAUiD,cAA3B,EAA2C;AAAA,oBAC/BuG,KAD+B,GACY4F,QADZ,CAC/B5F,KAD+B;AAAA,oBACxB6F,eADwB,GACYD,QADZ,CACxBC,eADwB;AAAA,oBACPC,cADO,GACYF,QADZ,CACPE,cADO;;AAEvC,qBAAKtP,IAAL,CAAUiD,cAAV,CAAyBsM,SAAzB,GAAqC,IAArC;AACA,qBAAKvP,IAAL,CAAUiD,cAAV,CAAyBoM,eAAzB,GAA2CA,eAA3C;AACA,qBAAKrP,IAAL,CAAUiD,cAAV,CAAyBuM,cAAzB,GAA0ChG,KAA1C;AACA,qBAAKxJ,IAAL,CAAUiD,cAAV,CAAyBqM,cAAzB,GAA0CA,cAA1C;AACA,qBAAKG,gBAAL,CAAsBxF,QAAtB;AACH,aAPD,MAOO;AACH,qBAAKjK,IAAL,CAAU4D,SAAV,CAAoBnG,GAAGqQ,QAAH,CAChBrQ,GAAGsQ,SAAH,CAAa,KAAKxI,WAAlB,CADgB,EAEhB9H,GAAGuQ,QAAH,CAAY,YAAM;AACd,4BAAK1K,eAAL,CAAqB+G,QAArB,CAA8BqF,mBAA9B,CAAkDN,QAAlD;AACA,4BAAKO,kBAAL,CAAwB1F,QAAxB;AACH,iBAHD,CAFgB,CAApB;AAOA;AACH;AACJ;AACJ,KA7lBI;AA+lBLwF,oBA/lBK,4BA+lBYxF,QA/lBZ,EA+lBsB;AAAA;;AACvB,aAAKjK,IAAL,CAAU4D,SAAV,CAAoBnG,GAAGqQ,QAAH,CAChBrQ,GAAGsQ,SAAH,CAAa,IAAb,CADgB,EAEhBtQ,GAAGuQ,QAAH,CAAY,YAAM;AACd,gBAAI,QAAK1K,eAAL,IAAwB,QAAKA,eAAL,CAAqB+G,QAAjD,EAA2D;AACvD,wBAAKsF,kBAAL,CAAwB1F,QAAxB;AACH,aAFD,MAEO;AACH,wBAAKwF,gBAAL,CAAsBxF,QAAtB;AACH;AACJ,SAND,CAFgB,CAApB;AAUH,KA1mBI;AA4mBL0F,sBA5mBK,8BA4mBc1F,QA5mBd,EA4mBwB;AAAA;;AACzB,YAAIA,QAAJ,EAAc;AADW,oCAEuC,KAAKjK,IAAL,CAAUiD,cAFjD;AAAA,YAEjBoM,eAFiB,yBAEjBA,eAFiB;AAAA,YAEAG,cAFA,yBAEAA,cAFA;AAAA,YAEgBI,kBAFhB,yBAEgBA,kBAFhB;AAAA,YAGjBzD,IAHiB,GAGR,KAAKnM,IAAL,CAAU8B,MAAV,CAAiBG,cAHT,CAGjBkK,IAHiB;;AAIzB,YAAM0D,gBAAgB,KAAKvM,eAAL,CAAqB+G,QAArB,CAA8ByF,gBAA9B,CAA+CN,cAA/C,CAAtB;;AAEA,YAAIO,UAAU,KAAK/N,gBAAL,CAAsBgO,OAAtB,CAA8B,KAA9B,EAAqCX,eAArC,EAAsDW,OAAtD,CAA8D,KAA9D,EAAqErT,kBAAkBkT,aAAlB,CAArE,CAAd;AACA,YAAID,kBAAJ,EAAwB;AACpB,oBAAQA,kBAAR;AACI,qBAAKxS,gBAAgBG,KAArB;AACIwS,8BAAU,KAAK5N,cAAL,CAAoB6N,OAApB,CAA4B,KAA5B,EAAmCX,eAAnC,EAAoDW,OAApD,CAA4D,KAA5D,EAAmErT,kBAAkBkT,aAAlB,CAAnE,CAAV;AACA;AACJ,qBAAKzS,gBAAgBI,GAArB;AACIuS,8BAAU,KAAK1N,YAAL,CAAkB2N,OAAlB,CAA0B,KAA1B,EAAiCX,eAAjC,EAAkDW,OAAlD,CAA0D,KAA1D,EAAiErT,kBAAkBkT,aAAlB,CAAjE,CAAV;AACA;AANR;AAQA,iBAAK7P,IAAL,CAAUiD,cAAV,CAAyB2M,kBAAzB,GAA8C,IAA9C;AACH;AACD,aAAKK,cAAL;AACA,aAAK5D,YAAL,CAAkBF,IAAlB,EAAwB;AACpBG,qBAASyD,OADW,EACFxD,aAAa,uBAAM;AACjC,wBAAK2D,iBAAL;AACH;AAHmB,SAAxB;AAKA,aAAKC,sBAAL,GAA8B1S,GAAGqQ,QAAH,CAC1BrQ,GAAGsQ,SAAH,CAAa,CAAb,CAD0B,EAE1BtQ,GAAGuQ,QAAH,CAAY,YAAM;AACd,oBAAK1P,QAAL,CAAc0F,IAAd,CAAmB,gBAAnB,EAAqCmI,IAArC;AACH,SAFD,CAF0B,CAA9B;AAMA,YAAI,KAAKgE,sBAAT,EAAiC;AAC7B,iBAAKnQ,IAAL,CAAU4D,SAAV,CAAoB,KAAKuM,sBAAzB;AACH;AACJ,KA7oBI;AA+oBLD,qBA/oBK,+BA+oBe;AAChB,YAAI,KAAKlQ,IAAL,IAAa,KAAKmQ,sBAAtB,EAA8C;AAC1C,iBAAKnQ,IAAL,CAAUoQ,UAAV,CAAqB,KAAKD,sBAA1B;AACH;AACJ,KAnpBI;AAqpBLF,kBArpBK,4BAqpBY;AACb,aAAK3M,eAAL,CAAqB+G,QAArB,CAA8BgG,gBAA9B;AACH,KAvpBI;AAypBLC,qBAzpBK,6BAypBaC,cAzpBb,EAypB6B;AAC9B,YAAI,KAAKvQ,IAAL,CAAUiD,cAAV,CAAyBK,eAAzB,IAA4C,UAAhD,EAA4D;AACxD,iBAAKmC,gBAAL,CAAsB+K,sBAAtB;AACH,SAFD,MAEO;AACH,iBAAK/K,gBAAL,CAAsBgL,kBAAtB,CAAyCF,cAAzC;AACH;AACJ,KA/pBI;AAiqBLG,iBAjqBK,2BAiqBW;AACZ;AACA;AACH,KApqBI;;;AAsqBL;AACAC,eAvqBK,6BAuqBuBC,QAvqBvB,EAuqBiC;AAAA,YAAxBrN,IAAwB,QAAxBA,IAAwB;AAAA,YAAlByJ,IAAkB,QAAlBA,IAAkB;;AAClC,YAAI,KAAKzJ,IAAL,CAAJ,EAAgB;AACZ,iBAAKkK,cAAL;AACA,iBAAKnK,eAAL,CAAqBuN,IAArB;AACA,iBAAK7Q,IAAL,CAAUiD,cAAV,CAAyBK,eAAzB,GAA2CC,IAA3C;AACA,iBAAKD,eAAL,GAAuB,KAAK,KAAKtD,IAAL,CAAUiD,cAAV,CAAyBK,eAA9B,CAAvB;AACA,iBAAKA,eAAL,CAAqBuE,KAArB,CAA2BmF,IAA3B,EAAiC4D,QAAjC;AACH;AACJ,KA/qBI;AAgrBLE,kBAhrBK,iCAgrBoBF,QAhrBpB,EAgrB8B;AAAA,YAAlBrN,IAAkB,SAAlBA,IAAkB;;AAC/B,YAAI,KAAKA,IAAL,CAAJ,EAAgB;AACZ,iBAAKvD,IAAL,CAAUiD,cAAV,CAAyBK,eAAzB,GAA2CC,IAA3C;AACA,iBAAKD,eAAL,GAAuB,KAAK,KAAKtD,IAAL,CAAUiD,cAAV,CAAyBK,eAA9B,CAAvB;AACA,iBAAKA,eAAL,CAAqBsE,IAArB,CAA0BgJ,QAA1B;AACH;AACJ,KAtrBI;AAwrBLvE,gBAxrBK,wBAwrBQ9I,IAxrBR,EAwrBcwN,OAxrBd,EAwrBuBH,QAxrBvB,EAwrBiC;AAClC,aAAKtS,QAAL,CAAc0F,IAAd,CAAmB,eAAnB,EAAoCT,IAApC,EAA0CwN,OAA1C,EAAmDH,QAAnD;AACH,KA1rBI;AA4rBL7M,mBA5rBK,2BA4rBWiN,OA5rBX,EA4rBoB;AACrB,aAAKtQ,aAAL,CAAmB,aAAnB;AACA,aAAKV,IAAL,CAAUiD,cAAV,CAAyB4J,SAAzB,GAAqCmE,OAArC;AACH,KA/rBI;AAisBLC,gBAjsBK,0BAisBuB;AAAA,YAAfC,KAAe,uEAAP,KAAO;;AACxB,aAAKlR,IAAL,CAAUiD,cAAV,CAAyB4J,SAAzB,GAAqCqE,KAArC;AACH,KAnsBI;AAqsBLC,aArsBK,4BAqsB+C;AAAA,gCAAxC3H,KAAwC;AAAA,YAAxCA,KAAwC,+BAAhC,KAAKxJ,IAAL,CAAU8B,MAAV,CAAiB2H,WAAe;;AAChD,aAAKxL,GAAL,CAAS+F,IAAT,CAAc,YAAd,EAA4BwF,KAA5B;AACH,KAvsBI;AAysBLO,cAzsBK,wBAysBsB;AAAA,YAAhBqH,MAAgB,uEAAP,KAAO;;AACvB,YAAI,KAAKrM,kBAAL,MAA6BqM,MAAjC,EACI,KAAKnT,GAAL,CAAS+F,IAAT,CAAc,aAAd;AACP,KA5sBI;AA8sBLmG,aA9sBK,uBA8sBqB;AAAA,YAAhBiH,MAAgB,uEAAP,KAAO;;AACtB,YAAI,KAAKrM,kBAAL,MAA6BqM,MAAjC,EACI,KAAKnT,GAAL,CAAS+F,IAAT,CAAc,YAAd;AACP,KAjtBI;AAmtBLqN,gBAntBK,wBAmtBQC,MAntBR,EAmtBgB;AAAA;;AACjB,aAAKhO,eAAL,CAAqBsC,WAArB,CAAiC,YAAM;AACnC,oBAAK2L,iBAAL,CAAuBD,MAAvB;AACH,SAFD;AAGH,KAvtBI;AAwtBLE,gBAxtBK,wBAwtBQF,MAxtBR,EAwtBgB;AAAA;;AACjB,aAAKtR,IAAL,CAAU4D,SAAV,CAAoBnG,GAAGqQ,QAAH,CAChBrQ,GAAGsQ,SAAH,CAAa,KAAKxI,WAAlB,CADgB,EAEhB9H,GAAGuQ,QAAH,CAAY,YAAM;AACd,oBAAK1K,eAAL,CAAqBmO,WAArB,CAAiC,YAAM;AACnC,wBAAKF,iBAAL,CAAuBD,MAAvB;AACH,aAFD;AAGH,SAJD,CAFgB,CAApB;AAQH,KAjuBI;AAmuBLI,qBAnuBK,+BAmuBe;AAChB,eAAO,KAAK1R,IAAL,IAAa,KAAKA,IAAL,CAAU8B,MAAvB,IAAiC,KAAK9B,IAAL,CAAU8B,MAAV,CAAiBG,cAAlD,IAAoE,KAAKjC,IAAL,CAAU8B,MAAV,CAAiBG,cAAjB,CAAgCkK,IAA3G;AACH,KAruBI;AAuuBLwF,mBAvuBK,6BAuuBa;AACd,YAAIvO,cAAc,KAAK9E,QAAL,CAAc+E,YAAd,CAA2B,iBAA3B,CAAlB;AACA,eAAOD,eAAeA,YAAYuO,eAAZ,EAAtB;AACH,KA1uBI;AA4uBLC,qBA5uBK,+BA4uBe;AAChB,YAAIxO,cAAc,KAAK9E,QAAL,CAAc+E,YAAd,CAA2B,iBAA3B,CAAlB;AACA,eAAOD,eAAeA,YAAYwO,iBAAZ,EAAtB;AACH,KA/uBI;AAivBLC,gBAjvBK,0BAivBU;AACX,YAAI,CAAC,KAAKhE,UAAN,IAAoB,CAAC,KAAK7N,IAAL,CAAUiD,cAAV,CAAyB6O,iBAAlD,EACI,KAAK1T,MAAL,CAAY2T,gBAAZ,CAA6BC,iBAA7B;AACP,KApvBI;AAsvBLC,aAtvBK,uBAsvBO;AACR,aAAK/B,iBAAL;AACA,YAAIzS,GAAGkR,GAAH,CAAOC,QAAP,IAAmB,OAAQC,gBAAR,KAA8B,UAArD,EAAiE;AAC7DpR,eAAGyU,WAAH,CAAeC,OAAf;AACH;AACD1U,WAAGyJ,IAAH,CAAQkL,GAAR,CAAY3U,GAAGyJ,IAAH,CAAQC,UAApB,EAAgC,KAAKC,WAArC,EAAkD,IAAlD;AACA3J,WAAGyJ,IAAH,CAAQkL,GAAR,CAAY3U,GAAGyJ,IAAH,CAAQG,UAApB,EAAgC,KAAKC,WAArC,EAAkD,IAAlD;AACH,KA7vBI;AA+vBL+K,gBA/vBK,wBA+vBQC,KA/vBR,EA+vBe;AAChB7U,WAAG4M,QAAH,CAAYkI,YAAZ,GAA2BF,YAA3B,CAAwCC,KAAxC;AACH,KAjwBI;AAmwBLE,cAnwBK,wBAmwBQ;AACT,YAAI,CAAC,KAAK5T,gBAAN,IAA0B,CAAC,KAAKkF,WAApC,EAAiD;;AAEjD,YAAI,CAAC,KAAKf,SAAV,EAAqB;AACjB,iBAAK2H,iBAAL;AACA,iBAAK+H,iBAAL;AACH,SAHD,MAGO;AACH,iBAAKC,gBAAL;AACH;AACD,aAAKzU,GAAL,CAAS+F,IAAT,CAAc,aAAd,EAA6B,KAAKjB,SAAlC;AACH,KA7wBI;AA+wBL4P,eA/wBK,yBA+wBS;AACV,eAAO,KAAK5P,SAAZ;AACH,KAjxBI;AAmxBL6P,iBAnxBK,2BAmxBW;AACZ,aAAKzU,OAAL,CAAa6F,IAAb,CAAkB,gBAAlB;AACH,KArxBI;AAuxBL6O,oBAvxBK,8BAuxBc;AACf;AACA,YAAMC,kBAAkBrW,YAAY,iBAAZ,MAAmC,MAA3D;AACA,YAAM6E,kBAAkBjF,QAAQ,iBAAR,CAAxB;;AAHe,qCAIWiF,gBAAgBC,SAAhB,EAJX;AAAA,YAIPwR,aAJO,0BAIPA,aAJO;;AAKf,YAAI,CAACA,aAAD,IAAkBC,QAAlB,IAA8BF,eAAlC,EAAmD;AAC/C;AACH;AACD,YAAI,KAAK/P,SAAT,EAAoB;AAChB,iBAAK0C,gBAAL,CAAsBkF,YAAtB;AACH;AACJ,KAlyBI;AAoyBLD,qBApyBK,+BAoyBe;AAAA,2BAC0B,KAAK1K,IAAL,CAAU8B,MADpC;AAAA,YACRmR,OADQ,gBACRA,OADQ;AAAA,YACCC,oBADD,gBACCA,oBADD;;AAEhB,aAAKlU,iBAAL,CAAuBoB,MAAvB,GAAgC,IAAhC;AACA,aAAKtB,gBAAL,CAAsBsB,MAAtB,GAA+B,KAA/B;;AAEA,aAAK2C,SAAL,GAAiB,KAAK/C,IAAL,CAAUiD,cAAV,CAAyB0P,WAAzB,GAAuC,IAAxD;AACA,aAAKlN,gBAAL,CAAsB0N,aAAtB;;AAEA,YAAI,KAAKnU,iBAAL,CAAuBoU,UAAvB,IAAqC,KAAKpU,iBAAL,CAAuBoU,UAAvB,CAAkCC,MAAlC,KAA6C,KAAtF,EAA6F;AACzF,iBAAKrU,iBAAL,CAAuBoU,UAAvB,CAAkCE,eAAlC,CAAkDJ,oBAAlD,EAAwED,OAAxE;AACH;AACD,YAAI,KAAKjU,iBAAL,CAAuBoU,UAA3B,EAAuC;AACnC,iBAAKpU,iBAAL,CAAuBoU,UAAvB,CAAkCG,eAAlC;AACA,iBAAKvT,IAAL,CAAUiD,cAAV,CAAyBuQ,WAAzB,GAAuC,KAAKxU,iBAAL,CAAuBoU,UAAvB,CAAkCK,SAAzE;AACH;;AAED,aAAKlV,UAAL,CAAgByF,IAAhB,CAAqB,iBAArB;AACA,YAAI,KAAKxE,WAAT,EAAsB;AAClB,iBAAKA,WAAL,CAAiBQ,IAAjB,CAAsBI,MAAtB,GAA+B,IAA/B;AACA,iBAAKZ,WAAL,CAAiBkU,aAAjB;AACH;AACD,aAAK3J,UAAL;AACA,aAAK9K,WAAL,CAAiB+E,IAAjB,CAAsB,mBAAtB,EAA2C,IAA3C;AACA,aAAK7F,OAAL,CAAawV,OAAb,GAAuB,CAAvB;AACA,aAAKC,wBAAL,GAAgC,KAAK5T,IAAL,CAAUiD,cAAV,CAAyB4J,SAAzD;AACA,YAAI,KAAK7M,IAAL,CAAUiD,cAAV,CAAyB4J,SAA7B,EAAwC;AACpC,iBAAK3O,KAAL,CAAW8F,IAAX,CAAgB,UAAhB;AACH;AACJ,KAh0BI;AAk0BL0O,oBAl0BK,8BAk0Bc;AACf,YAAI,KAAKjR,WAAT,EAAsB;AAClB,iBAAKqK,iBAAL;AACA;AACH;AACD,aAAK/I,SAAL,GAAiB,KAAK/C,IAAL,CAAUiD,cAAV,CAAyB0P,WAAzB,GAAuC,KAAxD;AACA,aAAKlN,gBAAL,CAAsBoO,YAAtB;AACA,aAAKtV,UAAL,CAAgByF,IAAhB,CAAqB,gBAArB;AACA,aAAKlF,gBAAL,CAAsBsB,MAAtB,GAA+B,IAA/B;AACA,aAAKpB,iBAAL,CAAuBoB,MAAvB,GAAgC,KAAhC;AACA,YAAI,KAAKZ,WAAT,EAAsB;AAClB,iBAAKA,WAAL,CAAiBsU,gBAAjB;AACA,iBAAKtU,WAAL,CAAiBuU,oBAAjB;AACH;AACD,YAAI,KAAKH,wBAAT,EAAmC;AAC/B,iBAAK1V,KAAL,CAAW8F,IAAX,CAAgB,SAAhB;AACH,SAFD,MAEO;AACH,iBAAK9F,KAAL,CAAW8F,IAAX,CAAgB,UAAhB;AACH;AACD,aAAK7F,OAAL,CAAawV,OAAb,GAAuB,GAAvB;;AAEA,YAAI,KAAK3T,IAAL,CAAU8B,MAAV,CAAiBkS,qBAArB,EAA4C;AACxC,iBAAKC,mBAAL;AACH;AACJ,KA11BI;AA41BLA,uBA51BK,iCA41BiB;AAAA;;AAClB,aAAKxO,gBAAL,CAAsByO,cAAtB;AADkB,YAEV5Q,eAFU,GAEU,KAAKtD,IAAL,CAAUiD,cAFpB,CAEVK,eAFU;;AAGlB,aAAKtD,IAAL,CAAUiD,cAAV,CAAyB4I,UAAzB,GAAsC,KAAtC;AACA,aAAK7L,IAAL,CAAUiD,cAAV,CAAyBkR,SAAzB,GAAqC,CAArC;AACA,YAAI,KAAKnU,IAAL,CAAUiD,cAAV,CAAyBmR,WAA7B,EAA0C;AACtC,iBAAKpU,IAAL,CAAUiD,cAAV,CAAyBmR,WAAzB,CAAqC5V,QAArC,GAAgD,CAAhD;AACA,iBAAKwB,IAAL,CAAUiD,cAAV,CAAyBmR,WAAzB,CAAqC3V,SAArC,GAAiD,CAAjD;AACA,iBAAKuB,IAAL,CAAUiD,cAAV,CAAyBmR,WAAzB,CAAqCC,cAArC,GAAsD,CAAtD;AACA,iBAAKrU,IAAL,CAAUiD,cAAV,CAAyBmR,WAAzB,CAAqCE,eAArC,GAAuD,CAAvD;AACH;AACD,YAAMC,iBAAiBjR,oBAAoB,YAA3C;AACA,aAAKkR,yBAAL,CAA+BD,cAA/B;AACA,YAAIA,cAAJ,EAAoB;AAChB,iBAAK9H,YAAL,CAAkB,YAAM;AACpB,wBAAKqE,cAAL,CAAoB,EAAEvN,MAAM,YAAR,EAApB,EAA2C,YAAM,CAAE,CAAnD;AACH,aAFD,EAEG,CAFH;AAGA,gBAAI,KAAK9E,SAAT,EAAoB;AAChB,qBAAKA,SAAL,CAAeuF,IAAf,CAAoB,uBAApB,EAA6C,WAA7C;AACH;AACD,gBAAI,KAAKxF,QAAT,EAAmB;AACf,qBAAKA,QAAL,CAAcwF,IAAd,CAAmB,uBAAnB,EAA4C,UAA5C;AACH;AACJ;AACD,YAAI,KAAKzF,UAAT,EAAqB;AACjB,iBAAKA,UAAL,CAAgByF,IAAhB,CAAqB,uBAArB,EAA8C,YAA9C;AACH;AACD,aAAKxE,WAAL,IAAoB,KAAKA,WAAL,CAAiBiB,OAAjB,CAAyB,oBAAzB,CAApB;AACH,KAx3BI;AA03BL+T,6BA13BK,qCA03BqBD,cA13BrB,EA03BqC;AACtC,YAAI,KAAKvU,IAAL,CAAUyU,WAAd,EAA2B;AACvB,iBAAKzU,IAAL,CAAUyU,WAAV,CAAsBC,cAAtB;AACA,gBAAIH,cAAJ,EAAoB;AAChB,qBAAKvU,IAAL,CAAUyU,WAAV,CAAsBE,WAAtB;AACH;AACJ;AACJ,KAj4BI;AAm4BLC,oBAn4BK,4BAm4BYC,IAn4BZ,EAm4BkB;AACnB,YAAI,KAAK5V,WAAT,EAAsB;AAClB,iBAAKA,WAAL,CAAiB+E,IAAjB,CAAsB,gBAAtB,EAAwC6Q,IAAxC;AACH;AACJ,KAv4BI;AAy4BLC,gCAz4BK,0CAy4B0B;AAC3B,YAAI,KAAK9V,iBAAT,EAA4B;AACxB,iBAAKA,iBAAL,CAAuBoU,UAAvB,CAAkC0B,4BAAlC;AACA,iBAAK9U,IAAL,CAAUiD,cAAV,CAAyBuQ,WAAzB,GAAuC,KAAKxU,iBAAL,CAAuBoU,UAAvB,CAAkCK,SAAzE;AACH;AACJ,KA94BI;AAg5BLsB,qBAh5BK,+BAg5B4B;AAAA,YAAfC,SAAe,uEAAH,CAAG;;AAC7B,YAAI,KAAKhW,iBAAT,EAA4B;AACxB,iBAAKA,iBAAL,CAAuBoU,UAAvB,CAAkC2B,iBAAlC,CAAoDC,SAApD;AACA,iBAAKhV,IAAL,CAAUiD,cAAV,CAAyBuQ,WAAzB,GAAuC,KAAKxU,iBAAL,CAAuBoU,UAAvB,CAAkCK,SAAzE;AACH;AACJ,KAr5BI;AAu5BLnK,2BAv5BK,mCAu5BmBR,IAv5BnB,EAu5ByB;AAC1B,YAAI,KAAK3J,cAAL,IAAuB,KAAKA,cAAL,CAAoBkE,YAApB,CAAiC,gBAAjC,CAA3B,EAA+E;AAC3E,iBAAKlE,cAAL,CAAoBkE,YAApB,CAAiC,gBAAjC,EAAmD4R,aAAnD,CAAiEnM,IAAjE;AACH;AACJ,KA35BI;AA65BLoM,uBA75BK,+BA65BeC,IA75Bf,EA65BqB;AACtB,eAAO,KAAKtQ,iBAAL,MAA4B,KAAKrF,WAAL,CAAiB4V,aAAjB,CAA+BD,IAA/B,CAAnC;AACH,KA/5BI;AAi6BLE,sBAj6BK,8BAi6BcF,IAj6Bd,EAi6BoB;AACrB;AACA,eAAO,KAAKD,mBAAL,CAAyBC,IAAzB,KAAkC,KAAKpS,SAA9C;AACH,KAp6BI;AAs6BLlC,uBAt6BK,iCAs6BiB;AAClB,aAAK7C,OAAL,IAAgB,KAAKA,OAAL,CAAagG,IAAb,CAAkB,gBAAlB,CAAhB;AACA,aAAK7E,cAAL,IAAuB,KAAKA,cAAL,CAAoB6E,IAApB,CAAyB,gBAAzB,CAAvB;AACA,aAAKnG,WAAL,IAAoB,KAAKA,WAAL,CAAiBmG,IAAjB,CAAsB,gBAAtB,CAApB;AACA,aAAKjG,IAAL,IAAa,KAAKA,IAAL,CAAUiG,IAAV,CAAe,gBAAf,CAAb;AACA,aAAK9F,KAAL,IAAc,KAAKA,KAAL,CAAW8F,IAAX,CAAgB,gBAAhB,CAAd;AACH,KA56BI;AA86BLlD,wBA96BK,kCA86BkB;AACnB,aAAK9C,OAAL,IAAgB,KAAKA,OAAL,CAAagG,IAAb,CAAkB,iBAAlB,CAAhB;AACA,aAAK7E,cAAL,IAAuB,KAAKA,cAAL,CAAoB6E,IAApB,CAAyB,iBAAzB,CAAvB;AACA,aAAKnG,WAAL,IAAoB,KAAKA,WAAL,CAAiBmG,IAAjB,CAAsB,iBAAtB,CAApB;AACA,aAAKjG,IAAL,IAAa,KAAKA,IAAL,CAAUiG,IAAV,CAAe,iBAAf,CAAb;AACA,aAAK9F,KAAL,IAAc,KAAKA,KAAL,CAAW8F,IAAX,CAAgB,iBAAhB,CAAd;AACH,KAp7BI;AAs7BLyO,qBAt7BK,+BAs7Be;AAChB,aAAK1U,IAAL,IAAa,KAAKA,IAAL,CAAUiG,IAAV,CAAe,YAAf,CAAb;AACA,aAAKhG,OAAL,IAAgB,KAAKA,OAAL,CAAagG,IAAb,CAAkB,YAAlB,CAAhB;AACA,aAAK7E,cAAL,IAAuB,KAAKA,cAAL,CAAoB6E,IAApB,CAAyB,YAAzB,CAAvB;;AAEA,aAAKhG,OAAL,IAAgB,KAAKA,OAAL,CAAagG,IAAb,CAAkB,iBAAlB,CAAhB;AACA,aAAK7E,cAAL,IAAuB,KAAKA,cAAL,CAAoB6E,IAApB,CAAyB,iBAAzB,CAAvB;AACH,KA77BI;AA+7BL2F,kBA/7BK,0BA+7BUH,KA/7BV,EA+7BiB;AAAA,YACVP,KADU,GACA,KAAKjJ,IAAL,CAAUiD,cAAV,CAAyBmG,gBAAzB,CAA0C4D,IAD1C,CACV/D,KADU;;AAElB,YAAI,CAACrM,eAAeqM,KAAf,EAAsBO,KAAtB,CAAL,EAAmC;AAC/B;AACH;AACD,aAAKxK,iBAAL,CAAuBoU,UAAvB,CAAkCjC,SAAlC,CAA4C3H,KAA5C;AACH,KAr8BI;AAu8BL2D,gBAv8BK,0BAu8BU;AACX1P,WAAG+J,GAAH,CAAO,gBAAP;AACA,aAAKrJ,OAAL,CAAa6F,IAAb,CAAkB,eAAlB;AACH,KA18BI;AA28BLsR,iBA38BK,2BA28BW;AACZ7X,WAAG+J,GAAH,CAAO,gBAAP;AACA,aAAKrJ,OAAL,CAAa6F,IAAb,CAAkB,gBAAlB;AACH,KA98BI;AAg9BLqC,mBAh9BK,2BAg9BW6I,MAh9BX,EAg9BmB;AACpBzR,WAAG+J,GAAH,CAAO,iBAAP;AACA,YAAI,KAAKrG,qBAAT,EAAgC;;AAFZ,YAIZc,cAJY,GAIO,KAAKjC,IAAL,CAAU8B,MAJjB,CAIZG,cAJY;;AAKpB,YAAI8N,UAAU9N,eAAesT,YAA7B;AACA,gBAAQrG,MAAR;AACI,iBAAK/R,aAAaqY,eAAlB;AACIzF,0BAAU9N,eAAesT,YAAzB;AACA;;AAEJ,iBAAKpY,aAAasY,qBAAlB;AACI1F,0BAAU9N,eAAekN,aAAzB;AACA;AACJ,iBAAKhS,aAAauY,mBAAlB;AACI3F,0BAAU9N,eAAekN,aAAzB;AACA;AACJ,iBAAKhS,aAAawY,sBAAlB;AACI5F,0BAAU9N,eAAesT,YAAzB;AAZR;AAcA,aAAK5H,mBAAL;AACA,aAAKO,sBAAL,CAA4B6B,OAA5B,EAAqCxT,iBAArC;AACA,aAAK4E,qBAAL,GAA6B,IAA7B;AACH,KAv+BI;AAy+BLmF,kBAz+BK,0BAy+BUsP,IAz+BV,EAy+BgBxG,QAz+BhB,EAy+B0B;AAAA;;AAC3B3R,WAAG+J,GAAH,CAAO,gBAAP;AACA,YAAI,KAAKrG,qBAAT,EAAgC;AAFL,YAGnBc,cAHmB,GAGA,KAAKjC,IAAL,CAAU8B,MAHV,CAGnBG,cAHmB;;AAI3B,YAAI8N,UAAU9N,eAAesT,YAA7B;AACA,YAAIM,gBAAgB,KAApB;AACA,YAAIC,mBAAmB,KAAvB;;AAEA,gBAAQF,IAAR;AACI,iBAAK,MAAL;AACIA,uBAAO,IAAP;AACAC,gCAAgB,IAAhB;AACA9F,0BAAU9N,eAAesT,YAAzB;AACA;;AAEJ,iBAAK,OAAL;AACA,iBAAK,OAAL;AACA,iBAAK,QAAL;AACA,iBAAK,OAAL;AACIxF,0BAAU9N,eAAesT,YAAzB;AACA;;AAEJ,iBAAK,MAAL;AACIxF,0BAAU9N,eAAe8T,QAAzB;AACA;AACJ,iBAAK,MAAL;AACIhG,0BAAU9N,eAAe+T,cAAzB;AACAH,gCAAgB,IAAhB;AACA;AACJ,iBAAK,MAAL;AACI9F,0BAAU9N,eAAegU,cAAzB;AACAJ,gCAAgB,IAAhB;AACA;AACJ,iBAAK,MAAL;AACI9F,0BAAU9N,eAAeiU,kBAAzB;AACAL,gCAAgB,IAAhB;AACA;AACJ,iBAAKzY,gBAAgBC,SAArB;AACA,iBAAKD,gBAAgBG,KAArB;AACA,iBAAKH,gBAAgBI,GAArB;AACA,iBAAKJ,gBAAgBE,OAArB;AACIwY,mCAAmB,IAAnB;AACA;AACJ,iBAAK,MAAL;AACI/F,0BAAU9N,eAAekN,aAAzB;AACA0G,gCAAgB,IAAhB;AACA;AACJ,iBAAK,MAAL;AACI9F,0BAAU9N,eAAekU,WAAzB;AACAN,gCAAgB,IAAhB;AACA;AACJ,iBAAK,OAAL;AACA,iBAAK,OAAL;AACI9F,0BAAU9N,eAAemU,cAAzB;AACA;AACJ,iBAAK,OAAL;AACA,iBAAK,OAAL;AACIrG,0BAAU9N,eAAe8M,eAAzB;AACA;AAlDR;;AAqDAgB,kBAAUA,mBAAgB6F,IAAhB,OAAV;;AAEA,YAAIE,gBAAJ,EAAsB;AAClB,iBAAKO,oBAAL,CAA0BjH,QAA1B,EAAoCwG,IAApC;AACH,SAFD,MAEO,IAAIC,aAAJ,EAAmB;AACtB,iBAAKlI,mBAAL;AACA,iBAAKO,sBAAL,CAA4B6B,OAA5B,EAAqCxT,iBAArC;AACA,iBAAK4E,qBAAL,GAA6B,IAA7B;AACH,SAJM,MAIA;AACH,iBAAKnB,IAAL,CAAU4D,SAAV,CAAoBnG,GAAGqQ,QAAH,CAChBrQ,GAAGsQ,SAAH,CAAa,GAAb,CADgB,EAEhBtQ,GAAGuQ,QAAH,CAAY,YAAM;AACd,wBAAK3B,YAAL,CAAkBpK,eAAekK,IAAjC,EAAuC;AACnCG,6BAASyD,OAD0B,EACjBxD,aAAa,uBAAM,CAAG;AADL,iBAAvC;AAGA,wBAAKoB,mBAAL;AACA,wBAAKiH,gBAAL,CAAsB,IAAtB;AACH,aAND,CAFgB,CAApB;AAUH;AACJ,KA1jCI;AA4jCLyB,wBA5jCK,kCA4jC0C;AAAA,YAA1BjH,QAA0B,uEAAf,EAAe;AAAA,YAAXwG,IAAW,uEAAJ,EAAI;AAAA,YACnC3T,cADmC,GAChB,KAAKjC,IAAL,CAAU8B,MADM,CACnCG,cADmC;;AAE3C,YAAI8N,UAAU9N,eAAesT,YAA7B;AACA,YAAIe,eAAe,KAAKtW,IAAL,CAAU8B,MAAV,CAAiBiF,eAAjB,GAAmC,WAAnC,GAAiD,8BAApE;AACA,YAAMwP,kBAAkBzZ,OAAO0Z,GAAP,CAAWpH,QAAX,EAAqBkH,YAArB,CAAxB;AACA,gBAAQV,IAAR;AACI,iBAAKxY,gBAAgBC,SAArB;AACA,iBAAKD,gBAAgBG,KAArB;AACA,iBAAKH,gBAAgBI,GAArB;AACI,oBAAI+Y,eAAJ,EAAqB;AACjB,wBAAME,gBAAgBF,gBAAgBvN,KAAhB,CAAsB,GAAtB,CAAtB;AACA,wBAAM0N,cAAc;AAChBlN,+BAAOiN,cAAc,CAAd,CADS;AAEhBpH,yCAAiBoH,cAAc,CAAd,CAFD;AAGhBnH,wCAAgBmH,cAAc,CAAd;AAHA,qBAApB;AAKA,yBAAKzW,IAAL,CAAUiD,cAAV,CAAyB2M,kBAAzB,GAA8CgG,IAA9C;AACA,yBAAKjI,mBAAL;AACA,yBAAKzD,eAAL,CAAqBwM,WAArB;AACH;AACD;AACJ,iBAAKtZ,gBAAgBE,OAArB;AACIyS,0BAAU9N,eAAe0U,iBAAf,YAAyCf,IAAzC,OAAV;AACA,qBAAK5V,IAAL,CAAUiD,cAAV,CAAyBsM,SAAzB,GAAqC,KAArC;AACA,qBAAKvP,IAAL,CAAUiD,cAAV,CAAyBoM,eAAzB,GAA2C,CAA3C;AACA,qBAAKrP,IAAL,CAAUiD,cAAV,CAAyBqM,cAAzB,GAA0C,CAA1C;AACA,qBAAK3B,mBAAL;AACA,qBAAKtB,YAAL,CAAkBpK,eAAekK,IAAjC,EAAuC;AACnCG,6BAASyD,OAD0B,EACjBxD,aAAa,uBAAM,CAAG;AADL,iBAAvC;AAGA;AAzBR;AA2BH,KA5lCI;AA8lCLhG,uBA9lCK,iCA8lCiB;AAClB,YAAI,KAAKsH,UAAL,IAAmB,KAAK1M,qBAAxB,IAAiD,KAAKyV,cAA1D,EAA0E;AADxD,YAEVC,UAFU,GAEK,KAAK7W,IAAL,CAAU8B,MAAV,CAAiBG,cAFtB,CAEV4U,UAFU;;AAGlB,aAAK3I,sBAAL,CAA4B2I,UAA5B,EAAwCta,iBAAxC;AACA,aAAKqa,cAAL,GAAsB,IAAtB;AACH,KAnmCI;AAqmCLpQ,mBArmCK,6BAqmCa;AACd,YAAI,KAAKrF,qBAAT,EAAgC;AAChC,YAAI,KAAKyV,cAAT,EAAyB;AAAA,gBACbzK,IADa,GACJ,KAAKnM,IAAL,CAAU8B,MAAV,CAAiBG,cADb,CACbkK,IADa;;AAErB,iBAAK7N,QAAL,CAAc0F,IAAd,CAAmB,gBAAnB,EAAqCmI,IAArC;AACA,iBAAKyK,cAAL,GAAsB,KAAtB;AACH;AACD,YAAI,KAAKvI,qBAAT,EAAgC;AAC5B,iBAAKA,qBAAL,GAA6B,KAA7B;AACA,iBAAK/P,QAAL,CAAc0F,IAAd,CAAmB,gBAAnB,EAAqC,cAArC;AACH;AACJ,KAhnCI;AAknCL0C,2BAlnCK,qCAknCqB;AACtB,YAAI,KAAKmH,UAAL,IAAmB,CAAC,KAAKxM,eAAzB,IAA4C,KAAKuV,cAAjD,IAAmE,CAAC,KAAK7R,kBAAL,EAAxE,EAAmG;AAD7E,YAEd9C,cAFc,GAEK,KAAKjC,IAAL,CAAU8B,MAFf,CAEdG,cAFc;;AAGtB,aAAK2U,cAAL,GAAsB,IAAtB;AACA,aAAK1I,sBAAL,CAA4BjM,eAAe6U,kBAA3C,EAA+Dva,iBAA/D;AACH,KAvnCI;AAynCLkK,oBAznCK,8BAynCc;AACf,YAAI,KAAKoH,UAAL,IAAmB,CAAC,KAAKxM,eAAzB,IAA4C,KAAKuV,cAAjD,IAAmE,CAAC,KAAK7R,kBAAL,EAAxE,EAAmG;AADpF,YAEP9C,cAFO,GAEY,KAAKjC,IAAL,CAAU8B,MAFtB,CAEPG,cAFO;;AAGfxE,WAAG+J,GAAH,CAAO,+BAAP;AACA,YAAI,CAAC,KAAKrG,qBAAN,IAA+B,KAAK1B,YAAxC,EAAsD;AAClD,iBAAKA,YAAL,CAAkBsX,WAAlB,CAA8B9U,eAAe+U,eAA7C;AACH;AACJ,KAhoCI;AAkoCLrQ,sBAloCK,gCAkoCgB;AACjB,YAAI,CAAC,KAAKtF,eAAV,EAA2B;AAC3B,aAAKD,kBAAL,GAA0B,CAA1B;AACA,YAAI,CAAC,KAAKD,qBAAN,IAA+B,KAAKyV,cAAxC,EAAwD;AAAA,gBAC5CzK,IAD4C,GACnC,KAAKnM,IAAL,CAAU8B,MAAV,CAAiBG,cADkB,CAC5CkK,IAD4C;;AAEpD,iBAAK7N,QAAL,CAAc0F,IAAd,CAAmB,gBAAnB,EAAqCmI,IAArC;AACA,iBAAK7N,QAAL,CAAc0F,IAAd,CAAmB,mBAAnB;AACA,iBAAK4S,cAAL,GAAsB,KAAtB;AACH;AACD,YAAI,KAAKvI,qBAAT,EAAgC;AAC5B,iBAAKA,qBAAL,GAA6B,KAA7B;AACA,iBAAK/P,QAAL,CAAc0F,IAAd,CAAmB,gBAAnB,EAAqC,cAArC;AACH;AACJ,KA/oCI;AAipCLjD,gBAjpCK,0BAipCU;AACX,aAAK9B,WAAL,CAAiB+E,IAAjB,CAAsB,mBAAtB,EAA2C,KAA3C;AACH,KAnpCI;AAqpCL4F,qBArpCK,+BAqpCe;AAChB;AACH,KAvpCI;AAwpCLqN,aAxpCK,uBAwpCO;AACR,YAAI,KAAKxL,cAAT,EAAyB,KAAKyL,IAAL,CAAUzL,cAAV,CAAyB0L,IAAzB;AACzB,aAAK1L,cAAL,GAAsB,IAAtB;AACH,KA3pCI;;;AA6pCL;AACAjD,yBA9pCK,iCA8pCiBH,YA9pCjB,EA8pC+B;AAChC,YAAMzK,aAAayK,aAAaW,KAAb,CAAmB,GAAnB,CAAnB;AACA,YAAIT,mBAAmB,EAAvB;AACA3K,mBAAWsG,OAAX,CAAmB,uBAAe;AAC9B,gBAAMkT,WAAWC,YAAYrO,KAAZ,CAAkB,GAAlB,CAAjB;AACA,gBAAMsO,MAAMF,SAAS,CAAT,CAAZ;AACA,gBAAMlG,QAAQkG,SAAS,CAAT,CAAd;AACA7O,6BAAiB+O,GAAjB,IAAwBpG,KAAxB;AACH,SALD;AAMA,eAAO3I,gBAAP;AACH,KAxqCI;AA0qCLG,yBA1qCK,mCA0qCmB;AACpB,aAAK6O,YAAL,GAAoB,KAAKC,YAAL,EAApB;AACA,aAAKxX,IAAL,CAAUiD,cAAV,CAAyBsU,YAAzB,GAAwC,KAAKA,YAA7C;;AAEA,YAAI,KAAKA,YAAL,KAAsB,KAAKE,eAA3B,IAA8C,CAAC,KAAKF,YAAxD,EAAsE;AACtE,aAAKG,iBAAL;;AAEA,YAAMC,iBAAiB,KAAK3X,IAAL,CAAU8B,MAAV,CAAiB8V,YAAxC;AACA/a,yBAAiB,iBAAjB,EAAoC8a,cAApC;AACH,KAnrCI;AAqrCLH,gBArrCK,0BAqrCU;AACX,aAAKC,eAAL,GAAuB,KAAKzX,IAAL,CAAU8B,MAAV,CAAiB+V,gBAAjB,IAAqC,KAA5D;AACA,YAAMC,iBAAiB,KAAKC,iBAAL,EAAvB;AACA,YAAMC,iBAAiB,KAAKC,iBAAL,EAAvB;AACA,YAAIH,mBAAmBE,cAAvB,EAAuC,OAAO,KAAKE,sBAAL,EAAP;AACvC,eAAOJ,eAAeK,WAAf,EAAP;AACH,KA3rCI;AA6rCLJ,qBA7rCK,+BA6rCe;AAChB,eAAO,KAAKxP,gBAAL,CAAsB6P,CAAtB,IAA2B,KAAK7P,gBAAL,CAAsB6P,CAAtB,CAAwBD,WAAxB,EAAlC;AACH,KA/rCI;AAisCLT,qBAjsCK,+BAisCe;AAAA,YACRW,eADQ,GACY,KAAKrY,IAAL,CAAU8B,MADtB,CACRuW,eADQ;;AAEhB,YAAI,CAACA,eAAL,EAAsB;AACtB,YAAMV,iBAAiBU,gBAAgB,KAAKd,YAAL,CAAkBY,WAAlB,EAAhB,CAAvB;AACA,YAAMG,gBAAgBC,OAAOC,MAAP,CAAc,KAAKxY,IAAL,CAAU8B,MAAxB,EAAgC6V,cAAhC,CAAtB;AACA,aAAK3X,IAAL,CAAU8B,MAAV,GAAmBwW,aAAnB;AACH,KAvsCI;AAysCLJ,0BAzsCK,oCAysCoB;AAAA;;AACrB,aAAKvP,gBAAL,GAAwB,IAAxB;AACA,YAAMrH,kBAAkBjF,QAAQ,iBAAR,CAAxB;;AAFqB,qCAGIiF,gBAAgBC,SAAhB,EAHJ;AAAA,YAGbC,YAHa,0BAGbA,YAHa;;AAIrB,YAAIA,YAAJ,EAAkB;AAAA,yCAC2B,KAAKxB,IAAL,CAAU8B,MAAV,CAAiBG,cAD5C;AAAA,gBACNkK,IADM,0BACNA,IADM;AAAA,gBACAsM,sBADA,0BACAA,sBADA;;AAEd,gBAAIC,WAAW,SAAXA,QAAW,GAAM;AACjB,wBAAK/P,gBAAL,GAAwB,KAAxB;AACAjM;AACH,aAHD;AAIA,iBAAKyE,qBAAL,GAA6B,IAA7B;AACA,iBAAKkL,YAAL,CAAkBF,IAAlB,EAAwB;AACpBG,yBAASmM,sBADW,EACalM,aAAamM;AAD1B,aAAxB;AAGH;AACJ,KAxtCI;AA0tCLT,qBA1tCK,+BA0tCe;AAChB,YAAM3W,kBAAkBjF,QAAQ,iBAAR,CAAxB;;AADgB,qCAESiF,gBAAgBC,SAAhB,EAFT;AAAA,YAERC,YAFQ,0BAERA,YAFQ;;AAIhB,YAAI,CAAC,KAAKxB,IAAL,CAAU8B,MAAV,CAAiB2G,yBAAtB,EAAiD,OAAO,EAAP;AACjD,YAAI8O,eAAe,EAAnB;AACA,YAAI/V,YAAJ,EAAkB;AACd+V,2BAAe9a,YAAY,GAAZ,KAAoB,KAAKgb,eAAxC;AACH,SAFD,MAEO;AACHF,2BAAe9Z,GAAGkR,GAAH,CAAOgK,YAAP,CAAoBC,OAApB,CAA4B,GAA5B,KAAoC,KAAKnB,eAAxD;AACH;AACD,eAAOF,aAAaY,WAAb,EAAP;AACH,KAtuCI;AAwuCLU,eAxuCK,yBAwuCS;AACV,YAAI,KAAK7Y,IAAL,CAAUyU,WAAd,EAA2B,KAAKzU,IAAL,CAAUyU,WAAV,CAAsBqE,YAAtB;AAC3B,aAAKnX,WAAL,CAAiBuC,OAAjB,CAAyB,iBAAS;AAC9B6U,qBAASA,MAAM/U,IAAN,CAAW,aAAX,CAAT;AACH,SAFD;AAGH;AA7uCI,CAAT","file":"Director.js","sourceRoot":"../../../../../../assets/cc-common/cc-slotbase-v2/component","sourcesContent":["/* global Sentry, finishDemoCallBack, CC_DEBUG */\nconst baseDirector = require('BaseDirectorV2');\nconst globalNetwork = require('globalNetwork');\nconst { handleFlowOutGame, handleBackLogin, getUrlParam, handleCloseGameIframe } = require(\"gameCommonUtils\");\nconst { formatWalletMoney, findKeyByValue, updateUtilConfig } = require('utils');\nconst lodash = require('lodash');\nconst tutorialManager = require(\"TutorialMgr\");\nconst gameNetwork = window.GameNetwork || require('game-network');\nconst EventManager = gameNetwork.EventManager;\nconst PROMOTION_ERROR = {\n    WRONG_BET: '0016',\n    EXPIRED: '0042',\n    RESET: '0043',\n    NEW: '0044',\n};\n\ncc.Class({\n    extends: baseDirector,\n\n    properties: {\n        backToLobby: cc.Node,\n        info: cc.Node,\n        setting: cc.Node,\n        bet: cc.Node,\n        turbo: cc.Node,\n        jackpot: cc.Node,\n        wallet: cc.Node,\n        gui: cc.Node,\n        cutscene: cc.Node,\n        normalGame: cc.Node,\n        freeGame: cc.Node,\n        bonusGame: cc.Node,\n        gameText: cc.JsonAsset,\n        gameTrialSupport: {\n            default: false\n        },\n        realWalletAmount: {\n            default: null,\n            type: cc.Node\n        },\n        trialWalletAmount: {\n            default: null,\n            type: cc.Node\n        },\n        trialButton: {\n            default: null,\n            type: cc.Node\n        },\n        realButton: {\n            default: null,\n            type: cc.Node\n        },\n        jackpotHistory: cc.Node,\n        betHistory: cc.Node,\n        backgroundLoading: cc.Node,\n        tutorialData: {\n            type: cc.Asset,\n            default: null\n        },\n        tutorialMgr: tutorialManager,\n        toastMessage: require(\"ToastInfo\"),\n        waitingScene: cc.Node,\n        demoGroup: cc.Node,\n        isGamePrefab: false,\n    },\n\n    onLoad() {\n        this._super();\n        this.gameTrialData = this.node.trialData || null;\n        if (this.tutorialData) this.tutorialSpinData = this.tutorialData.json;\n        // @TODO: Refactor this code\n        if (this.backgroundLoading) {\n            this.backgroundLoading.active = true;\n        }\n        this.node.on(\"INGAME_EVENT_RAISED\", (ev) => {\n            let evName = ev.getUserData().trigger;\n            this.onIngameEvent(evName);\n            ev.stopPropagation();\n        });\n        if (this.tutorialMgr) this.tutorialMgr.setMainGameMgr(this);\n        this.node.on(\"ENABLE_BUTTON_CONTROL\", this.enableButtonControl, this);\n        this.node.on(\"DISABLE_BUTTON_CONTROL\", this.disableButtonControl, this);\n        this.node.on(\"HIDE_TUTORIAL\", this.hideTutorial, this);\n        this.node.on('SET_UP_SPINE_DATABASE', this.setUpSpineDatabase.bind(this));\n        this.setupGameMode();\n        this.showMessageForceClose = false;\n        this.networkWarningTime = 0;\n        this.joinGameSuccess = false;\n\n        const loadConfigAsync = require('loadConfigAsync');\n        const { LOGIN_IFRAME } = loadConfigAsync.getConfig();\n        if (LOGIN_IFRAME) {\n            this.playingDemo = (getUrlParam('trialMode') === 'true');\n        }\n        this._setUpGameVersion();\n\n        this.usingPopups = [this.setting, this.info, this.jackpotHistory, this.betHistory];\n    },\n\n    start() {\n        this._super();\n        this.loadText();\n    },\n\n    loadText() {\n        if (this.gameText) {\n            this.node.config.GAME_TEXT = this.gameText.json;\n        }\n        this.promotionMessage = this.node.config.MESSAGE_DIALOG.PROMOTION_MESSAGE;\n        this.promotionReset = this.node.config.MESSAGE_DIALOG.PROMOTION_RESET;\n        this.promotionNew = this.node.config.MESSAGE_DIALOG.PROMOTION_NEW;\n    },\n\n    _setUpGameVersion() {\n        const versionSlot = this.node.getComponentInChildren(\"VersionSlot\");\n        if (versionSlot && versionSlot.versionFile && versionSlot.versionFile.json.version) {\n            if (typeof Sentry !== 'undefined') {\n                Sentry.configureScope(function (scope) {\n                    scope.setExtra(\"gameVersion\", versionSlot.versionFile.json.version);\n                });\n            }\n        }\n    },\n\n    onIngameEvent(evName) {\n        this.trialMode && this.tutorialMgr && this.tutorialMgr.trigger(evName);\n    },\n\n    getGameId() {\n        return this.node.gSlotDataStore.gameId;\n    },\n\n    getGameMeta() {\n        //TODO implement game meta;\n        let cutSceneMgr = this.cutscene.getComponent(\"CutsceneControl\");\n        return {\n            'gameMode': this.currentGameMode.name,\n            'cutScene': cutSceneMgr.getDisplayCutscene(),\n            'lastCommand': this.currentGameMode.getComponent('SlotGameDirector').getLastCommand(),\n            'scripts': this.currentGameMode.getComponent('SlotGameDirector').getRemainScripts()\n        };\n    },\n\n    init() {\n        // @TODO: Refactor this code\n        if (this.backgroundLoading) {\n            this.backgroundLoading.runAction(cc.fadeTo(0.3, 0));\n        }\n        if (!this.wallet) this.wallet = this.node;\n        if (!this.bet) this.bet = this.node;\n        if (!this.jackpot) this.jackpot = this.node;\n        if (!this.turbo) this.turbo = this.node;\n        if (!this.setting) this.setting = this.node;\n        if (!this.cutscene) this.cutscene = this.node;\n        this.readyToPlay = false;\n        this.trialMode = false;\n\n        //Register actors\n        this.turbo.on(\"TURBO_TOGGLE\", this.toggleModeTurbo, this);\n        this.setting.emit(\"INIT\");\n        this.cutscene.children.forEach(element => {\n            const cutsceneMode = element.getComponent('CutsceneMode');\n            cutsceneMode && cutsceneMode.init(this);\n        });\n    },\n\n    setUpSpineDatabase(evt) {\n        evt.propagationStopped = true;\n        if (evt.detail) {\n            this.spineSkeletonDatabase = evt.detail.spineSkeletonDatabase;\n        }\n    },\n\n    getSpineSkeletonData(spineName) {\n        if (this.node && this.spineSkeletonDatabase && this.spineSkeletonDatabase.getSpineSkeletonData) {\n            return this.spineSkeletonDatabase.getSpineSkeletonData(spineName);\n        }\n        return null;\n    },\n\n    setupGameMode() {\n        this.gameModeList = [];\n        if (this.normalGame) this.gameModeList.push(this.normalGame);\n        if (this.freeGame) this.gameModeList.push(this.freeGame);\n        if (this.bonusGame) this.gameModeList.push(this.bonusGame);\n    },\n\n    isTutorialShowing() {\n        return this.tutorialMgr && this.tutorialMgr.isShowing();\n    },\n\n    isTutorialFinished() {\n        return !this.tutorialMgr || this.tutorialMgr.isFinished();\n    },\n\n    enableTrialButton(enable) {\n        if (this.trialButton) this.trialButton.emit(\"ENABLE_BUTTONS\", enable);\n    },\n    /// do not remove this function!\n    enableCheckForever() {\n\n    },\n\n    getServerVersion() {\n        const { getUrlParam } = require('gameCommonUtils');\n        const loadConfigAsync = require('loadConfigAsync');\n        const { LOGIN_IFRAME } = loadConfigAsync.getConfig();\n        let version = this.node.config.SERVER_VERSION || '';\n        if (LOGIN_IFRAME) {\n            version = getUrlParam('gameVersion') || version;\n        }\n        if (this.playingDemo) return 2;\n        return version;\n    },\n\n    setUpGame() {\n        this.resumeDelay = 0.3;\n        const serverVersion = this.getServerVersion();\n        this.gameStateManager = globalNetwork.registerGame({\n            gameId: this.node.gSlotDataStore.gameId,\n            isSlotGame: true,\n            serverVersion,\n            stateUpdate: this.stateUpdate.bind(this),\n            userLogout: this.userLogout.bind(this),\n            joinGameSuccess: this.initJP.bind(this),\n            onJackpotWin: this.playJackpotWin.bind(this), //\n            onNoticeJackpotWin: this.noticeJackpotWin.bind(this), //\n            authFailed: this.showMessageAuthFailed.bind(this),\n            tutorialData: this.tutorialSpinData,\n            onNetworkFailed: this.onNetworkFailed.bind(this),\n            onNetworkError: this.onNetworkError.bind(this),\n            onNetworkDisconnect: this.onNetworkDisconnect.bind(this),\n            onNetworkResume: this.onNetworkResume.bind(this),\n            onNetworkWarning: this.onNetworkWarning.bind(this),\n            onShowPopupDisconnected: this.onShowPopupDisconnected.bind(this),\n            onNetworkConnected: this.onNetworkConnected.bind(this),\n            onJoinGameDenied: this.onJoinGameDenied.bind(this),\n            onRequestDenied: this.onRequestDenied.bind(this),\n            useShortParam: this.node.config.USE_SHORT_PARAM,\n            onNoticeUserWinJackpot: this.onNoticeUserWinJackpot.bind(this),\n        });\n        this.isHidden = false;\n        cc.game.on(cc.game.EVENT_HIDE, this.onEventHide, this);\n        cc.game.on(cc.game.EVENT_SHOW, this.onEventShow, this);\n        if (this.playingDemo) {\n            this.trialButton.setPlayDemoMode();\n            if (this.demoGroup) this.demoGroup.active = true;\n        }\n    },\n\n    onEventHide() {\n        cc.log(\"GAME_HIDE\");\n        this.isHidden = true;\n        if (this.gameStateManager) {\n            this.gameStateManager.gameOnPause();\n        }\n    },\n\n    onEventShow() {\n        cc.log(\"GAME_SHOW\");\n        this.isHidden = false;\n        if (this.gameStateManager) {\n            this.gameStateManager.gameOnResume();\n        }\n    },\n\n    initGameMode() {\n        //Binding game modes\n        if (this.normalGame) this.normalGame.init(this, true);\n        if (this.freeGame) this.freeGame.init(this);\n        if (this.bonusGame) this.bonusGame.init(this);\n\n        //3 modes: normalGame, freeGame, bonusGame\n        this.node.gSlotDataStore.currentGameMode = \"normalGame\";\n        this.currentGameMode = this[this.node.gSlotDataStore.currentGameMode];\n\n        this.gui.show();\n        this.currentGameMode.enter();\n    },\n\n    extendInit(meta) { // eslint-disable-line\n        //Add Override here\n    },\n\n    enableButtonInteraction() {\n        if (this.normalGame) this.normalGame.emit(\"ENABLE_BUTTON_INTERACTION\");\n        if (this.freeGame) this.freeGame.emit(\"ENABLE_BUTTON_INTERACTION\");\n        if (this.bonusGame) this.bonusGame.emit(\"ENABLE_BUTTON_INTERACTION\");\n    },\n\n    initJP(meta) {\n\n        //Register event with server\n        this.enableButtonInteraction();\n        let wallet = 0;\n        const { extendData, dataResume, metaDataPromotion } = meta;\n        if (!lodash.isEmpty(extendData)) {\n            let { ec: extendCommon } = extendData;\n            if (extendCommon) {\n                this.extendCommonData = this.parseExtendCommonData(extendCommon);\n            }\n            if (this.extendCommonData && this.node.config.IS_SUPPORT_MULTI_CURRENCY) {\n                this._updateCurrencyConfig();\n            }\n            if (this._isCurrencyError) return;\n        }\n        \n        this.joinGameSuccess = true;\n        if (!lodash.isEmpty(extendData) && !lodash.isEmpty(extendData.metaDataUser) && extendData.metaDataUser.currentWalletAmount) {\n            wallet = extendData.metaDataUser.currentWalletAmount;\n        }\n        if (!lodash.isEmpty(extendData) && !lodash.isEmpty(extendData.mBet)) {\n            const listDataBet = extendData.mBet.split(',');\n            let steps = {};\n            listDataBet.forEach(item => {\n                steps[item.split(';')[0][0]] = Number(item.split(';')[1]);\n            });\n            this.node.gSlotDataStore.slotBetDataStore.createDefaultBet(this.node.config, steps);\n            this.updateJackpotHistoryBet(extendData.mBet);\n        }\n        this.bet.emit(\"LOAD_BET\", { gameId: this.node.config.GAME_ID, betId: this.node.config.DEFAULT_BET });\n\n        this.bet.on('BET_CHANGE', (betId) => {\n            this.jackpot.emit(\"CHANGE_JACKPOT\");\n            this.tutorialMgr && this.tutorialMgr._updateJackpot();\n            if (this.trialMode && betId) {\n                this.updateTrialBet(betId);\n            }\n            this.changeBetCallback(betId);\n        });\n        this.jackpot.emit(\"REGISTER_JACKPOT\", this.node.gSlotDataStore.gameId, meta, this.gameStateManager);\n        this.readyToPlay = true;\n        this.wallet.emit(\"UPDATE_WALLET\", { amount: wallet });\n        this.jackpotHistory && this.jackpotHistory.emit('ENABLE_BUTTONS');\n        this.trialButton && this.trialButton.emit('CAN_SWITCH_MODE');\n\n        this.extendInit(lodash.clone(meta));\n        // resume from join game\n        if (dataResume) {\n            this.normalGame.emit(\"SPIN_DISABLE\");\n            this.disableBet();\n            this.extendActionForResume();\n            this.runAction('Resume', dataResume);\n            if (metaDataPromotion) {\n                const isResume = true;\n                this.promotionUpdate(metaDataPromotion, isResume);\n            }\n        }\n        else {\n            this.normalGame.emit(\"SPIN_ENABLE\");\n            if (metaDataPromotion) {\n                this.promotionUpdate(metaDataPromotion);\n            } else {\n                this.enableBet();\n                this.enableTrialButton(true);\n            }\n        }\n        const havingDirector = this.currentGameMode && this.currentGameMode.director;\n        if (havingDirector && dataResume) {\n            this.currentGameMode.director.hideAnimIntro();\n        }\n        if (this.playingDemo) {\n            this.node.gSlotDataStore.isPlayDemo = true;\n            this.setupPlayDemo();\n        }\n        if (this.setting) {\n            this.setting.emit('ADD_TOGGLE_SWITCH_NETWORK', this.gameStateManager);\n        }\n    },\n\n    setupPlayDemo() {\n        this.countF2R = 0;\n        this.switchToTrialMode();\n        this.tutorialMgr.skipTutorial();\n        this._listenActionOnButtons();\n        this._detectAFK();\n    },\n    _listenActionOnButtons() {\n        this._allButtons = this.node.getComponentsInChildren(cc.Button);\n        this._allButtons.forEach(btn => {\n            btn.node.on(cc.Node.EventType.TOUCH_START, () => {\n                if (btn.interactable) {\n                    this.node.gSlotDataStore.lastActionTime = Date.now();\n                }\n            });\n        });\n    },\n    _detectAFK() {\n        this.node.gSlotDataStore.timerAFK = 0;\n        this.tweenDetectAFK = cc.tween(this)\n            .delay(1)\n            .call(() => {\n                this.node.gSlotDataStore.timerAFK++;\n                const { isAutoSpin, currentGameMode, timerAFK } = this.node.gSlotDataStore;\n                if (currentGameMode !== 'normalGame') return;\n                if (isAutoSpin) return;\n                if (timerAFK > 30) this.showPopupRedirect();\n            })\n            .union()\n            .repeatForever()\n            .start();\n    },\n    showPopupRedirect() {\n        if (!this.playingDemo) return;\n        const {isAutoSpin,currentGameMode} = this.node.gSlotDataStore;\n        if (this._isShowPopupRedirect) return;\n        this._isShowPopupRedirect = true;\n        if (currentGameMode === 'normalGame' && isAutoSpin) {\n            this.currentGameMode.director.stopAutoSpinClick();\n        }\n        const { NAME, FINISH_DEMO } = this.node.config.MESSAGE_DIALOG;\n        this.showCutscene(NAME, {\n            strText: FINISH_DEMO,\n            actionBtnOK: () => {\n                this._isShowPopupRedirect = false;\n                this.node.gSlotDataStore.timerAFK = 0;\n                this.showWaitingCutScene();\n                this.scheduleOnce(() => {\n                    if (typeof finishDemoCallBack === 'function') {\n                        finishDemoCallBack();\n                    } else {\n                        handleCloseGameIframe();\n                    }\n                }, 0.5);\n            },\n            actionCancel: () => {\n                this._isShowPopupRedirect = false;\n                this.node.gSlotDataStore.timerAFK = 0;\n            }\n        });\n    },\n    countingFastToResult() {\n        if (!this.playingDemo) return;\n        if (this.node.gSlotDataStore.modeTurbo === true) return;\n        if (this.countF2R === null) return;\n        this.countF2R++;\n        if (this.countF2R === 3) {\n            this.showPopupSuggestTurbo();\n            this.countF2R = null;\n        }\n    },\n    showPopupSuggestTurbo() {\n        const { NAME, SUGGEST_TURBO } = this.node.config.MESSAGE_DIALOG;\n        this.showCutscene(NAME, {\n            strText: SUGGEST_TURBO,\n            actionBtnOK: () => {\n                this.turbo.emit(\"TURN_ON\");\n            },\n            actionCancel: () => { }\n        });\n    },\n\n    playJackpotWin(data, isMe) {\n        if (!this.canNotifyJackpot(data)) return;\n        if (isMe) return this.pauseJackpot();\n        this.jackpot.emit(\"PLAY_JACKPOT_EXPLOSION\", data.jpInfo);\n        cc.warn('%cjackppot-win', \"color: #red\", JSON.stringify(data.jpInfo));\n    },\n\n    noticeJackpotWin(data, isMe) {\n        if (!this.canNotifyJackpot(data)) return;\n        if (isMe) return this.pauseJackpot();\n        this.jackpot.emit(\"NOTICE_JACKPOT_WIN\", data.jpInfo);\n    },\n\n    onNoticeUserWinJackpot(data, isMe) {\n    },\n\n    canNotifyJackpot(data) {\n        if (!data || !data.jpInfo || \n            !this.node.config.IS_SHOW_JACKPOT_EXPLOSION || this.isHidden || \n            this.trialMode || this.node.gSlotDataStore.currentGameMode === \"bonusGame\") return false;\n        return true;\n    },\n\n   \n    stopJackpotWin() {\n        if(!this.node.config.IS_SHOW_JACKPOT_EXPLOSION) return;\n        if (!this.trialMode) {\n            this.jackpot.emit(\"STOP_JACKPOT_EXPLOSION\");\n        }\n    },\n    extendActionForResume() {\n        //Add your overwrite code here!\n    },\n\n    //data recieve start from here\n    stateUpdate(data) {\n        this.runAction('Update', data);\n        if (this.tutorialMgr && this.trialMode) {\n            this.tutorialMgr.onStateUpdate(data);\n        }\n    },\n    stopSpinCurrentMode() {\n        if (this.currentGameMode && this.currentGameMode.director && this.currentGameMode.director.forceStopSpinning) {\n            this.currentGameMode.director.forceStopSpinning();\n        }\n    },\n    userLogout() {\n        this.logOutUser = true;\n        if (!this.node) return;\n        this.node.runAction(cc.sequence(\n            cc.delayTime(0.3),\n            cc.callFunc(() => {\n                const { ANOTHER_ACCOUNT } = this.node.config.MESSAGE_DIALOG;\n                this.showPopupHandleOutGame(ANOTHER_ACCOUNT, handleBackLogin);\n                if (this.currentGameMode && this.currentGameMode.director && this.currentGameMode.director.table) {\n                    this.currentGameMode.director.forceStopSpinning();\n                    this.currentGameMode.director.table.emit('STOP_REEL_ROOL');\n                }\n            })\n        ));\n    },\n    isUserLogout() {\n        return this.logOutUser;\n    },\n    showWaitingCutScene() {\n        this.isShowWaitingCutScene = true;\n        this.showCutscene('waitingScene');\n    },\n    showPopupHandleOutGame(text, cbHandler) {\n        const { NAME } = this.node.config.MESSAGE_DIALOG;\n        const loadConfigAsync = require('loadConfigAsync');\n        const { LOGIN_IFRAME } = loadConfigAsync.getConfig();\n\n        if (LOGIN_IFRAME) {\n            const gameCommonUtils = require('gameCommonUtils');\n            const isEnableBtn = gameCommonUtils.checkConditionCloseGameIframe();\n            if (isEnableBtn) {\n                this.showCutscene(NAME, {\n                    strText: text, actionBtnOK: () => {\n                        this.showWaitingCutScene();\n                        this.scheduleOnce(() => {\n                            gameCommonUtils.handleCloseGameIframe();\n                        }, 0.5);\n                    }\n                });\n            } else {\n                this.showCutscene(NAME, {\n                    strText: text\n                });\n            }\n        } else {\n            this.showCutscene(NAME, {\n                strText: text, actionBtnOK: () => {\n                    this.showWaitingCutScene();\n                    if (cc.sys.isNative && typeof (closeCreatorGame) === 'function') {\n                        cbHandler();\n                    } else {\n                        this.scheduleOnce(() => {\n                            cbHandler();\n                        }, 0.5);\n                    }\n                }\n            });\n        }\n    },\n    showMessageAuthFailed() {\n        if (!this.node) return;\n        this.node.runAction(cc.sequence(\n            cc.delayTime(0.3),\n            cc.callFunc(() => {\n                const { AUTHEN_FAILED } = this.node.config.MESSAGE_DIALOG;\n                this.showPopupHandleOutGame(AUTHEN_FAILED, handleBackLogin);\n            })\n        ));\n    },\n    onJoinGameDenied() {\n        if (!this.node) return;\n        this.node.runAction(cc.sequence(\n            cc.delayTime(0.3),\n            cc.callFunc(() => {\n                const { ACCOUNT_BLOCKED } = this.node.config.MESSAGE_DIALOG;\n                this.showPopupHandleOutGame(ACCOUNT_BLOCKED, handleBackLogin);\n            })\n        ));\n    },\n    \n    onRequestDenied() {\n        if (!this.node) return;\n        this.node.runAction(cc.sequence(\n            cc.delayTime(0.3),\n            cc.callFunc(() => {\n                const { REQUEST_DENIED } = this.node.config.MESSAGE_DIALOG;\n                this.showPopupHandleOutGame(REQUEST_DENIED, handleBackLogin);\n            })\n        ));\n    },\n    onNetworkProblem(reason) {\n        if (this.logOutUser) return;\n\n        if (reason == 'mismatch-command') {\n            const { MISMATCH_DATA } = this.node.config.MESSAGE_DIALOG;\n            this.showPopupHandleOutGame(MISMATCH_DATA, handleFlowOutGame);\n        }\n        if (this.currentGameMode && this.currentGameMode.director && this.currentGameMode.director.table) {\n            this.currentGameMode.director.table.emit('STOP_REEL_ROOL');\n        }\n    },\n\n    promotionUpdate(metaData, isResume = false) {\n        if (metaData) {\n            this.disableBet();\n            if (this.node && this.node.gSlotDataStore) {\n                const { betId, promotionRemain, promotionTotal } = metaData;\n                this.node.gSlotDataStore.promotion = true;\n                this.node.gSlotDataStore.promotionRemain = promotionRemain;\n                this.node.gSlotDataStore.promotionBetId = betId;\n                this.node.gSlotDataStore.promotionTotal = promotionTotal;\n                this.runDelayPromtion(isResume);\n            } else {\n                this.node.runAction(cc.sequence(\n                    cc.delayTime(this.resumeDelay),\n                    cc.callFunc(() => {\n                        this.currentGameMode.director.updatePromotionData(metaData);\n                        this.showPromotionPopup(isResume);\n                    })\n                ));\n                return;\n            }\n        }\n    },\n\n    runDelayPromtion(isResume) {\n        this.node.runAction(cc.sequence(\n            cc.delayTime(0.05),\n            cc.callFunc(() => {\n                if (this.currentGameMode && this.currentGameMode.director) {\n                    this.showPromotionPopup(isResume);\n                } else {\n                    this.runDelayPromtion(isResume);\n                }\n            })\n        ));\n    },\n\n    showPromotionPopup(isResume) {\n        if (isResume) return;\n        const { promotionRemain, promotionBetId, promotionErrorCode } = this.node.gSlotDataStore;\n        const { NAME } = this.node.config.MESSAGE_DIALOG;\n        const totalBetValue = this.currentGameMode.director.getTotalBetValue(promotionBetId);\n\n        let message = this.promotionMessage.replace(\"{1}\", promotionRemain).replace(\"{2}\", formatWalletMoney(totalBetValue));\n        if (promotionErrorCode) {\n            switch (promotionErrorCode) {\n                case PROMOTION_ERROR.RESET:\n                    message = this.promotionReset.replace(\"{1}\", promotionRemain).replace(\"{2}\", formatWalletMoney(totalBetValue));\n                    break;\n                case PROMOTION_ERROR.NEW:\n                    message = this.promotionNew.replace(\"{1}\", promotionRemain).replace(\"{2}\", formatWalletMoney(totalBetValue));\n                    break;\n            }\n            this.node.gSlotDataStore.promotionErrorCode = null;\n        }\n        this.setUpPromotion();\n        this.showCutscene(NAME, {\n            strText: message, actionBtnOK: () => {\n                this.stopPromotionAnim();\n            }\n        });\n        this.showPopupPromotionAnim = cc.sequence(\n            cc.delayTime(5),\n            cc.callFunc(() => {\n                this.cutscene.emit(\"CLOSE_CUTSCENE\", NAME);\n            })\n        );\n        if (this.showPopupPromotionAnim) {\n            this.node.runAction(this.showPopupPromotionAnim);\n        }\n    },\n\n    stopPromotionAnim() {\n        if (this.node && this.showPopupPromotionAnim) {\n            this.node.stopAction(this.showPopupPromotionAnim);\n        }\n    },\n\n    setUpPromotion() {\n        this.currentGameMode.director.runPromotionSpin();\n    },\n\n    sendSpinToNetwork(currentBetData) {\n        if (this.node.gSlotDataStore.currentGameMode == \"freeGame\") {\n            this.gameStateManager.triggerFreeSpinRequest();\n        } else {\n            this.gameStateManager.triggerSpinRequest(currentBetData);\n        }\n    },\n\n    spinPromotion() {\n        // const {promotionRemain} = this.node.gSlotDataStore;\n        // this.currentGameMode.director.triggerPromotionSpin(promotionRemain);\n    },\n\n    //Preparation and transition Make modes readyss\n    newGameMode({ name, data }, callback) {\n        if (this[name]) {\n            this.stopJackpotWin();\n            this.currentGameMode.hide();\n            this.node.gSlotDataStore.currentGameMode = name;\n            this.currentGameMode = this[this.node.gSlotDataStore.currentGameMode];\n            this.currentGameMode.enter(data, callback);\n        }\n    },\n    resumeGameMode({ name }, callback) {\n        if (this[name]) {\n            this.node.gSlotDataStore.currentGameMode = name;\n            this.currentGameMode = this[this.node.gSlotDataStore.currentGameMode];\n            this.currentGameMode.show(callback);\n        }\n    },\n\n    showCutscene(name, content, callback) {\n        this.cutscene.emit(\"PLAY_CUTSCENE\", name, content, callback);\n    },\n\n    toggleModeTurbo(isCheck) {\n        this.onIngameEvent('TURBO_CLICK');\n        this.node.gSlotDataStore.modeTurbo = isCheck;\n    },\n\n    setModeTurbo(value = false) {\n        this.node.gSlotDataStore.modeTurbo = value;\n    },\n\n    updateBet({ betId = this.node.config.DEFAULT_BET }) {\n        this.bet.emit(\"UPDATE_BET\", betId);\n    },\n\n    disableBet(forced = false) {\n        if (this.isTutorialFinished() || forced)\n            this.bet.emit(\"DISABLE_BET\");\n    },\n\n    enableBet(forced = false) {\n        if (this.isTutorialFinished() || forced)\n            this.bet.emit(\"ENABLE_BET\");\n    },\n\n    _stateUpdate(script) {\n        this.currentGameMode.stateUpdate(() => {\n            this.executeNextScript(script);\n        });\n    },\n    _stateResume(script) {\n        this.node.runAction(cc.sequence(\n            cc.delayTime(this.resumeDelay),\n            cc.callFunc(() => {\n                this.currentGameMode.stateResume(() => {\n                    this.executeNextScript(script);\n                });\n            })\n        ));\n    },\n\n    haveMessageDialog() {\n        return this.node && this.node.config && this.node.config.MESSAGE_DIALOG && this.node.config.MESSAGE_DIALOG.NAME;\n    },\n\n    isDisplayDialog() {\n        let cutSceneMgr = this.cutscene.getComponent(\"CutsceneControl\");\n        return cutSceneMgr && cutSceneMgr.isDisplayDialog();\n    },\n\n    isDisplayCutscene() {\n        let cutSceneMgr = this.cutscene.getComponent(\"CutsceneControl\");\n        return cutSceneMgr && cutSceneMgr.isDisplayCutscene();\n    },\n\n    updateWallet() {\n        if (!this.logOutUser && !this.node.gSlotDataStore.isUpdateWinAmount)\n            this.wallet.walletController.updateMoneyWallet();\n    },\n\n    onDestroy() {\n        this.stopPromotionAnim();\n        if (cc.sys.isNative && typeof (closeCreatorGame) !== 'function') {\n            cc.audioEngine.stopAll();\n        }\n        cc.game.off(cc.game.EVENT_HIDE, this.onEventHide, this);\n        cc.game.off(cc.game.EVENT_SHOW, this.onEventShow, this);\n    },\n\n    setTimeScale(scale) {\n        cc.director.getScheduler().setTimeScale(scale);\n    },\n\n    switchMode() {\n        if (!this.gameTrialSupport || !this.readyToPlay) return;\n\n        if (!this.trialMode) {\n            this.switchToTrialMode();\n            this.hideCurrentPopups();\n        } else {\n            this.switchToRealMode();\n        }\n        this.bet.emit('SWITCH_MODE', this.trialMode);\n    },\n\n    isTrialMode() {\n        return this.trialMode;\n    },\n\n    updateJackpot() {\n        this.jackpot.emit(\"CHANGE_JACKPOT\");\n    },\n\n    skipTutorialMode() {\n        // support GD to review feature\n        const useTutorialData = getUrlParam('useTutorialData') === 'true';\n        const loadConfigAsync = require('loadConfigAsync');\n        const { IS_PRODUCTION } = loadConfigAsync.getConfig();\n        if (!IS_PRODUCTION && CC_DEBUG && useTutorialData) {\n            return;\n        }\n        if (this.trialMode) {\n            this.gameStateManager.skipTutorial();\n        }\n    },\n\n    switchToTrialMode() {\n        const { MAX_BET, DEFAULT_TRIAL_WALLET } = this.node.config;\n        this.trialWalletAmount.active = true;\n        this.realWalletAmount.active = false;\n\n        this.trialMode = this.node.gSlotDataStore.isTrialMode = true;\n        this.gameStateManager.switchToTrial();\n\n        if (this.trialWalletAmount.controller && this.trialWalletAmount.controller.isInit === false) {\n            this.trialWalletAmount.controller.setDefaultValue(DEFAULT_TRIAL_WALLET, MAX_BET);\n        }\n        if (this.trialWalletAmount.controller) {\n            this.trialWalletAmount.controller.resetTrialValue();\n            this.node.gSlotDataStore.trialWallet = this.trialWalletAmount.controller.lastValue;\n        }\n\n        this.normalGame.emit(\"SWITCH_TO_TRIAL\");\n        if (this.tutorialMgr) {\n            this.tutorialMgr.node.active = true;\n            this.tutorialMgr.startTutorial();\n        }\n        this.disableBet();\n        this.trialButton.emit('SHOW_BLOCK_INPUTS', true);\n        this.jackpot.opacity = 0;\n        this.storeForCheckStatusTurbo = this.node.gSlotDataStore.modeTurbo;\n        if (this.node.gSlotDataStore.modeTurbo) {\n            this.turbo.emit('TURN_OFF');\n        }\n    },\n\n    switchToRealMode() {\n        if (this.playingDemo) {\n            this.showPopupRedirect();\n            return;\n        }\n        this.trialMode = this.node.gSlotDataStore.isTrialMode = false;\n        this.gameStateManager.switchToReal();\n        this.normalGame.emit(\"SWITCH_TO_REAL\");\n        this.realWalletAmount.active = true;\n        this.trialWalletAmount.active = false;\n        if (this.tutorialMgr) {\n            this.tutorialMgr.onTutorialFinish();\n            this.tutorialMgr.playAnimSwitchToReal();\n        }\n        if (this.storeForCheckStatusTurbo) {\n            this.turbo.emit('TURN_ON');\n        } else {\n            this.turbo.emit('TURN_OFF');\n        }\n        this.jackpot.opacity = 255;\n\n        if (this.node.config.CAN_BACK_TO_REAL_MODE) {\n            this.forceBackToRealMode();\n        }\n    },\n\n    forceBackToRealMode() {\n        this.gameStateManager.cleanUpNetWork();\n        const { currentGameMode } = this.node.gSlotDataStore;\n        this.node.gSlotDataStore.isAutoSpin = false;\n        this.node.gSlotDataStore.spinTimes = 0;\n        if (this.node.gSlotDataStore.playSession) {\n            this.node.gSlotDataStore.playSession.freeGame = 0;\n            this.node.gSlotDataStore.playSession.bonusGame = 0;\n            this.node.gSlotDataStore.playSession.freeGameRemain = 0;\n            this.node.gSlotDataStore.playSession.bonusGameRemain = 0;\n        }\n        const isResumeNormal = currentGameMode !== \"normalGame\";\n        this.forceResetSoundNormalGame(isResumeNormal);\n        if (isResumeNormal) {\n            this.scheduleOnce(() => {\n                this.resumeGameMode({ name: \"normalGame\"}, () => {});\n            }, 1);\n            if (this.bonusGame) {\n                this.bonusGame.emit('FORCE_RESET_GAME_MODE', 'bonusGame');\n            }\n            if (this.freeGame) {\n                this.freeGame.emit('FORCE_RESET_GAME_MODE', 'freeGame');\n            }\n        }\n        if (this.normalGame) {\n            this.normalGame.emit('FORCE_RESET_GAME_MODE', 'normalGame');\n        }\n        this.tutorialMgr && this.tutorialMgr.trigger(\"GAME_RESET_SESSION\");\n    },\n\n    forceResetSoundNormalGame(isResumeNormal) {\n        if (this.node.soundPlayer) {\n            this.node.soundPlayer.stopAllEffects();\n            if (isResumeNormal) {\n                this.node.soundPlayer.playMainBGM();\n            }\n        }\n    },\n\n    showTrialButtons(isOn) {\n        if (this.trialButton) {\n            this.trialButton.emit(\"ENABLE_BUTTONS\", isOn);\n        }\n    },\n\n    updateWalletOnTrialSpinClick() {\n        if (this.trialWalletAmount) {\n            this.trialWalletAmount.controller.updateWalletOnTrialSpinClick();\n            this.node.gSlotDataStore.trialWallet = this.trialWalletAmount.controller.lastValue;\n        }\n    },\n\n    updateTrialWallet(winAmount = 0) {\n        if (this.trialWalletAmount) {\n            this.trialWalletAmount.controller.updateTrialWallet(winAmount);\n            this.node.gSlotDataStore.trialWallet = this.trialWalletAmount.controller.lastValue;\n        }\n    },\n\n    updateJackpotHistoryBet(mBet) {\n        if (this.jackpotHistory && this.jackpotHistory.getComponent('JackpotHistory')) {\n            this.jackpotHistory.getComponent('JackpotHistory').setDynamicBet(mBet);\n        }\n    },\n\n    isPauseTutorialFlag(flag) {\n        return this.isTutorialShowing() && this.tutorialMgr.isContainFlag(flag);\n    },\n\n    checkPauseTutorial(flag) {\n        // override this function to check condition\n        return this.isPauseTutorialFlag(flag) && this.trialMode;\n    },\n\n    enableButtonControl() {\n        this.setting && this.setting.emit('ENABLE_BUTTONS');\n        this.jackpotHistory && this.jackpotHistory.emit('ENABLE_BUTTONS');\n        this.backToLobby && this.backToLobby.emit('ENABLE_BUTTONS');\n        this.info && this.info.emit('ENABLE_BUTTONS');\n        this.turbo && this.turbo.emit('ENABLE_BUTTONS');\n    },\n\n    disableButtonControl() {\n        this.setting && this.setting.emit('DISABLE_BUTTONS');\n        this.jackpotHistory && this.jackpotHistory.emit('DISABLE_BUTTONS');\n        this.backToLobby && this.backToLobby.emit('DISABLE_BUTTONS');\n        this.info && this.info.emit('DISABLE_BUTTONS');\n        this.turbo && this.turbo.emit('DISABLE_BUTTONS');\n    },\n\n    hideCurrentPopups() {\n        this.info && this.info.emit('HIDE_PANEL');\n        this.setting && this.setting.emit('HIDE_PANEL');\n        this.jackpotHistory && this.jackpotHistory.emit('HIDE_PANEL');\n\n        this.setting && this.setting.emit('DISABLE_BUTTONS');\n        this.jackpotHistory && this.jackpotHistory.emit('DISABLE_BUTTONS');\n    },\n\n    updateTrialBet(betId) {\n        const { steps } = this.node.gSlotDataStore.slotBetDataStore.data;\n        if (!findKeyByValue(steps, betId)) {\n            return;\n        }\n        this.trialWalletAmount.controller.updateBet(betId);\n    },\n\n    pauseJackpot() {\n        cc.log(\"jackpot paused\");\n        this.jackpot.emit(\"PAUSE_JACKPOT\");\n    },\n    resumeJackpot() {\n        cc.log(\"jackpot resume\");\n        this.jackpot.emit(\"RESUME_JACKPOT\");\n    },\n\n    onNetworkFailed(reason) {\n        cc.log('onNetworkFailed');\n        if (this.showMessageForceClose) return;\n\n        const { MESSAGE_DIALOG } = this.node.config;\n        let message = MESSAGE_DIALOG.SYSTEM_ERROR;\n        switch (reason) {\n            case EventManager.CAN_NOT_CONNECT:\n                message = MESSAGE_DIALOG.SYSTEM_ERROR;\n                break;\n\n            case EventManager.MISMATCH_DATA_VERSION:\n                message = MESSAGE_DIALOG.MISMATCH_DATA;\n                break;\n            case EventManager.MISMATCH_COMMAND_ID:\n                message = MESSAGE_DIALOG.MISMATCH_DATA;\n                break;\n            case EventManager.EXPECTED_EVENT_TIMEOUT:\n                message = MESSAGE_DIALOG.SYSTEM_ERROR;\n        }\n        this.stopSpinCurrentMode();\n        this.showPopupHandleOutGame(message, handleFlowOutGame);\n        this.showMessageForceClose = true;\n    },\n\n    onNetworkError(code, metaData) {\n        cc.log('onNetworkError');\n        if (this.showMessageForceClose) return;\n        const { MESSAGE_DIALOG } = this.node.config;\n        let message = MESSAGE_DIALOG.SYSTEM_ERROR;\n        let interruptGame = false;\n        let isPromotionError = false;\n\n        switch (code) {\n            case '0000':\n                code = 1000;\n                interruptGame = true;\n                message = MESSAGE_DIALOG.SYSTEM_ERROR;\n                break;\n\n            case 'W2408':\n            case 'W2500':\n            case 'W29999':\n            case 'W2008':\n                message = MESSAGE_DIALOG.SYSTEM_ERROR;\n                break;\n\n            case '0001':\n                message = MESSAGE_DIALOG.NO_MONEY;\n                break;\n            case '0007':\n                message = MESSAGE_DIALOG.NO_PLAYSESSION;\n                interruptGame = true;\n                break;\n            case '0029':\n                message = MESSAGE_DIALOG.GROUP_MAINTAIN;\n                interruptGame = true;\n                break;\n            case '0014':\n                message = MESSAGE_DIALOG.NO_FREESPIN_OPTION;\n                interruptGame = true;\n                break;\n            case PROMOTION_ERROR.WRONG_BET:\n            case PROMOTION_ERROR.RESET:\n            case PROMOTION_ERROR.NEW:\n            case PROMOTION_ERROR.EXPIRED:\n                isPromotionError = true;\n                break;\n            case '0026':\n                message = MESSAGE_DIALOG.MISMATCH_DATA;\n                interruptGame = true;\n                break;\n            case '0035':\n                message = MESSAGE_DIALOG.EVENT_ENDED;\n                interruptGame = true;\n                break;\n            case 'W2001':\n            case 'W2004':\n                message = MESSAGE_DIALOG.SPIN_UNSUCCESS;\n                break;\n            case 'W2006':\n            case 'W2007':\n                message = MESSAGE_DIALOG.ACCOUNT_BLOCKED;\n                break;\n        }\n\n        message = message + `\\n(${code})`;\n\n        if (isPromotionError) {\n            this.handlePromotionError(metaData, code);\n        } else if (interruptGame) {\n            this.stopSpinCurrentMode();\n            this.showPopupHandleOutGame(message, handleFlowOutGame);\n            this.showMessageForceClose = true;\n        } else {\n            this.node.runAction(cc.sequence(\n                cc.delayTime(0.3),\n                cc.callFunc(() => {\n                    this.showCutscene(MESSAGE_DIALOG.NAME, {\n                        strText: message, actionBtnOK: () => { }\n                    });\n                    this.stopSpinCurrentMode();\n                    this.showTrialButtons(true);\n                })\n            ));\n        }\n    },\n\n    handlePromotionError(metaData = {}, code = '') {\n        const { MESSAGE_DIALOG } = this.node.config;\n        let message = MESSAGE_DIALOG.SYSTEM_ERROR;\n        let propertyPath = this.node.config.USE_SHORT_PARAM ? 'promotion' : 'fields.promotion.stringValue';\n        const promotionString = lodash.get(metaData, propertyPath);\n        switch (code) {\n            case PROMOTION_ERROR.WRONG_BET:\n            case PROMOTION_ERROR.RESET:\n            case PROMOTION_ERROR.NEW:\n                if (promotionString) {\n                    const promotionData = promotionString.split(';');\n                    const updatedData = {\n                        betId: promotionData[0],\n                        promotionRemain: promotionData[1],\n                        promotionTotal: promotionData[2]\n                    };\n                    this.node.gSlotDataStore.promotionErrorCode = code;\n                    this.stopSpinCurrentMode();\n                    this.promotionUpdate(updatedData);\n                }\n                break;\n            case PROMOTION_ERROR.EXPIRED:\n                message = MESSAGE_DIALOG.PROMOTION_EXPIRED + `\\n(${code})`;\n                this.node.gSlotDataStore.promotion = false;\n                this.node.gSlotDataStore.promotionRemain = 0;\n                this.node.gSlotDataStore.promotionTotal = 0;\n                this.stopSpinCurrentMode();\n                this.showCutscene(MESSAGE_DIALOG.NAME, {\n                    strText: message, actionBtnOK: () => { }\n                });\n                break;\n        }\n    },\n\n    onNetworkDisconnect() {\n        if (this.logOutUser || this.showMessageForceClose || this.networkWaiting) return;\n        const { DISCONNECT } = this.node.config.MESSAGE_DIALOG;\n        this.showPopupHandleOutGame(DISCONNECT, handleFlowOutGame);\n        this.networkWaiting = true;\n    },\n\n    onNetworkResume() {\n        if (this.showMessageForceClose) return;\n        if (this.networkWaiting) {\n            const { NAME } = this.node.config.MESSAGE_DIALOG;\n            this.cutscene.emit(\"CLOSE_CUTSCENE\", NAME);\n            this.networkWaiting = false;\n        }\n        if (this.isShowWaitingCutScene) {\n            this.isShowWaitingCutScene = false;\n            this.cutscene.emit(\"CLOSE_CUTSCENE\", 'waitingScene');\n        }\n    },\n\n    onShowPopupDisconnected() {\n        if (this.logOutUser || !this.joinGameSuccess || this.networkWaiting || !this.isTutorialFinished()) return;\n        const { MESSAGE_DIALOG } = this.node.config;\n        this.networkWaiting = true;\n        this.showPopupHandleOutGame(MESSAGE_DIALOG.NETWORK_DISCONNECT, handleFlowOutGame);\n    },\n\n    onNetworkWarning() {\n        if (this.logOutUser || !this.joinGameSuccess || this.networkWaiting || !this.isTutorialFinished()) return;\n        const { MESSAGE_DIALOG } = this.node.config;\n        cc.log('Show toast message disconnect');\n        if (!this.showMessageForceClose && this.toastMessage) {\n            this.toastMessage.showMessage(MESSAGE_DIALOG.NETWORK_WARNING);\n        }\n    },\n\n    onNetworkConnected() {\n        if (!this.joinGameSuccess) return;\n        this.networkWarningTime = 0;\n        if (!this.showMessageForceClose && this.networkWaiting) {\n            const { NAME } = this.node.config.MESSAGE_DIALOG;\n            this.cutscene.emit(\"CLOSE_CUTSCENE\", NAME);\n            this.cutscene.emit(\"CLOSE_ALL_NOTICES\");\n            this.networkWaiting = false;\n        }\n        if (this.isShowWaitingCutScene) {\n            this.isShowWaitingCutScene = false;\n            this.cutscene.emit(\"CLOSE_CUTSCENE\", 'waitingScene');\n        }\n    },\n\n    hideTutorial() {\n        this.trialButton.emit('SHOW_BLOCK_INPUTS', false);\n    },\n\n    changeBetCallback() {\n        // TO DO\n    },\n    onDisable() {\n        if (this.tweenDetectAFK) this.this.tweenDetectAFK.stop();\n        this.tweenDetectAFK = null;\n    },\n\n    // parse ec=\"c:usd#l:vn\" => extendCommonData { c: 'usd', l: 'vn' }\n    parseExtendCommonData(extendCommon) {\n        const properties = extendCommon.split('#');\n        let extendCommonData = {};\n        properties.forEach(stringValue => {\n            const property = stringValue.split(':');\n            const key = property[0];\n            const value = property[1];\n            extendCommonData[key] = value;\n        });\n        return extendCommonData;\n    },\n\n    _updateCurrencyConfig() {\n        this.currencyCode = this._getCurrency();\n        this.node.gSlotDataStore.currencyCode = this.currencyCode;\n\n        if (this.currencyCode === this.defaultCurrency || !this.currencyCode) return;\n        this._updateGameConfig();\n\n        const currencyConfig = this.node.config.MONEY_FORMAT;\n        updateUtilConfig('CURRENCY_CONFIG', currencyConfig);\n    },\n\n    _getCurrency() {\n        this.defaultCurrency = this.node.config.DEFAULT_CURRENCY || 'VND';\n        const serverCurrency = this.getServerCurrency();\n        const clientCurrency = this.getClientCurrency();\n        if (serverCurrency !== clientCurrency) return this.showCurrencyErrorPopup();\n        return serverCurrency.toUpperCase();\n    },\n\n    getServerCurrency() {\n        return this.extendCommonData.c && this.extendCommonData.c.toUpperCase();\n    },\n\n    _updateGameConfig() {\n        const { CURRENCY_CONFIG } = this.node.config;\n        if (!CURRENCY_CONFIG) return;\n        const currencyConfig = CURRENCY_CONFIG[this.currencyCode.toUpperCase()];\n        const updatedConfig = Object.assign(this.node.config, currencyConfig);\n        this.node.config = updatedConfig;\n    },\n\n    showCurrencyErrorPopup() {\n        this._isCurrencyError = true;\n        const loadConfigAsync = require('loadConfigAsync');\n        const { LOGIN_IFRAME } = loadConfigAsync.getConfig();\n        if (LOGIN_IFRAME) {\n            const { NAME, CURRENCY_NOT_SUPPORTED } = this.node.config.MESSAGE_DIALOG;\n            let actionOK = () => {\n                this._isCurrencyError = false;\n                handleCloseGameIframe();\n            };\n            this.showMessageForceClose = true;\n            this.showCutscene(NAME, {\n                strText: CURRENCY_NOT_SUPPORTED, actionBtnOK: actionOK\n            });\n        };\n    },\n\n    getClientCurrency() {\n        const loadConfigAsync = require('loadConfigAsync');\n        const { LOGIN_IFRAME } = loadConfigAsync.getConfig();\n\n        if (!this.node.config.IS_SUPPORT_MULTI_CURRENCY) return '';\n        let currencyCode = '';\n        if (LOGIN_IFRAME) {\n            currencyCode = getUrlParam('c') || this.defaultCurrency;\n        } else {\n            currencyCode = cc.sys.localStorage.getItem('c') || this.defaultCurrency;\n        }\n        return currencyCode.toUpperCase();\n    },\n\n    closePopups() {\n        if (this.node.soundPlayer) this.node.soundPlayer.playSFXClick();\n        this.usingPopups.forEach(popup => {\n            popup && popup.emit(\"CLOSE_PANEL\");\n        });\n    }\n});\n"]}