{"version":3,"sources":["../../../../../../../assets/cc-common/cc-slotbase-v2/gui/betLines/assets/cc-common/cc-slotbase-v2/gui/betLines/BetLineSelection.js"],"names":["require","getKeyWithGame","setKeyWithGame","cc","Class","extends","Component","properties","betLineView","Node","betLineItemPrefab","Prefab","toastView","betLineLabel","Label","bet","panel","betLineNumberHolders","type","default","maxBetLines","betLineComponentText","itemWidth","itemHeight","toggles","Toggle","onLoad","mainDirector","node","director","string","allBetLineTypes","selectBetLineTypes","allBetLineNodes","fullBetLine","oddBetLine","evenBetLine","noneBetLine","i","a","push","b","c","_renderBetLines","_setDefaultBetLines","on","updateBetLines","updateBetLinesReal","updateBetLinesTrial","enableBetLineItem","enableBetLineItems","gSlotDataStore","defaultBetLines","Array","config","PAY_LINE_LENGTH","keys","map","join","betLines","GAME_ID","BET_LINES_KEY","split","Number","e","index","children","forEach","item","betLineComponent","getComponent","enableButton","isTrialMode","length","isActive","indexOf","setActiveButton","emit","onBetLineChangedByButton","selectedBetLines","_getSelectedBetLines","_setStoreBetLines","currentBetData","slotBetDataStore","data","DEFAULT_BET","toggle","isChecked","uncheck","itemPerRow","itemPerCol","betLineItem","instantiate","name","init","setIndex","setSound","soundPlayer","x","Math","floor","y","addChild","sort","compareArr","soureArr","destArr","res","allToggle","check","evenToggle","oddToggle","nonToggle","onSelectEvenPayLines","playSFXClick","onIngameEvent","onSeletOddBetLines","onCancelSelectBetLines","onSelectAllBetLines","onCheckBetLines","stopAllActions","opacity","runAction","sequence","fadeIn","easing","easeSineIn","delayTime","fadeOut","hide","show","active","currentSlotDirector","currentGameMode","buttons","tutorialMgr","isFinished"],"mappings":"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","file":"BetLineSelection.js","sourceRoot":"../../../../../../../assets/cc-common/cc-slotbase-v2/gui/betLines","sourcesContent":["const { getKeyWithGame, setKeyWithGame } = require('gameCommonUtils');\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        betLineView: cc.Node,\n        betLineItemPrefab: cc.Prefab,\n        toastView: cc.Node,\n        betLineLabel: cc.Label,\n        bet: cc.Node,\n        panel: cc.Node,\n        betLineNumberHolders: {\n            type: cc.Node,\n            default: []\n        },\n        maxBetLines: 25,\n        betLineComponentText: 'BetLineButton',\n        itemWidth: 100,\n        itemHeight: 100,\n        toggles: [cc.Toggle],\n    },\n\n    onLoad() {\n        this.mainDirector = this.node.mainDirector.director;\n        if (this.betLineLabel) this.betLineLabel.string = this.maxBetLines;\n        this.allBetLineTypes = [];\n        this.selectBetLineTypes = [];\n        this.allBetLineNodes = [];\n        this.fullBetLine = [];\n        this.oddBetLine = [];\n        this.evenBetLine = [];\n        this.noneBetLine = [];\n        for(let i = 1 ; i<=this.maxBetLines; i++){\n            const a = i;\n            this.fullBetLine.push(a);\n            if(i%2===0){\n                const b = i;\n                this.evenBetLine.push(b);\n            }else{\n                const c = i;\n                this.oddBetLine.push(c);\n            }\n        }\n        this._renderBetLines();\n\n        this._setDefaultBetLines();\n        this.node.on('UPDATE_BET_LINES', this.updateBetLines, this);\n        this.node.on('UPDATE_BET_LINES_REAL', this.updateBetLinesReal, this);\n        this.node.on('UPDATE_BET_LINES_TRIAL', this.updateBetLinesTrial, this);\n        this.node.on('ENABLE_BET_LINE_ITEM', this.enableBetLineItem, this);\n        this.node.on('ENABLE_BET_LINE_ITEMS', this.enableBetLineItems, this);\n    },\n\n    _setDefaultBetLines() {\n        if (this.node.gSlotDataStore) {\n            const defaultBetLines = [...Array(this.node.config.PAY_LINE_LENGTH).keys()].map(i => i + 1).join(',');\n            const betLines = getKeyWithGame(this.node.config.GAME_ID, this.node.config.BET_LINES_KEY, defaultBetLines);\n            if (betLines) {\n                this.node.gSlotDataStore.betLines = betLines.split(',').map(e => Number(e)) || [];\n                this.allBetLineTypes = this.node.gSlotDataStore.betLines;\n                this.updateBetLines(this.node.gSlotDataStore.betLines);\n            } else {\n                this.node.gSlotDataStore.betLines = [];\n                this.updateBetLines([]);\n            }\n        } else {\n            this.allBetLineNodes = [...Array(this.node.config.PAY_LINE_LENGTH).keys()].map(i => i + 1);\n        }\n    },\n\n    enableBetLineItem(index) {\n        this.betLineView.children.forEach((item, i) => {\n            const betLineComponent = item.getComponent(this.betLineComponentText);\n            betLineComponent.enableButton(index === i);\n        });\n    },\n\n    enableBetLineItems() {\n        this.betLineView.children.forEach((item) => {\n            const betLineComponent = item.getComponent(this.betLineComponentText);\n            betLineComponent.enableButton(true);\n        });\n    },\n\n    updateBetLines(betLines = []) {\n        if (!this.node.gSlotDataStore.isTrialMode) {\n            setKeyWithGame(this.node.config.GAME_ID, this.node.config.BET_LINES_KEY, betLines.join(','));\n        }\n        this.selectBetLineTypes = [...betLines];\n        if (this.betLineLabel) this.betLineLabel.string = betLines.length;\n        this.betLineView.children.forEach((item) => {\n            const betLineComponent = item.getComponent(this.betLineComponentText);\n            const isActive = betLineComponent && betLineComponent.index && betLines.indexOf(betLineComponent.index) !== -1;\n            betLineComponent.setActiveButton(isActive);\n        });\n\n        this.betLineNumberHolders.forEach(item => {\n            item.emit('UPDATE_BET_LINES', betLines);\n        });\n\n        this.onBetLineChangedByButton();\n    },\n\n    updateBetLinesReal() {\n        const defaultBetLines = [...Array(this.node.config.PAY_LINE_LENGTH).keys()].map(i => i + 1).join(',');\n        const betLines = getKeyWithGame(this.node.config.GAME_ID, this.node.config.BET_LINES_KEY, defaultBetLines);\n        this.updateBetLines(betLines.split(',').map(e => Number(e)) || []);\n\n        const selectedBetLines = this._getSelectedBetLines();\n        this._setStoreBetLines(selectedBetLines);\n        if (this.betLineLabel) this.betLineLabel.string = selectedBetLines.length;\n\n        const {currentBetData} = this.node.gSlotDataStore.slotBetDataStore.data;\n        if (this.bet) this.bet.emit('UPDATE_BET', currentBetData);\n        this.betLineNumberHolders.forEach(item => {\n            item.emit('UPDATE_BET_LINES', this.node.gSlotDataStore.betLines);\n        });\n    },\n\n    updateBetLinesTrial(betLines = []) {\n        this.selectBetLineTypes = [...betLines];\n        if (this.betLineLabel) this.betLineLabel.string = betLines.length;\n        this.betLineView.children.forEach((item) => {\n            const betLineComponent = item.getComponent(this.betLineComponentText);\n            const isActive = betLineComponent && betLineComponent.index && betLines.indexOf(betLineComponent.index) !== -1;\n            betLineComponent.setActiveButton(isActive);\n        });\n\n        this._setStoreBetLines(this.selectBetLineTypes);\n        if (this.betLineLabel) this.betLineLabel.string = this.selectBetLineTypes.length;\n\n        if (this.bet) this.bet.emit('UPDATE_BET', this.node.config.DEFAULT_BET);\n        this.betLineNumberHolders.forEach(item => {\n            item.emit('UPDATE_BET_LINES', this.node.gSlotDataStore.betLines);\n        });\n\n        if (this.toggles) {\n            for (let i = 0; i<this.toggles.length; i++) {\n                const toggle = this.toggles[i];\n                if (toggle &&toggle.isChecked){\n                    toggle.uncheck();\n                }\n            }\n        }\n\n    },\n\n    _renderBetLines() {\n        const itemPerRow = 5;\n        const itemPerCol = this.maxBetLines/itemPerRow;\n        this.selectBetLineTypes = [...this.allBetLineTypes];\n\n        for (let i = 1; i <= this.maxBetLines; i++) {\n            const betLineItem = cc.instantiate(this.betLineItemPrefab);\n            betLineItem.name = 'BetLineButton_' + i;\n            const betLineComponent = betLineItem.getComponent(this.betLineComponentText);\n            betLineComponent.setActiveButton(true);\n            betLineComponent.init(this);\n            betLineComponent.setIndex(i);\n            betLineComponent.setSound(this.node.soundPlayer);\n\n            betLineItem.x = (Math.floor(i-1)%itemPerRow - itemPerRow/2 + 0.5)*this.itemWidth;\n            betLineItem.y = ((Math.floor(i-1)/itemPerRow|0) - itemPerCol/2 + 0.5)*(-this.itemHeight);\n\n            this.allBetLineNodes.push(betLineItem);\n            this.betLineView.addChild(betLineItem);\n        }\n    },\n\n    _setStoreBetLines(selectedBetLines) {\n        if (this.node.gSlotDataStore && selectedBetLines) {\n            this.node.gSlotDataStore.betLines = [...selectedBetLines];\n            if (!this.node.gSlotDataStore.isTrialMode) {\n                setKeyWithGame(this.node.config.GAME_ID, this.node.config.BET_LINES_KEY, this.node.gSlotDataStore.betLines.join(','));\n            }\n        }\n    },\n\n    _getSelectedBetLines() {\n        let selectedBetLines = [];\n        this.betLineView.children.forEach((item) => {\n            const betLineComponent = item.getComponent(this.betLineComponentText);\n            if (betLineComponent && betLineComponent.index && betLineComponent.isActive) {\n                selectedBetLines.push(betLineComponent.index);\n            }\n        });\n        return selectedBetLines.sort((a, b) => a - b);\n    },\n\n    compareArr(soureArr, destArr){\n        let res = true;\n        if(soureArr.length === destArr.length){\n            for(let i = 0; i<soureArr.length; i++){\n                if(soureArr[i]!=destArr[i]){\n                    res = false;\n                    break;\n                }\n            }\n        }else{\n            res = false;\n        }\n\n        return res;\n    },\n\n    onBetLineChangedByButton(){\n        if(this.toggles){\n            for(let i = 0; i<this.toggles.length; i++){\n                const toggle = this.toggles[i];\n                if(toggle &&toggle.isChecked){\n                    toggle.uncheck();\n                }\n            }\n        }else\n            return;\n\n        const selectedBetLines = this._getSelectedBetLines();\n        if(this.compareArr(selectedBetLines, this.fullBetLine)){\n            const allToggle = this.toggles[0];\n            if(allToggle){\n                allToggle.check();\n            }\n        }else if(this.compareArr(selectedBetLines, this.evenBetLine)){\n            const evenToggle = this.toggles[1];\n            if(evenToggle){\n                evenToggle.check();\n            }\n        }else if(this.compareArr(selectedBetLines, this.oddBetLine)){\n            const oddToggle = this.toggles[2];\n            if(oddToggle){\n                oddToggle.check();\n            }\n        }else if(this.compareArr(selectedBetLines, this.noneBetLine)){\n            const nonToggle = this.toggles[3];\n            if(nonToggle){\n                nonToggle.check();\n            }\n        }\n    },\n\n    /** Select Even BetLines **/\n    onSelectEvenPayLines() {\n        const evenToggle = this.toggles[1];\n        if(evenToggle&&evenToggle.isChecked)\n            return;\n        if (this.node.soundPlayer) this.node.soundPlayer.playSFXClick();\n        this.allBetLineNodes.forEach((item, i) => {\n            item.emit('SET_ACTIVE', i % 2 !== 0);\n        });\n        this.mainDirector.onIngameEvent(\"BET_LINE_EVEN_CLICK\");\n    },\n\n    /** Select Odd BetLines **/\n    onSeletOddBetLines() {\n        const oddToggle = this.toggles[2];\n        if(oddToggle&&oddToggle.isChecked)\n            return;\n        if (this.node.soundPlayer) this.node.soundPlayer.playSFXClick();\n        this.allBetLineNodes.forEach((item, i) => {\n            item.emit('SET_ACTIVE', i % 2 === 0);\n        });\n    },\n\n    /** Cancel Select All BetLines **/\n    onCancelSelectBetLines() {\n        const nonToggle = this.toggles[3];\n        if(nonToggle&&nonToggle.isChecked)\n            return;\n        if (this.node.soundPlayer) this.node.soundPlayer.playSFXClick();\n        this.allBetLineNodes.forEach(item => {\n            item.emit('SET_ACTIVE', false);\n        });\n    },\n\n    /** Select All BetLines **/\n    onSelectAllBetLines() {\n        const allToggle = this.toggles[0];\n        if(allToggle&&allToggle.isChecked)\n            return;\n        if (this.node.soundPlayer) this.node.soundPlayer.playSFXClick();\n        this.allBetLineNodes.forEach(item => {\n            item.emit('SET_ACTIVE', true);\n        });\n        this.mainDirector.onIngameEvent(\"BET_LINE_ALL_CLICK\");\n    },\n\n    /** Check BetLine Before Exit **/\n    onCheckBetLines() {\n        const selectedBetLines = this._getSelectedBetLines();\n        if (!selectedBetLines.length) {\n            this.toastView.stopAllActions();\n            this.toastView.opacity = 0;\n            this.toastView.runAction(\n                cc.sequence(\n                    cc.fadeIn(0.5).easing(cc.easeSineIn()),\n                    cc.delayTime(1),\n                    cc.fadeOut(0.5).easing(cc.easeSineIn()),\n                )\n            );\n            return;\n        }\n\n        this._setStoreBetLines(selectedBetLines);\n        if (this.betLineLabel) this.betLineLabel.string = selectedBetLines.length;\n\n        const {currentBetData} = this.node.gSlotDataStore.slotBetDataStore.data;\n        if (this.bet) this.bet.emit('UPDATE_BET', currentBetData);\n        this.betLineNumberHolders.forEach(item => {\n            item.emit('UPDATE_BET_LINES', this.node.gSlotDataStore.betLines);\n        });\n\n        this.hide();\n    },\n\n    show() {\n        this.panel.active = true;\n        this.panel.opacity = 255;\n        if (this.node.soundPlayer) this.node.soundPlayer.playSFXClick();\n        this.mainDirector.onIngameEvent(\"BET_LINE_OPEN\");\n        const currentSlotDirector = this.mainDirector.currentGameMode.director;\n        if(currentSlotDirector){\n            currentSlotDirector.buttons.emit(\"ENABLE_SPIN_KEY\", false);\n        }\n    },\n\n    hide() {\n        this.panel.active = false;\n        if (this.node.soundPlayer) this.node.soundPlayer.playSFXClick();\n        this.mainDirector.onIngameEvent(\"BET_LINE_CLOSE\");\n        const currentSlotDirector = this.mainDirector.currentGameMode.director;\n        if(currentSlotDirector && this.mainDirector.tutorialMgr && this.mainDirector.tutorialMgr.isFinished()){\n            currentSlotDirector.buttons.emit(\"ENABLE_SPIN_KEY\", true);\n        }\n    }\n});\n"]}