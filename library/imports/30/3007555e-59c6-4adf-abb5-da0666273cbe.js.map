{"version":3,"sources":["../../../../../../assets/cc-taoquan-9983/scripts/gameMode/assets/cc-taoquan-9983/scripts/gameMode/NormalGameWriter9983.js"],"names":["SlotGameWriter","require","findKeyByValue","cc","Class","extends","makeScriptResume","listScript","data","node","gSlotDataStore","playSession","freeGameMatrix","freeGameRemain","betId","winAmount","normalGameMatrix","normalGamePayLines","extend","fsor","fgoi","fgo","nwm","fwm","promotion","promotionRemain","promotionTotal","push","command","name","steps","slotBetDataStore","listBet","String","split","betIndex","betValue","normalGameTableFormat","normalSpinMatrix","convertSlotMatrix","normalPayLines","convertPayLine","matrix","payLines","time","freeGameTotal","content","mode","isNormal","freeSpinMatrix","freeGameTableFormat","unshift","length","makeScriptSpinClick","currentBetData","currentExtraBetData","extraSteps","extraBetIndex","spinTimes","isAutoSpin","promotionBetId","availableSpinTimes","canISpin","calculateWalletAfterClickSpin","updateWalletAfterClickSpin","makeScriptResultReceive","lastEvent","subSym1","subSym2","type","fsoi","jpInfo","jackpotInfoArr","jackpotAmount","Number","jackpotId","isGrand","value","makeScriptShowResults","scriptNormalGameAndFreeGameOption","scriptNormalGame","winAmountPlaySession","showBigWin","isShowBigwin","gameSpeed","isFTR","config","GAME_SPEED","INSTANTLY","modeTurbo","makeScriptGameRestart","makeScriptSetUpBet"],"mappings":"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","file":"NormalGameWriter9983.js","sourceRoot":"../../../../../../assets/cc-taoquan-9983/scripts/gameMode","sourcesContent":["const SlotGameWriter = require('SlotGameWriter');\nconst { findKeyByValue } = require('utils');\ncc.Class({\n    extends: SlotGameWriter,\n\n    makeScriptResume() {\n        const listScript = [];\n        const data = this.node.gSlotDataStore.playSession;\n        const { freeGameMatrix, freeGameRemain, betId, winAmount, normalGameMatrix, normalGamePayLines, } = data;\n        const { fsor, fgoi, fgo, nwm, fwm } = data.extend;\n        const { promotion, promotionRemain, promotionTotal } = this.node.gSlotDataStore;\n        listScript.push({\n            command: \"_showCutscene\",\n            data: {\n                name: \"Resume\"\n            }\n        });\n\n        const { steps } = this.node.gSlotDataStore.slotBetDataStore.data;\n        const listBet = String(betId).split('');\n        const betIndex = listBet[0];\n        const betValue = steps[betIndex];\n        listScript.push({\n            command: \"_updateBet\",\n            data: betValue\n        });\n        listScript.push({\n            command: \"_disableBet\"\n        });\n\n        const { normalGameTableFormat } = this.node.gSlotDataStore.playSession;\n        const normalSpinMatrix = this.node.gSlotDataStore.convertSlotMatrix(normalGameMatrix, normalGameTableFormat);\n        const normalPayLines = this.node.gSlotDataStore.convertPayLine(normalGamePayLines);\n        listScript.push({\n            command: \"_updateMatrix\",\n            data: { matrix: normalSpinMatrix },\n        });\n        listScript.push({\n            command: \"_setUpPaylines\",\n            data: { matrix: normalSpinMatrix, payLines: normalPayLines },\n        });\n\n        if (nwm && nwm > 1) {\n            listScript.push({\n                command: \"_resumeMultiply\",\n                data: nwm\n            });\n        }\n        if (winAmount && winAmount > 0) {\n            listScript.push({\n                command: \"_updateWinningAmount\",\n                data: { winAmount, time: 300 }\n            });\n        }\n\n        if ((fgo && data.freeGameTotal)) {\n            listScript.push({\n                command: \"_playSFXCloud2\",\n            });\n            listScript.push({\n                command: \"_showCutscene\",\n                data: {\n                    name: \"CloudTransition\",\n                    content: {}\n                }\n            });\n            listScript.push({\n                command: \"_showFreeGameOption\",\n                data: {\n                    name: \"FreeGameOption\",\n                    content: {\n                        mode: \"free\"\n                    }\n                }\n            });\n            listScript.push({\n                command: \"_newGameMode\",\n                data: { name: \"freeGame\", data: { fsor, fgoi, fwm } },\n            });\n            listScript.push({\n                command: \"_resumeGameMode\",\n                data: { name: \"normalGame\", },\n            });\n        } else if (fgo) {\n            listScript.push({\n                command: \"_playSFXLenChau\",\n            });\n            listScript.push({\n                command: \"_showScatterPayLine\",\n            });\n\n            listScript.push({\n                command: \"_showCutscene\",\n                data: {\n                    name: \"ScatterTransition\",\n                    content: {\n                        matrix: normalSpinMatrix,\n                        isNormal: true\n                    }\n                }\n            });\n            listScript.push({\n                command: \"_playSFXCloud1\",\n            });\n            listScript.push({\n                command: \"_showCutscene\",\n                data: {\n                    name: \"CloudTransition\",\n                    content: {}\n                }\n            });\n\n            listScript.push({\n                command: \"_showFreeGameOption\",\n                data: {\n                    name: \"FreeGameOption\",\n                    content: {\n                        mode: \"normal\"\n                    }\n                }\n            });\n            listScript.push({\n                command: \"_newGameMode\",\n                data: { name: \"freeGame\", data: { fsor, fgoi, fwm } },\n            });\n            listScript.push({\n                command: \"_resumeGameMode\",\n                data: { name: \"normalGame\", },\n            });\n        } else if (freeGameRemain && freeGameRemain > 0) {\n            let freeSpinMatrix;\n            if (freeGameMatrix) {\n                const { freeGameTableFormat } = this.node.gSlotDataStore.playSession;\n                freeSpinMatrix = this.node.gSlotDataStore.convertSlotMatrix(freeGameMatrix, freeGameTableFormat);\n            }\n\n            listScript.push({\n                command: \"_showScatterPayLine\",\n            });\n            if (freeSpinMatrix) {\n                freeSpinMatrix[0].unshift(\"1\");\n                freeSpinMatrix[4].unshift(\"1\");\n            }\n            listScript.push({\n                command: \"_newGameMode\",\n                data: { name: \"freeGame\", data: { matrix: freeSpinMatrix, fsor, fgoi, fwm } },\n            });\n            listScript.push({\n                command: \"_resumeGameMode\",\n                data: { name: \"normalGame\", },\n            });\n        }\n        if (normalPayLines && normalPayLines.length > 0) {\n            listScript.push({\n                command: \"_showEachPayLine\",\n            });\n        } else {\n            listScript.push({\n                command: \"_clearPaylines\",\n            });\n        }\n        listScript.push({\n            command: \"_resumeWallet\",\n        });\n        listScript.push({\n            command: \"_gameRestart\"\n        });\n        if (promotion === true && promotionRemain && promotionTotal && promotionRemain > 0) {\n            listScript.push({\n                command: \"_showPromotionPopup\",\n            });\n        }\n        return listScript;\n    },\n\n    makeScriptSpinClick() {\n        let listScript = [];\n        const { currentBetData, steps, currentExtraBetData, extraSteps } = this.node.gSlotDataStore.slotBetDataStore.data;\n        const { winAmount } = this.node.gSlotDataStore.playSession;\n        const betIndex = findKeyByValue(steps, currentBetData);\n        const extraBetIndex = findKeyByValue(extraSteps, currentExtraBetData);\n        const { spinTimes, isAutoSpin, promotion, promotionBetId, promotionRemain } = this.node.gSlotDataStore;\n        let availableSpinTimes = '';\n\n        if (promotion && promotionRemain > 0) {\n            availableSpinTimes = promotionRemain - 1;\n            listScript.push({\n                command: \"_updatePromotionRemain\",\n                data: availableSpinTimes\n            });\n        } else if (isAutoSpin) {\n            if (spinTimes && spinTimes > 0) {\n                availableSpinTimes = spinTimes - 1;\n            }\n        } else {\n            availableSpinTimes = 0;\n        }\n        this.node.gSlotDataStore.spinTimes = availableSpinTimes;\n\n        const canISpin = this.node.gSlotDataStore.slotBetDataStore.calculateWalletAfterClickSpin();\n\n        if (canISpin >= 0 || promotion === true) {\n            if (canISpin >= 0 && !promotion) {\n                this.node.gSlotDataStore.slotBetDataStore.updateWalletAfterClickSpin();\n            }\n            if (winAmount > 0) {\n                listScript.push({\n                    command: \"_updateLastWin\",\n                    data: true\n                });\n            }\n            listScript.push({\n                command: \"_clearPaylines\"\n            });\n            listScript.push({\n                command: \"_updateSpinTimes\",\n                data: availableSpinTimes\n            });\n            listScript.push({\n                command: \"_updateWallet\",\n            });\n            listScript.push({\n                command: '_clearWinAmount'\n            });\n            listScript.push({\n                command: \"_showTrialButtons\",\n                data: false\n            });\n            if (promotion) {\n                listScript.push({\n                    command: \"_sendSpinToNetwork\",\n                    data: { currentBetData: promotionBetId }\n                });\n            } else {\n                listScript.push({\n                    command: \"_sendSpinToNetwork\",\n                    data: { currentBetData: betIndex + \"\" + extraBetIndex }\n                });\n            }\n            listScript.push({\n                command: \"_disableBet\"\n            });\n            listScript.push({\n                command: \"_spinClick\"\n            });\n            return listScript;\n        } else {\n            this.node.gSlotDataStore.spinTimes = 0;\n            listScript = [\n                {\n                    command: \"_enableBet\",\n                },\n                {\n                    command: \"_resetSpinButton\",\n                },\n                {\n                    command: \"_clearPaylines\",\n                },\n                {\n                    command: \"_showMessageNoMoney\",\n                },\n            ];\n            return listScript;\n        }\n    },\n\n    makeScriptResultReceive() {\n        const { matrix, subSym1, subSym2, nwm, type, fsoi, jpInfo } = this.node.gSlotDataStore.lastEvent;\n        if (type == 'freeSpinOptionResult') {\n            this.node.gSlotDataStore.fsoi = fsoi;\n            const listScript = [];\n            listScript.push({\n                command: \"_hideCutscene\",\n                data: {\n                    name: \"FreeGameOption\",\n                }\n            });\n            return listScript;\n        } else {\n            const listScript = [];\n            if (jpInfo) {\n                const jackpotInfoArr = jpInfo.split(';');\n                const jackpotAmount = Number(jackpotInfoArr[1]);\n                const jackpotId = jackpotInfoArr[0];\n                listScript.push({\n                    command: \"_updateValueJP\",\n                    data: {\n                        isGrand: (jackpotId == '0') ? true : false,\n                        value: jackpotAmount\n                    }\n                });\n                listScript.push({\n                    command: \"_pauseUpdateJP\",\n                });\n            }\n            listScript.push({\n                command: \"_resultReceive\",\n                data: { matrix, subSym1, subSym2, nwm }\n            });\n            listScript.push({\n                command: \"_showResult\",\n                data: matrix,\n            });\n            return listScript;\n        }\n    },\n\n    makeScriptShowResults() {\n        const listScript = [];\n        const { payLines, matrix, fgo, jpInfo } = this.node.gSlotDataStore.lastEvent;\n\n        listScript.push({\n            command: \"_clearPaylines\",\n        });\n        listScript.push({\n            command: \"_setUpPaylines\",\n            data: { matrix, payLines: payLines },\n        });\n        if (!jpInfo) {\n            listScript.push({\n                command: \"_hideSubSymbolPayLine\",\n            });\n        } else {\n            const jackpotInfoArr = jpInfo.split(';');\n            const jackpotAmount = Number(jackpotInfoArr[1]);\n            const jackpotId = jackpotInfoArr[0];\n\n            listScript.push({\n                command: \"_showSubSymbolPayLine\",\n                data: jackpotId\n            });\n\n            listScript.push({\n                command: \"_showUnskippedCutscene\",\n                data: {\n                    name: \"JackpotWin\",\n                    content: {\n                        jackpotId,\n                        jackpotAmount\n                    }\n                }\n            });\n\n            listScript.push({\n                command: \"_addWinningAmount\",\n                data: { winAmount: jackpotAmount, time: 300 }\n            });\n            listScript.push({\n                command: \"_resumeUpdateJP\",\n            });\n            listScript.push({\n                command: \"_hideSubSymbolPayLine\",\n            });\n        }\n\n        if (fgo) {\n\n            this.scriptNormalGameAndFreeGameOption(listScript);\n        } else if (payLines && payLines.length > 0) {\n            this.scriptNormalGame(listScript);\n        } else {\n            listScript.push({\n                command: \"_clearPaylines\",\n            });\n            listScript.push({\n                command: \"_gameRestart\"\n            });\n        }\n\n        return listScript;\n    },\n\n    //Function Support\n    scriptNormalGameAndFreeGameOption(listScript) {\n        const { payLines, winAmount, jpInfo, nwm, matrix } = this.node.gSlotDataStore.lastEvent;\n        const { currentBetData } = this.node.gSlotDataStore.slotBetDataStore.data;\n        const { spinTimes } = this.node.gSlotDataStore;\n        const winAmountPlaySession = this.node.gSlotDataStore.playSession.winAmount;\n\n        if (payLines && payLines.length > 0) {\n            const showBigWin = winAmount && winAmount >= currentBetData * 10 && !jpInfo;\n            if (showBigWin) {\n                listScript.push({\n                    command: \"_showAllPayLine\",\n                });\n                if (nwm && nwm > 1) {\n                    listScript.push({\n                        command: \"_showWildTransition\",\n                        data: {\n                            name: \"WildTransition\",\n                            content: {\n                                matrix,\n                                isNormal: true,\n                                nwm,\n                                isShowBigwin: showBigWin\n                            }\n                        }\n                    });\n                    listScript.push({\n                        command: \"_animMultiplierWild\",\n                        data: {\n                            nwm,\n                            isShowBigwin: showBigWin\n                        }\n                    });\n                }\n                listScript.push({\n                    command: \"_showCutscene\",\n                    data: {\n                        name: \"WinEffect\",\n                        content: {\n                            winAmount: winAmount,\n                            currentBetData\n                        }\n                    }\n                });\n                listScript.push({\n                    command: \"_addWinningAmount\",\n                    data: { winAmount, time: 300 }\n                });\n            } else {\n                if (nwm && nwm > 1) {\n                    listScript.push({\n                        command: \"_showAllPayLine\",\n                    });\n                    listScript.push({\n                        command: \"_showWildTransition\",\n                        data: {\n                            name: \"WildTransition\",\n                            content: {\n                                matrix,\n                                isNormal: true,\n                                nwm,\n                                isShowBigwin: showBigWin\n                            }\n                        }\n                    });\n                    listScript.push({\n                        command: \"_animMultiplierWild\",\n                        data: {\n                            nwm,\n                            isShowBigwin: showBigWin\n                        }\n                    });\n                } else {\n                    listScript.push({\n                        command: \"_showAllPayLineSync\",\n                    });\n                }\n                if (winAmount && winAmount < currentBetData * 10) {\n                    listScript.push({\n                        command: \"_showSoundWinAnimation\",\n                        data: {\n                            currentBetData,\n                            winAmount\n                        }\n                    });\n                }\n            }\n            listScript.push({\n                command: \"_showEachPayLineSync\",\n            });\n\n\n        }\n        if (winAmountPlaySession) {\n            listScript.push({\n                command: \"_addWinningAmount\",\n                data: { winAmount: winAmountPlaySession, time: 300 }\n            });\n        }\n\n        listScript.push({\n            command: \"_playSFXLenChau\",\n        });\n        listScript.push({\n            command: \"_showScatterPayLine\",\n        });\n\n        listScript.push({\n            command: \"_showCutscene\",\n            data: {\n                name: \"ScatterTransition\",\n                content: {\n                    matrix,\n                    isNormal: true\n                }\n            }\n        });\n        listScript.push({\n            command: \"_playSFXCloud1\",\n        });\n        listScript.push({\n            command: \"_showCutscene\",\n            data: {\n                name: \"CloudTransition\",\n                content: {}\n            }\n        });\n\n        listScript.push({\n            command: \"_showFreeGameOption\",\n            data: {\n                name: \"FreeGameOption\",\n                content: {\n                    mode: \"normal\"\n                }\n            }\n        });\n        listScript.push({\n            command: \"_newGameMode\",\n            data: { name: \"freeGame\", data: matrix },\n        });\n        listScript.push({\n            command: \"_resumeGameMode\",\n            data: { name: \"normalGame\", },\n        });\n        if (spinTimes && spinTimes > 0) {\n            listScript.push({\n                command: \"_resumeSpinTime\",\n                data: spinTimes,\n            });\n        }\n\n        if (payLines && payLines.length > 0) {\n            listScript.push({\n                command: \"_showEachPayLine\",\n            });\n        } else {\n            listScript.push({\n                command: \"_clearPaylines\",\n            });\n        }\n        listScript.push({\n            command: \"_updateWallet\",\n        });\n        listScript.push({\n            command: \"_gameRestart\"\n        });\n\n    },\n\n    scriptNormalGame(listScript) {\n        const { payLines, winAmount, jpInfo, nwm, matrix } = this.node.gSlotDataStore.lastEvent;\n        const winAmountPlaySession = this.node.gSlotDataStore.playSession.winAmount;\n        const { currentBetData } = this.node.gSlotDataStore.slotBetDataStore.data;\n        const { spinTimes, gameSpeed } = this.node.gSlotDataStore;\n        const isFTR = gameSpeed === this.node.config.GAME_SPEED.INSTANTLY;\n\n        if (spinTimes && spinTimes > 0) {\n            listScript.push({\n                command: \"_resumeSpinTime\",\n                data: spinTimes,\n            });\n        }\n        if (payLines && payLines.length > 0) {\n            const showBigWin = winAmount && winAmount >= currentBetData * 10 && !jpInfo;\n            if (showBigWin) {\n                listScript.push({\n                    command: \"_showAllPayLine\",\n                });\n                if (nwm && nwm > 1) {\n                    listScript.push({\n                        command: \"_showWildTransition\",\n                        data: {\n                            name: \"WildTransition\",\n                            content: {\n                                matrix,\n                                isNormal: true,\n                                nwm,\n                                isShowBigwin: showBigWin\n                            }\n                        }\n                    });\n                    listScript.push({\n                        command: \"_animMultiplierWild\",\n                        data: {\n                            nwm,\n                            isShowBigwin: showBigWin\n                        }\n                    });\n                    if (showBigWin && !this.node.gSlotDataStore.modeTurbo) {\n                        listScript.push({\n                            command: \"_delayTimeScript\",\n                            data: 1.5\n                        });\n                    }\n                }\n                listScript.push({\n                    command: \"_showWinEffect\",\n                    data: {\n                        name: \"WinEffect\",\n                        content: {\n                            winAmount: winAmount,\n                            currentBetData\n                        }\n                    }\n                });\n                if (!this.node.gSlotDataStore.modeTurbo && !isFTR) {\n                    listScript.push({\n                        command: \"_updateWinningAmountSync\",\n                        data: { winAmount: winAmountPlaySession, time: 300 }\n                    });\n                }\n            } else {\n                if (nwm && nwm > 1) {\n                    listScript.push({\n                        command: \"_showAllPayLine\",\n                    });\n                    listScript.push({\n                        command: \"_showWildTransition\",\n                        data: {\n                            name: \"WildTransition\",\n                            content: {\n                                matrix,\n                                isNormal: true,\n                                nwm,\n                                isShowBigwin: showBigWin\n                            }\n                        }\n                    });\n                    listScript.push({\n                        command: \"_animMultiplierWild\",\n                        data: {\n                            nwm,\n                            isShowBigwin: showBigWin\n                        }\n                    });\n                } else {\n                    listScript.push({\n                        command: \"_showAllPayLineSync\",\n                    });\n                }\n                if (winAmount && winAmount < currentBetData * 10) {\n                    listScript.push({\n                        command: \"_showSoundWinAnimation\",\n                        data: {\n                            currentBetData,\n                            winAmount\n                        }\n                    });\n                }\n            }\n            listScript.push({\n                command: \"_showEachPayLine\",\n            });\n        } else {\n            listScript.push({\n                command: \"_clearPaylines\",\n            });\n        }\n        if (winAmount > 0) {\n            listScript.push({\n                command: \"_updateWinningAmountSync\",\n                data: { winAmount: winAmountPlaySession, time: isFTR ? 50 : 300 }\n            });\n        }\n        listScript.push({\n            command: \"_pauseWallet\",\n        });\n        listScript.push({\n            command: \"_gameRestart\"\n        });\n\n    },\n    makeScriptGameRestart() {\n        const listScript = [];\n        const { spinTimes, isAutoSpin, promotion, promotionRemain } = this.node.gSlotDataStore;\n\n        if (promotion) {\n            listScript.push({\n                command: \"_resetPromotionButtons\"\n            });\n        }\n        if (spinTimes && spinTimes > 0 && !promotion) {\n            listScript.push({\n                command: \"_runAutoSpin\"\n            });\n        } else {\n            if (!promotionRemain || promotionRemain <= 0) {\n                listScript.push({\n                    command: \"_enableBet\"\n                });\n                listScript.push({\n                    command: \"_exitPromotionMode\"\n                });\n            }\n            if (isAutoSpin) {\n                this.node.gSlotDataStore.isAutoSpin = false;\n                listScript.push({\n                    command: \"_resetSpinButton\",\n                });\n            }\n        }\n        listScript.push({\n            command: \"_runAsyncScript\",\n        });\n        return listScript;\n    },\n\n    makeScriptSetUpBet(value) {\n        return [{\n            command: \"_updateBet\",\n            data: value,\n        }];\n    },\n});\n"]}