{"version":3,"sources":["SlotReelv2.js"],"names":["lodash","require","cc","Class","extends","properties","usingMotionBlur","animSymbol","Prefab","onLoad","node","mainComponent","MAX_STEP","Number","MAX_SAFE_INTEGER","init","showNumber","gameConfig","col","symbolPrefab","isFreeMode","config","symbolList","SYMBOL_NAME_LIST_FREE","SYMBOL_NAME_LIST","showSymbols","totalNumber","TABLE_SYMBOL_BUFFER","TOP","BOT","symbolStartY","TABLE_FORMAT","SYMBOL_HEIGHT","i","symbol","instantiate","name","parent","reel","setPosition","changeToSymbol","getRandomSymbolName","length","unshift","mode","curentConfig","STATS","index","reset","initSymbolBetHistory","SYMBOL_HEIGHT_HISTORY","Math","floor","random","getRandomSymbol","listSymbol","cloneDeep","SUB_SYMBOL","filter","includes","log","stopReelRoll","stopAllActions","children","forEach","child","y","stop","step","showResult","matrix","setMode","startSpinningWithDelay","delay","isFastToResult","currentSpeed","TIME","action3","sequence","delayTime","REEL_DELAY_START","moveBy","callFunc","runSpinning","runAction","runSpinningAnimation","delayIndex","isNearWin","runStopAnimation","REEL_EASING_DISTANCE","REEL_EASING_TIME","stopSpinningWithDelay","callback","callbackStopReel","reelDelayStop","REEL_DELAY_STOP","director","getScheduler","schedule","setStepToStop","getRandomSymbolNameWithException","push","adjustReelSpeed","speed","extendTimeToStop","nearWin","NEAR_WIN_DELAY_TIME","NEAR_WIN_DELAY_TIME_LAST_REEL","unschedule","STEP_STOP","fastStopSpinning","indexNearWin","time","timer","onReelStop","action0","circularSymbols","lastSymbol","changeToBlurSymbol","isRealSymbol","symbolValue","stopBlur","getShowSymbol","exceptionSymbol","updateSymbols","it","nameSymbol","hasAnim","SYMBOL_HAVE_ANIM","indexOf","slotSymbolPaylineIntro","addAnimIntro","emit","hideAnimIntro","updateIntroScatterToReal"],"mappings":"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","file":"SlotReelv2.js","sourceRoot":"../../../../../../../assets/cc-common/cc-slotbase-v2/slotGame/table","sourcesContent":["\n\nconst lodash = require('lodash');\n\ncc.Class({\n    extends: require('SlotReel'),\n    properties: {\n        usingMotionBlur: false,\n        animSymbol : cc.Prefab\n    },\n    onLoad() {\n        this.node.mainComponent = this;\n        this.MAX_STEP = Number.MAX_SAFE_INTEGER;\n    },\n    init(showNumber, gameConfig, col, symbolPrefab, isFreeMode = false) {\n        this.col = col;\n        this.config = gameConfig;\n        if(isFreeMode) {\n            this.symbolList = this.config.SYMBOL_NAME_LIST_FREE[col];\n        } else {\n            this.symbolList = this.config.SYMBOL_NAME_LIST[col];\n        }\n        this.symbolPrefab = symbolPrefab;\n        this.showNumber = showNumber;\n        this.showSymbols = [];\n        this.totalNumber = this.showNumber + this.config.TABLE_SYMBOL_BUFFER.TOP + this.config.TABLE_SYMBOL_BUFFER.BOT;\n        this.isFreeMode = isFreeMode;\n        this.symbolStartY = - (this.config.TABLE_FORMAT[col]/2 + this.config.TABLE_SYMBOL_BUFFER.BOT - 0.5) * this.config.SYMBOL_HEIGHT;\n        for (let i = 0; i < this.totalNumber; ++i) {          \n            const symbol = cc.instantiate(this.symbolPrefab);\n            symbol.name = \"Symbol_\" + i;\n            symbol.parent = this.reel;\n            symbol.setPosition(0, this.symbolStartY + i*this.config.SYMBOL_HEIGHT);\n            symbol.changeToSymbol(this.getRandomSymbolName());\n            if (i >= this.config.TABLE_SYMBOL_BUFFER.BOT && this.showSymbols.length < this.showNumber) {\n                this.showSymbols.unshift(symbol);\n            }\n        }\n\n        this.mode = 'FAST';\n        this.curentConfig = this.config.STATS[this.mode];\n        this.index = 0;\n        this.reset();\n    },\n    \n    initSymbolBetHistory(showNumber, gameConfig, col, symbolPrefab, isFreeMode = false) {\n        this.col = col;\n        this.config = gameConfig;\n\n        if(isFreeMode) {\n            this.symbolList = this.config.SYMBOL_NAME_LIST_FREE[col];\n        } else {\n            this.symbolList = this.config.SYMBOL_NAME_LIST[col];\n        }\n\n        this.symbolPrefab = symbolPrefab;\n        this.showNumber = showNumber;\n        this.showSymbols = [];\n        this.totalNumber = this.showNumber;\n\n        this.symbolStartY = - (this.config.TABLE_FORMAT[col]/2 - 0.5) * this.config.SYMBOL_HEIGHT_HISTORY;\n        for (let i = 0; i < this.totalNumber; ++i) {          \n            const symbol = cc.instantiate(this.symbolPrefab);\n            symbol.name = \"Symbol_\" + i;\n            symbol.parent = this.reel;\n            symbol.setPosition(0, this.symbolStartY + i*this.config.SYMBOL_HEIGHT_HISTORY);\n            symbol.changeToSymbol(this.getRandomSymbolName());\n            if (i >= 0 && this.showSymbols.length < this.showNumber) {\n                this.showSymbols.unshift(symbol);\n            }\n        }\n\n        this.index = 0;\n        this.curentConfig = this.config.STATS[this.mode];\n        this.reset();\n    },\n\n    getRandomSymbolName() {\n        return this.symbolList[Math.floor(Math.random()*this.symbolList.length)];\n    },\n\n    getRandomSymbol() {\n        let listSymbol = lodash.cloneDeep(this.symbolList);\n        if (typeof this.config.SUB_SYMBOL !== 'undefined') {\n            listSymbol = listSymbol.filter(i => !this.config.SUB_SYMBOL.includes(i));\n        }\n        if (!listSymbol[Math.floor(Math.random()*listSymbol.length)])\n        {\n            cc.log(\"Error\");\n        }\n        return listSymbol[Math.floor(Math.random()*listSymbol.length)];\n    },\n    stopReelRoll() {\n        this.reel.stopAllActions();\n    },\n    reset() {\n        this.reel.children.forEach((child) => {\n            child.y += this.reel.y;\n        });\n        this.reel.y = 0;\n        this.index = this.index%(this.totalNumber);\n        this.stop = 0;\n        this.step = this.MAX_STEP;\n        this.showResult = 0;\n        this.matrix = [];\n    },\n    setMode(mode) {\n        this.mode = mode;\n    },\n    startSpinningWithDelay(delay) {\n        this.step = this.MAX_STEP - 1;\n        this.isFastToResult = false;\n        this.curentConfig = this.config.STATS[this.mode];\n        this.currentSpeed = this.curentConfig.TIME;\n        const action3 = cc.sequence(\n            cc.delayTime(delay*this.curentConfig.REEL_DELAY_START),\n            cc.moveBy(this.currentSpeed, 0, 25),\n            cc.moveBy(this.currentSpeed, 0, -25),\n            cc.callFunc(() => {\n                this.runSpinning();\n            }),\n        );\n        this.reel.runAction(action3);\n    },\n    runSpinning() {\n        this.runSpinningAnimation(() => {\n            if (this.step > this.showNumber) {\n                this.runSpinning();\n                this.step--;\n                if (this.step < this.totalNumber) {\n                    this.showResult = 1;\n                }\n            } else if (this.step == this.showNumber) {\n                // check last reel, near win and not fast to result\n                if (this.delayIndex === (this.config.TABLE_FORMAT.length - 1) && this.isNearWin && !this.isFastToResult) {\n                    this.runStopAnimation(50, 0.2);\n                } else {\n                    this.runStopAnimation(this.curentConfig.REEL_EASING_DISTANCE, this.curentConfig.REEL_EASING_TIME);\n                }\n            }\n        });\n    },\n    stopSpinningWithDelay(delay, matrix = [], callback) {\n        this.delayIndex = delay;\n        this.showSymbols = [];\n        this.matrix = matrix;\n        this.callbackStopReel = callback ? callback : () => {};\n        let reelDelayStop = delay * this.curentConfig.REEL_DELAY_STOP;\n        this.isNearWin = false;\n\n        this.delay = delay;\n        cc.director.getScheduler().schedule(this.setStepToStop, this, 0, 0, reelDelayStop, false);\n\n        //Add 2 more symbol to apply near miss\n        this.matrix.unshift(this.getRandomSymbolNameWithException('A'));\n\n        if (this.config.TABLE_SYMBOL_BUFFER.BOT > 0)\n            this.matrix.push(this.getRandomSymbolNameWithException('R'));\n        // this.matrix.unshift(\"2\");\n        // this.matrix.push(\"3\");\n    },\n    adjustReelSpeed(speed) {\n        this.currentSpeed = speed;\n    },\n    extendTimeToStop(nearWin) {\n        //this.isNearWin = true;\n        let reelDelayStop = 0;\n\n        if (nearWin)\n            reelDelayStop = (this.curentConfig.REEL_DELAY_STOP + this.curentConfig.NEAR_WIN_DELAY_TIME) * (this.delay);\n        else\n            reelDelayStop = (this.curentConfig.REEL_DELAY_STOP + this.curentConfig.NEAR_WIN_DELAY_TIME) * (this.delay - 1) + this.curentConfig.REEL_DELAY_STOP;\n            \n        if (nearWin && this.delay === (this.config.TABLE_FORMAT.length - 1)) {\n            reelDelayStop = reelDelayStop + this.curentConfig.NEAR_WIN_DELAY_TIME_LAST_REEL;\n        }\n        cc.director.getScheduler().unschedule(this.setStepToStop,this);\n        cc.director.getScheduler().schedule(this.setStepToStop, this, 0, 0, reelDelayStop, false);\n    },\n    setStepToStop() {\n        this.step = this.curentConfig.STEP_STOP*2 - this.totalNumber;\n    },\n    fastStopSpinning() {\n        // check step is reset will not do anything.\n        if (this.step === this.MAX_STEP) return;\n        this.isFastToResult = true;\n        cc.director.getScheduler().unschedule(this.setStepToStop,this);\n        this.showResult = 1;\n        this.currentSpeed = this.currentSpeed/3;\n    },\n    runStopAnimation(indexNearWin, time) {\n        const timer = time ? time : this.curentConfig.TIME;\n        this.onReelStop();\n        const action3 = cc.sequence(\n            cc.moveBy(timer, 0, -indexNearWin),\n            cc.moveBy(timer, 0, indexNearWin),\n            cc.callFunc(() => {\n                this.reset();\n                this.callbackStopReel();\n                /// stop schedule when reel is stopped\n                cc.director.getScheduler().unschedule(this.setStepToStop,this);\n                this.currentSpeed = this.curentConfig.TIME;  \n            })\n        );\n        this.reel.runAction(action3);\n    },\n    onReelStop() {\n        this.reel.children.forEach((child) => {\n            child.changeToSymbol(child.symbol);\n        });\n    },\n\n    runSpinningAnimation(callback) {\n        let time = this.currentSpeed + this.currentSpeed*this.stop/4;\n        const action0 = cc.sequence(\n            cc.moveBy(time, 0, -1*this.config.SYMBOL_HEIGHT),\n            cc.callFunc(this.circularSymbols,this),\n            cc.callFunc(callback)\n        );\n        this.reel.runAction(action0);\n    },\n    circularSymbols() {\n        const lastSymbol = this.reel.children[this.index%(this.totalNumber)];\n        if (!this.showResult) {\n            lastSymbol.changeToBlurSymbol(this.getRandomSymbolName());\n        } else if (this.stop < this.totalNumber) {\n            let isRealSymbol = this.stop >= this.config.TABLE_SYMBOL_BUFFER.TOP && this.stop < this.showNumber + this.config.TABLE_SYMBOL_BUFFER.TOP;\n            let symbolValue = this.matrix[this.stop];\n            this.step = this.totalNumber + this.showNumber - (this.stop + this.config.TABLE_SYMBOL_BUFFER.BOT);\n            if (isRealSymbol) {\n                lastSymbol.changeToSymbol(symbolValue);\n                this.usingMotionBlur && lastSymbol.stopBlur();\n                this.showSymbols.unshift(lastSymbol);\n            } else {\n                lastSymbol.changeToBlurSymbol(symbolValue);\n            }\n            this.stop++;\n        }\n        lastSymbol.y = lastSymbol.y + this.config.SYMBOL_HEIGHT*(this.totalNumber);\n        this.index++;\n    },\n\n    getShowSymbol(index)\n    {\n        return this.showSymbols[index];\n    },\n\n    getRandomSymbolNameWithException(exceptionSymbol) {\n        let symbol = this.symbolList[Math.floor(Math.random()*this.symbolList.length)];\n        if(symbol == exceptionSymbol){\n            symbol = this.getRandomSymbolNameWithException(exceptionSymbol);\n        }\n\n        return symbol;\n    },\n\n    updateSymbols(listSymbol){\n        this.showSymbols.forEach( (it,index) =>{\n            const nameSymbol = listSymbol[index];\n            it.changeToSymbol(nameSymbol);\n            const hasAnim = this.node.config.SYMBOL_HAVE_ANIM.indexOf(nameSymbol) >= 0;\n            if (hasAnim) {\n                let slotSymbolPaylineIntro = cc.instantiate(this.animSymbol);\n                it.addAnimIntro(slotSymbolPaylineIntro);\n                slotSymbolPaylineIntro.init(nameSymbol);\n                slotSymbolPaylineIntro.emit(\"PLAY_ANIMATION\", true);\n            }\n        });\n    },\n\n    hideAnimIntro(){\n        this.showSymbols.forEach(it =>{\n            it.hideAnimIntro();\n        });\n    },\n\n    updateIntroScatterToReal(){\n        this.showSymbols.forEach(it =>{\n            it.updateIntroScatterToReal();\n        });\n    },\n});"]}