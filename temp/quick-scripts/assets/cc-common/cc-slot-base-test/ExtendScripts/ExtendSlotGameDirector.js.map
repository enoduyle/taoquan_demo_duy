{"version":3,"sources":["ExtendSlotGameDirector.js"],"names":["cc","Class","extends","require","extendInit","listScriptAsync","guiMgr","node","mainDirector","switchToTrial","resetAsyncScript","_super","fastToResultClick","skipAllEffects","canStoreAsyncScript","isFinished","gSlotDataStore","playSession","isAutoSpin","isValid","storeAsyncScript","script","data","push","executeNextScript","length","isResetAsyncScript","command","shift","callback","isSkippable","name","log","_runAsyncScript","runAsyncScript","_showResult","hasPayline","_blinkAllPaylines","table","emit","bind","_showNormalPayline","onIngameEvent","_updateWinningAmount","winAmount","time","value","_showCutscene","content","showCutscene"],"mappings":"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","file":"ExtendSlotGameDirector.js","sourceRoot":"../../../../../../assets/cc-common/cc-slot-base-test/ExtendScripts","sourcesContent":["cc.Class({\n    extends: require('SlotGameDirector'),\n\n    extendInit() {\n        this.listScriptAsync = [];\n        this.guiMgr = this.node.mainDirector.guiMgr;\n    },\n\n    switchToTrial() {\n        this.resetAsyncScript();\n        this._super();\n    },\n\n    fastToResultClick() {\n        this._super();\n        this.resetAsyncScript();\n    },\n\n    skipAllEffects() {\n        this.resetAsyncScript();\n        this._super();\n    },\n\n    canStoreAsyncScript() {\n        const { isFinished } = this.node.gSlotDataStore.playSession;\n        const { isAutoSpin } = this.node.gSlotDataStore;\n        const isValid = isFinished === true && !isAutoSpin;\n        return isValid;\n    },\n\n    storeAsyncScript(script, data) {\n        this.listScriptAsync.push(data);\n        this.executeNextScript(script);\n    },\n\n    resetAsyncScript() {\n        if (!this.listScriptAsync || !this.listScriptAsync.length) return;\n        this.isResetAsyncScript = true;\n        while (this.listScriptAsync.length > 0) {\n            const command = this.listScriptAsync.shift();\n            if (command) {\n                const { callback, isSkippable, name } = command;\n                if (!isSkippable) {\n                    if (name) cc.log(this.name + ' run resetAsyncScript: ', name);\n                    callback && callback(true);\n                }\n            }\n        }\n        this.isResetAsyncScript = false;\n    },\n\n    _runAsyncScript(script) {\n        this.executeNextScript(script);\n        this.runAsyncScript();\n    },\n\n    runAsyncScript() {\n        if (this.isResetAsyncScript) return;\n        const command = this.listScriptAsync.shift();\n        if (command) {\n            const { callback, name } = command;\n            if (name) cc.log(this.name + ' run AsyncScript: ', name);\n            callback && callback();\n        }\n    },\n\n    _showResult(script) {\n        this.hasPayline = true;\n        this._super(script);\n    },\n\n    _blinkAllPaylines(script) {\n        if (this.canStoreAsyncScript()) {\n            const callback = () => {\n                this.table.emit(\"BLINK_ALL_NORMAL_PAYLINES\", this.runAsyncScript.bind(this));\n            };\n            this.storeAsyncScript(script, { callback, name: \"_blinkAllPaylines\", isSkippable: true });\n        } else {\n            this.table.emit(\"BLINK_ALL_NORMAL_PAYLINES\", this.executeNextScript.bind(this, script));\n        }\n    },\n\n    _showNormalPayline(script) {\n        if (this.canStoreAsyncScript()) {\n            const callback = () => {\n                this.node.mainDirector.onIngameEvent(\"SHOW_NORMAL_PAYLINE\");\n                this.table.emit(\"SHOW_ALL_NORMAL_PAYLINES\");\n                this.runAsyncScript();\n                this.node.mainDirector.onIngameEvent(\"ON_SHOW_NORMAL_PAYLINE\");\n            };\n            this.storeAsyncScript(script, { callback, name: \"_showNormalPayline\", isSkippable: true });\n        } else {\n            this.table.emit(\"SHOW_ALL_NORMAL_PAYLINES\");\n            this.executeNextScript(script);\n        }\n    },\n\n    _updateWinningAmount(script, { winAmount, time }) {\n        if (this.canStoreAsyncScript()) {\n            const callback = () => {\n                this.winAmount.emit(\"UPDATE_WIN_AMOUNT\", { value: winAmount, time });\n                this.runAsyncScript();\n            };\n            this.storeAsyncScript(script, { callback, name: \"_updateWinningAmount\", isSkippable: false });\n        } else {\n            this.winAmount.emit(\"UPDATE_WIN_AMOUNT\", { value: winAmount, time });\n            this.executeNextScript(script);\n        }\n    },\n\n    _showCutscene(script, { name, content }) {\n        if (this.canStoreAsyncScript() && name !== 'DialogMessage') {\n            const callback = () => {\n                if (this.node.mainDirector) {\n                    this.node.mainDirector.showCutscene(name, content, () => {\n                        this.runAsyncScript();\n                    });\n                }\n            };\n            this.storeAsyncScript(script, { callback, name: \"_showCutscene\", isSkippable: true });\n        } else {\n            this._super(script, { name, content });\n        }\n    },\n});\n"]}