{"version":3,"sources":["BaseHistory.js"],"names":["serviceRest","require","cc","Class","extends","Component","properties","table","Node","pageIndexView","itemPerPage","loading","backBtn","nextBtn","errorMessage","hasExtraBet","onLoad","initBase","isError","currentPage","totalPage","pageDefault","stopLoading","node","on","closeNotice","soundPlayer","playSoundClick","playSFXClick","bind","getComponent","initCells","serverMessage","instantiate","setParent","parent","active","EventType","TOUCH_START","onNextPage","TOUCH_END","cancelChangePage","TOUCH_CANCEL","MOUSE_LEAVE","onPrevPage","Button","interactable","openPanel","opacity","updatePageIndexView","playLoading","requestDataPage","onRequestResponse","requestErr","setDynamicBet","mBet","listDataBet","split","listBetId","map","item","betIds","join","anim","Animation","wrapMode","WrapMode","Loop","play","stop","onNextButton","onPreviousButton","page","quantity","callback","callbackErr","from","gSlotDataStore","slotBetDataStore","data","extraSteps","listBetIds","Object","keys","forEach","key","index","requestParams","serviceId","jpPrefix","gameId","size","type","jpList","requestHistory","headers","warn","currencyCode","getCurrencyCode","c","getWithHeader","url","params","get","emit","res","total","Math","ceil","error","length","content","Label","string"],"mappings":"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","file":"BaseHistory.js","sourceRoot":"../../../../../../../assets/cc-common/cc-share-v1/History/Scripts","sourcesContent":["const serviceRest = require('serviceRest');\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        table: cc.Node,\n        pageIndexView: cc.Node,\n        itemPerPage: 7,\n        loading: cc.Node,\n        backBtn: cc.Node,\n        nextBtn: cc.Node,\n        errorMessage: cc.Node,\n        hasExtraBet: false,\n    },\n\n    onLoad()\n    {\n        this.initBase();\n        this.isError= false;\n    },\n\n    initBase()\n    {\n        this.currentPage = 1;\n        this.totalPage = 1;\n        this.pageDefault = 1;\n        this.stopLoading();\n        this.node.on(\"CLOSE_NOTICE\", this.closeNotice, this);\n        if (this.node.soundPlayer)\n        {\n            this.playSoundClick = this.node.soundPlayer.playSFXClick.bind(this.node.soundPlayer);\n        }\n        this.table.getComponent('BaseTableHistory').initCells(this.itemPerPage);\n\n        this.serverMessage = cc.instantiate(this.errorMessage);\n        this.serverMessage.setParent(this.errorMessage.parent);\n        this.serverMessage.active = false;\n\n        this.nextBtn.on(cc.Node.EventType.TOUCH_START, this.onNextPage.bind(this));\n        this.nextBtn.on(cc.Node.EventType.TOUCH_END, this.cancelChangePage.bind(this));\n        this.nextBtn.on(cc.Node.EventType.TOUCH_CANCEL, this.cancelChangePage.bind(this));\n        this.nextBtn.on(cc.Node.EventType.MOUSE_LEAVE, this.cancelChangePage.bind(this));\n\n        this.backBtn.on(cc.Node.EventType.TOUCH_START, this.onPrevPage.bind(this));\n        this.backBtn.on(cc.Node.EventType.TOUCH_END, this.cancelChangePage.bind(this));\n        this.backBtn.on(cc.Node.EventType.TOUCH_CANCEL, this.cancelChangePage.bind(this));\n        this.backBtn.on(cc.Node.EventType.MOUSE_LEAVE, this.cancelChangePage.bind(this));\n    },\n\n    onNextPage() {\n        if (this.nextBtn.getComponent(cc.Button).interactable) {\n            this.backBtn.getComponent(cc.Button).interactable = false;\n        }\n    },\n\n    onPrevPage() {\n        if (this.backBtn.getComponent(cc.Button).interactable) {\n            this.nextBtn.getComponent(cc.Button).interactable = false;\n        }\n    },\n\n    cancelChangePage() {\n        if (this.currentPage !== 1) this.backBtn.getComponent(cc.Button).interactable = true;\n        if (this.currentPage < this.totalPage) this.nextBtn.getComponent(cc.Button).interactable = true;\n    },\n\n    openPanel(){\n        this.node.active = true;\n        this.node.opacity = 255;\n        if (this.table) this.table.opacity = 0;\n        this.currentPage = 1;\n        if (this.currentPage == 1) {\n            this.backBtn.getComponent(cc.Button).interactable = false;\n            this.nextBtn.getComponent(cc.Button).interactable = false;\n        }\n        this.updatePageIndexView(this.currentPage);\n        if (this.errorMessage) this.errorMessage.active = false;\n        this.playLoading();\n        this.requestDataPage(this.currentPage, this.itemPerPage, this.onRequestResponse.bind(this), this.requestErr.bind(this));\n    },\n    setDynamicBet(mBet = \"\") {\n        const listDataBet = mBet.split(',');\n        const listBetId = listDataBet.map(item => item.split(';')[0]);\n        this.betIds = listBetId.join('-');\n    },\n    playLoading(){\n        this.loading.active = true;\n        let anim = this.loading.getComponent(cc.Animation);\n        anim.wrapMode = cc.WrapMode.Loop;\n        anim.play('animLoading');\n    },\n    stopLoading(){\n        this.loading.active = false;\n        let anim = this.loading.getComponent(cc.Animation);\n        anim.stop('animLoading');\n    },\n    onNextButton()\n    {\n        if (this.playSoundClick) this.playSoundClick();\n        this.nextBtn.getComponent(cc.Button).interactable = false;\n        if (!this.isError) this.pageDefault = this.currentPage;\n        this.currentPage += 1;\n        if (this.isError) this.currentPage = this.pageDefault;\n        this.playLoading();\n        this.requestDataPage(this.currentPage, this.itemPerPage, this.onRequestResponse.bind(this), this.requestErr.bind(this));\n    },\n    onPreviousButton()\n    {\n        if (this.playSoundClick) this.playSoundClick();\n        if(this.currentPage == 1) return;\n        this.backBtn.getComponent(cc.Button).interactable = false;\n        if (!this.isError) this.pageDefault = this.currentPage;\n        this.currentPage -= 1;\n        if (this.isError) this.currentPage = this.pageDefault;\n        this.playLoading();\n        this.requestDataPage(this.currentPage, this.itemPerPage, this.onRequestResponse.bind(this), this.requestErr.bind(this));\n    },\n    requestDataPage(page, quantity, callback, callbackErr)\n    {\n        let from = (page - 1) * quantity;\n        let betIds = this.betIds;\n        if (this.betIds && this.hasExtraBet && this.node.gSlotDataStore && this.node.gSlotDataStore.slotBetDataStore && this.node.gSlotDataStore.slotBetDataStore.data.extraSteps) {\n            let listBetIds = this.betIds.split('-');\n            const extraSteps = this.node.gSlotDataStore.slotBetDataStore.data.extraSteps;\n            betIds = '';\n            Object.keys(extraSteps).forEach((key, index) => {\n                listBetIds = listBetIds.map(item => {\n                    return item[0] + '' + key;\n                });\n                if (index > 0) {\n                    betIds += '-';\n                }\n                betIds += listBetIds.join('-');\n            });\n        }\n\n        let requestParams = {\n            serviceId: this.jpPrefix + this.gameId,\n            from: from,\n            size: quantity,\n            type: this.jpList,\n            betIds: betIds\n        };\n        if (this.errorMessage) this.errorMessage.active = false;\n        this.requestHistory(requestParams, callback, callbackErr);\n    },\n    requestHistory(requestParams = {}, callback, callbackErr, headers = null)\n    {\n        if (!this.gameId)\n        {\n            cc.warn(\"GameId has not been set\");\n            callback({});\n            return;\n        }\n\n        const currencyCode = this.getCurrencyCode();\n        if (currencyCode) {\n            requestParams.c = currencyCode;\n        }\n        if (headers)\n        {\n            serviceRest.getWithHeader({\n                url: this.url,\n                params: requestParams,\n                callback,\n                callbackErr,\n                headers\n            });\n        }\n        else\n        {\n            serviceRest.get({\n                url: this.url,\n                params: requestParams,\n                callback,\n                callbackErr\n            });\n        }\n    },\n    requestErr()\n    {\n        this.totalPage = 1;\n        this.stopLoading();\n        if (this.errorMessage){\n            this.errorMessage.active = true;\n            this.isError= true;\n            this.nextBtn.getComponent(cc.Button).interactable = false;\n            this.backBtn.getComponent(cc.Button).interactable = false;\n            this.table.emit('CLEAR_DATA');\n        }\n    },\n    onRequestResponse(res)\n    {\n        if (res.total) {\n            this.totalPage = Math.ceil(res.total / this.itemPerPage);\n        }\n        this.stopLoading();\n        if (!res.error)\n        {\n            this.isError = false;\n            if (Object.keys(res).length > 0 && res.data && res.data.length > 0) {\n                this.nextBtn.getComponent(cc.Button).interactable = true;\n                this.backBtn.getComponent(cc.Button).interactable = true;\n                this.updatePageIndexView(this.currentPage);\n                if (this.table) this.table.opacity = 255;\n                this.table.emit('UPDATE_DATA',res.data);\n                if (this.currentPage == 1)\n                {\n                    this.backBtn.getComponent(cc.Button).interactable = false;\n                }\n                if(res.total <= this.currentPage * this.itemPerPage || res.data.length < this.itemPerPage) {\n                    this.nextBtn.getComponent(cc.Button).interactable = false;\n                    return;\n                }\n            } else {\n                // Clear old history items if use tool\n                this.nextBtn.getComponent(cc.Button).interactable = false;\n                this.backBtn.getComponent(cc.Button).interactable = false;\n                this.updatePageIndexView(1);\n                this.currentPage = 1;\n                this.totalPage = 0;\n                this.table.emit('UPDATE_DATA',res.data);\n            }\n        }\n    },\n\n    updatePageIndexView(content) {\n        this.pageIndexView.getComponent(cc.Label).string = content;\n    },\n\n    closeNotice(){\n        if (this.errorMessage) this.errorMessage.active = false;\n    },\n\n    getCurrencyCode() {\n        if (this.node.gSlotDataStore && this.node.gSlotDataStore.currencyCode) {\n            return this.node.gSlotDataStore.currencyCode;\n        }\n        return null;\n    }\n});\n"]}