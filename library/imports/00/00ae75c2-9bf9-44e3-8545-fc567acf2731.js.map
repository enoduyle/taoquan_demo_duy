{"version":3,"sources":["../../../../../../assets/cc-common/cc-slotbase-v2/component/assets/cc-common/cc-slotbase-v2/component/DialogMessage.js"],"names":["require","ButtonAsset","cc","Class","extends","properties","buttonAssets","default","type","show","_super","_customButtonsForDemo","strText","content","node","config","error","MESSAGE_DIALOG","FINISH_DEMO","SUGGEST_TURBO","_setSpriteButton","btnOK","btnCancel","opacity","scheduleOnce","button","btnName","btnAsset","find","name","normalSprite","pressedSprite","hoverSprite","disabledSprite"],"mappings":";;;;;;AAAA;;;;eAIwBA,QAAQ,gBAAR;IAAhBC,uBAAAA;;AACRC,GAAGC,KAAH,CAAS;AACLC,aAASJ,QAAQ,qBAAR,CADJ;;AAGLK,gBAAY;AACRC,sBAAc;AACVC,qBAAS,EADC;AAEVC,kBAAMP;AAFI;AADN,KAHP;AASLQ,QATK,kBASE;AACH,aAAKC,MAAL;AACA,aAAKC,qBAAL;AACH,KAZI;AAaLA,yBAbK,mCAamB;AAAA;;AAAA,YACZC,OADY,GACA,KAAKC,OADL,CACZD,OADY;;AAEpB,YAAI,CAAC,KAAKE,IAAL,CAAUC,MAAf,EAAuB;AACnBb,eAAGc,KAAH,CAAS,aAAT;AACA;AACH;AALmB,oCAMmB,KAAKF,IAAL,CAAUC,MAAV,CAAiBE,cANpC;AAAA,YAMZC,WANY,yBAMZA,WANY;AAAA,YAMCC,aAND,yBAMCA,aAND;;AAOpB,YAAIP,YAAYM,WAAhB,EAA6B;AACzB,iBAAKE,gBAAL,CAAsB,KAAKC,KAA3B,EAAkC,WAAlC;AACA,iBAAKD,gBAAL,CAAsB,KAAKE,SAA3B,EAAsC,OAAtC;AACH,SAHD,MAGO,IAAIV,YAAYO,aAAhB,EAA+B;AAClC,iBAAKC,gBAAL,CAAsB,KAAKC,KAA3B,EAAkC,YAAlC;AACA,iBAAKD,gBAAL,CAAsB,KAAKE,SAA3B,EAAsC,QAAtC;AACH,SAHM,MAGA;AACH,iBAAKF,gBAAL,CAAsB,KAAKC,KAA3B,EAAkC,UAAlC;AACA,iBAAKD,gBAAL,CAAsB,KAAKE,SAA3B,EAAsC,KAAtC;AACH;AACD,aAAKR,IAAL,CAAUS,OAAV,GAAoB,CAApB;AACA,aAAKC,YAAL,CAAkB,YAAM;AAAE,kBAAKV,IAAL,CAAUS,OAAV,GAAoB,GAApB;AAA0B,SAApD,EAAsD,CAAtD;AACH,KAhCI;AAiCLH,oBAjCK,4BAiCYK,MAjCZ,EAiCoBC,OAjCpB,EAiC6B;AAC9B,YAAMC,WAAW,KAAKrB,YAAL,CAAkBsB,IAAlB,CAAuB;AAAA,mBAAYD,SAASE,IAAT,KAAkBH,OAA9B;AAAA,SAAvB,CAAjB;AACA,YAAIC,QAAJ,EAAc;AACVF,mBAAOK,YAAP,GAAsBH,SAASG,YAA/B;AACAL,mBAAOM,aAAP,GAAuBJ,SAASI,aAAhC;AACAN,mBAAOO,WAAP,GAAqBL,SAASK,WAA9B;AACAP,mBAAOQ,cAAP,GAAwBN,SAASM,cAAjC;AACH,SALD,MAKO;AACH/B,eAAGc,KAAH,CAAS,kCAAT,EAA6CU,OAA7C;AACH;AACJ;AA3CI,CAAT","file":"DialogMessage.js","sourceRoot":"../../../../../../assets/cc-common/cc-slotbase-v2/component","sourcesContent":["/**\n * @custom for Message Dialog\n * @for changing button spriteFrames\n */\nconst { ButtonAsset } = require(\"CustomDataType\");\ncc.Class({\n    extends: require('ActorDialogSlotbase'),\n\n    properties: {\n        buttonAssets: {\n            default: [],\n            type: ButtonAsset\n        },\n    },\n    show() {\n        this._super();\n        this._customButtonsForDemo();\n    },\n    _customButtonsForDemo() {\n        const { strText } = this.content;\n        if (!this.node.config) {\n            cc.error(\"Need Config\");\n            return;\n        }\n        const { FINISH_DEMO, SUGGEST_TURBO } = this.node.config.MESSAGE_DIALOG;\n        if (strText === FINISH_DEMO) {\n            this._setSpriteButton(this.btnOK, \"CHOI_THAT\");\n            this._setSpriteButton(this.btnCancel, \"KHONG\");\n        } else if (strText === SUGGEST_TURBO) {\n            this._setSpriteButton(this.btnOK, \"QUAY_NHANH\");\n            this._setSpriteButton(this.btnCancel, \"DE_SAU\");\n        } else {\n            this._setSpriteButton(this.btnOK, \"XAC_NHAN\");\n            this._setSpriteButton(this.btnCancel, \"HUY\");\n        }\n        this.node.opacity = 0;\n        this.scheduleOnce(() => { this.node.opacity = 255; }, 0);\n    },\n    _setSpriteButton(button, btnName) {\n        const btnAsset = this.buttonAssets.find(btnAsset => btnAsset.name === btnName);\n        if (btnAsset) {\n            button.normalSprite = btnAsset.normalSprite;\n            button.pressedSprite = btnAsset.pressedSprite;\n            button.hoverSprite = btnAsset.hoverSprite;\n            button.disabledSprite = btnAsset.disabledSprite;\n        } else {\n            cc.error(\"Can not find button assets for: \", btnName);\n        }\n    }\n\n});"]}