{"version":3,"sources":["../../../../../../../assets/cc-common/cc-slotbase-v2/g9000/template-minigame/assets/cc-common/cc-slotbase-v2/g9000/template-minigame/MiniBaseDirector.js"],"names":["cc","Class","extends","require","properties","table","Node","winAmount","coundownText","Label","max_open_items","timerCount","defaultValue","onExtendedLoad","node","on","stateUpdate","onEnterGame","init","onClickItem","runContinueScript","forceResetGameMode","_resetStoreScript","listIdOpenItem","callback","isWaitingResult","callbackStateUpdate","runAction","writer","emit","mainDirector","gui","getWinAmount","data","resetMiniGame","i","length","push","onIngameEvent","_miniGameStart","script","_runAutoTrigger","executeNextScript","_miniGameRestart","e","stopPropagation","_stopAutoTrigger","item","target","currentPick","itemId","itemController","playAnimClick","disableClick","isAutoTrigger","getUserData","_sendRequestPlayMiniGame","openCell","gameStateManager","triggerMiniGame","_showResult","_openPickedItem","time","_openAllItems","matrix","_stopRepeatCountDown","_gameExit","exit","_showCutscene","name","content","showCutscene","error","_updateLastWin","updateWinAmountText","isWin","_updateWinningAmount","value","_clearWinAmount","_count","opacity","delay","autoTriggerMinigame","sequence","delayTime","callFunc","_updateCownDownText","stopAction","storeNextScripts","storeCurrentScripts","repeatCountDown","repeatForever","string","forceStopSpinning","stopAutoSpinClick","gameMode","isSkipAllScrips","forceResetBonusGame","resetCallbackWhenHide","scheduleOnce","onDestroy"],"mappings":"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","file":"MiniBaseDirector.js","sourceRoot":"../../../../../../../assets/cc-common/cc-slotbase-v2/g9000/template-minigame","sourcesContent":["\n\ncc.Class({\n    extends: require(\"BaseDirectorV2\"),\n\n    properties: {\n        table: cc.Node,\n        winAmount: cc.Node,\n        coundownText: cc.Label,\n        max_open_items: 3,\n        timerCount: 20,\n        defaultValue: -1\n    },\n    onExtendedLoad() {\n        this.node.on(\"GAME_UPDATE\", this.stateUpdate, this);\n        this.node.on(\"GAME_ENTER\", this.onEnterGame, this);\n        this.node.on(\"GAME_INIT\", this.init, this);\n        this.node.on('CLICK_ITEM', this.onClickItem, this);\n        this.node.on(\"RUN_CONTINUE_SCRIPT\",this.runContinueScript,this);\n        this.node.on(\"FORCE_RESET_GAME_MODE\", this.forceResetGameMode, this);\n        this._resetStoreScript();\n        this.node.listIdOpenItem = [];\n    },\n    /**\n     * @receive_data*/\n    stateUpdate(callback) {\n        this.isWaitingResult = false;\n        this.callbackStateUpdate = callback;\n        this.runAction('ResultReceive');\n    },\n    init() {\n        this.isWaitingResult = false;\n        this.writer = this.node.writer;\n        this.table.emit(\"INIT_TABLE\");\n        if (!this.winAmount)\n            this.winAmount = this.node.mainDirector.gui.getWinAmount();\n    },\n    onEnterGame(data) {\n        this.resetMiniGame();\n        if (data) {\n            this.table.emit(\"RESUME_MINI_GAME\", data, this.defaultValue);\n            for (let i = 0; i < data.length; i++) {\n                if (data[i] !== this.defaultValue) {\n                    this.node.listIdOpenItem.push(i + 1);\n                }\n            }\n        }\n        this.runAction(\"MiniGameStart\");\n        this.node.mainDirector.onIngameEvent(\"ENTER_GAME_MODE\");\n    },\n    _miniGameStart(script) {\n        this._runAutoTrigger(this.timerCount);\n        this.executeNextScript(script);\n    },\n    _miniGameRestart(script) {\n        this.executeNextScript(script);\n    },\n    onClickItem(e) {\n        if (this.isWaitingResult) return;\n        e.stopPropagation();\n        this._stopAutoTrigger();\n        if (this.node.listIdOpenItem.length < this.max_open_items) {\n            let item = e.target;\n            this.node.currentPick = item.itemId;\n            this.node.listIdOpenItem.push(item.itemId);\n            this.runAction(\"MiniGameClick\");\n            item.itemController.playAnimClick();\n            item.itemController.disableClick();\n            this.isAutoTrigger = e.getUserData().isAutoTrigger;\n        }\n    },\n\n    _sendRequestPlayMiniGame(script, {openCell}) {\n        this.isWaitingResult = true;\n        this.node.mainDirector.gameStateManager.triggerMiniGame(openCell);\n        this.executeNextScript(script);\n    },\n    _showResult(script) {\n        this.isWaitingResult = false;\n        this.runAction(\"ShowResult\");\n        this.executeNextScript(script);\n    },\n    _openPickedItem(script, data) {\n        this.table.emit(\"OPEN_PICKED_ITEM\", data, () => {\n            this.executeNextScript(script);\n        });\n        if (this.node.listIdOpenItem.length < this.max_open_items) {\n            const time = this.isAutoTrigger ? 0.5 : this.timerCount;\n            this._runAutoTrigger(time);\n        }\n    },\n    _openAllItems(script, matrix) {\n        this._stopAutoTrigger();\n        this.table.emit(\"OPEN_ALL_ITEMS\", matrix, () => {\n            this.executeNextScript(script);\n        });\n        this._stopRepeatCountDown();\n    },\n\n    _gameExit(script) {\n        this.resetMiniGame();\n        this.node.exit(() => {\n            this.executeNextScript(script);\n        });\n    },\n\n    _showCutscene(script, {name, content}) {\n        if (this.node.mainDirector) {\n            this.node.mainDirector.showCutscene(name, content, () => {\n                this.executeNextScript(script);\n            });\n        } else {\n            cc.error('There is no main Director to play cutscenes');\n            this.executeNextScript(script);\n        }\n    },\n\n    /** @WinAmount*/\n    _updateLastWin(script, data) {\n        if (data) {\n            this.winAmount.emit(\"CHANGE_TO_LAST_WIN\");\n            this.node.mainDirector.updateWinAmountText({isWin: false});\n        } else {\n            this.winAmount.emit(\"CHANGE_TO_WIN\");\n            this.node.mainDirector.updateWinAmountText({isWin: true});\n        }\n        this.executeNextScript(script);\n    },\n    _updateWinningAmount(script, {winAmount, time}) {\n        this.winAmount.emit(\"UPDATE_WIN_AMOUNT\",{value: winAmount, time});\n        this.executeNextScript(script);\n    },\n    _clearWinAmount(script) {\n        this.winAmount.emit(\"RESET_NUMBER\");\n        this.executeNextScript(script);\n    },\n\n    resetMiniGame() {\n        this._stopAutoTrigger();\n        this._stopRepeatCountDown();\n        this.node.listIdOpenItem = [];\n        this.node.currentPick = 0;\n        this.table.emit(\"RESET_MINI_TABLE\");\n        this._count = this.timerCount;\n        if (this.coundownText) {\n            this.coundownText.node.opacity = 0;\n        }\n    },\n\n    _runAutoTrigger(delay) {\n        this._stopAutoTrigger();\n        this.autoTriggerMinigame = cc.sequence(\n            cc.delayTime(delay),\n            cc.callFunc(() => {\n                this.table.emit(\"AUTO_OPEN_BOX\");\n            })\n        );\n        if (this.node) this.node.runAction(this.autoTriggerMinigame);\n        this._updateCownDownText(delay);\n    },\n\n    _stopAutoTrigger() {\n        if (this.autoTriggerMinigame && this.autoTriggerMinigame.target) {\n            this.node.stopAction(this.autoTriggerMinigame);\n        }\n    },\n\n    runContinueScript() {\n        const {data, script} = this.storeNextScripts;\n        this[this.storeCurrentScripts] && this[this.storeCurrentScripts](script, data);\n        this._resetStoreScript();\n    },\n\n    _resetStoreScript() {\n        this.storeCurrentScripts = '';\n        this.storeNextScripts = {\n            script: [],\n            data: {}\n        };\n    },\n\n    _updateCownDownText(delay) {\n        if (!this.coundownText) return;\n        this._stopRepeatCountDown();\n        if (delay === this.timerCount) {\n            this.repeatCountDown = cc.repeatForever(\n                cc.sequence(\n                    cc.callFunc(() => {\n                        this.coundownText.node.opacity = 255;\n                        this.coundownText.string = `Hệ thống sẽ tự chọn sau: ${this._count}s`;\n                    }),\n                    cc.delayTime(1),\n                    cc.callFunc(() => {\n                        this._count--;\n                        if (this._count <= 0) {\n                            this.node.stopAction(this.repeatCountDown);\n                        }\n                    })\n                ));\n            this.node.runAction(this.repeatCountDown);\n        } else {\n            this.coundownText.node.opacity = 0;\n        }\n    },\n\n    _stopRepeatCountDown() {\n        if (this.repeatCountDown && this.repeatCountDown.target) {\n            this.node.stopAction(this.repeatCountDown);\n            this._count = this.timerCount;\n            this.coundownText.node.opacity = 0;\n        }\n    },\n\n    forceStopSpinning() {\n\n    },\n\n    stopAutoSpinClick() {\n\n    },\n\n    forceResetGameMode(gameMode) {\n        this.isSkipAllScrips = true;\n        if (gameMode === 'bonusGame') {\n            this.forceResetBonusGame();\n        }\n    },\n\n    forceResetBonusGame() {\n        this.node.resetCallbackWhenHide();\n        this.scheduleOnce(() => {\n            this.isSkipAllScrips = false;\n            this.node.exit(() => {});\n        }, 1);\n    },\n\n    onDestroy() {\n        if (this.repeatCountDown) this.node.stopAction(this.repeatCountDown);\n    },\n});\n"]}