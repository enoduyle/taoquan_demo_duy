{"version":3,"sources":["../../../../../../../assets/cc-common/cc-slotbase-v2/slotGame/table/assets/cc-common/cc-slotbase-v2/slotGame/table/SlotSymbolPaylineIntro.js"],"names":["cc","Class","extends","require","onLoad","_super","animation","spineNode","getComponent","sp","Skeleton","init","symbolName","asset","assets","skeData","findSymbolSpineData","havingAnim","undefined","staticSymbol","active","Sprite","spriteFrame","skeletonData","spine","playAnimation","isLoop","isPlaying","setAnimation"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASC,QAAQ,qBAAR,CADJ;;AAGLC,UAHK,oBAGK;AACN,aAAKC,MAAL;AACA,aAAKC,SAAL,GAAiB,KAAKC,SAAL,CAAeC,YAAf,CAA4BC,GAAGC,QAA/B,CAAjB;AACH,KANI;AAQLC,QARK,gBAQAC,UARA,EAQY;AACb,YAAMC,QAAQ,KAAKC,MAAL,CAAYF,UAAZ,CAAd;AACA,aAAKA,UAAL,GAAkBA,UAAlB;AACA,YAAIG,UAAU,KAAKC,mBAAL,CAAyBJ,UAAzB,CAAd;AACA,aAAKK,UAAL,GAAkBF,WAAWG,SAA7B;AACA,YAAIL,KAAJ,EAAW;AACP,iBAAKM,YAAL,CAAkBC,MAAlB,GAA2B,IAA3B;AACA,iBAAKD,YAAL,CAAkBX,YAAlB,CAA+BR,GAAGqB,MAAlC,EAA0CC,WAA1C,GAAwDT,KAAxD;AACH,SAHD,MAGO;AACH,iBAAKM,YAAL,CAAkBC,MAAlB,GAA2B,KAA3B;AACH;AACD,YAAIL,OAAJ,EAAa;AACT,iBAAKR,SAAL,CAAea,MAAf,GAAwB,IAAxB;AACA,iBAAKb,SAAL,CAAeC,YAAf,CAA4BC,GAAGC,QAA/B,EAAyCa,YAAzC,GAAwDR,QAAQS,KAAhE;AACA,iBAAKlB,SAAL,GAAiB,KAAKC,SAAL,CAAeC,YAAf,CAA4BC,GAAGC,QAA/B,CAAjB;AACH,SAJD,MAIO;AACH,iBAAKH,SAAL,CAAea,MAAf,GAAwB,KAAxB;AACH;AACJ,KA1BI;AA4BLK,iBA5BK,2BA4BwB;AAAA,YAAdC,MAAc,uEAAL,IAAK;;AACzB,YAAI,KAAKT,UAAT,EAAqB;AACjB,iBAAKU,SAAL,GAAiB,IAAjB;AACA,iBAAKpB,SAAL,CAAea,MAAf,GAAwB,IAAxB;AACA,iBAAKd,SAAL,CAAesB,YAAf,CAA4B,CAA5B,EAA+B,WAA/B,EAA4CF,MAA5C;AACH;AACJ;AAlCI,CAAT","file":"SlotSymbolPaylineIntro.js","sourceRoot":"../../../../../../../assets/cc-common/cc-slotbase-v2/slotGame/table","sourcesContent":["cc.Class({\n    extends: require(\"SlotSymbolPaylinev2\"),\n\n    onLoad () {\n        this._super();\n        this.animation = this.spineNode.getComponent(sp.Skeleton);\n    },\n\n    init(symbolName) {\n        const asset = this.assets[symbolName];\n        this.symbolName = symbolName;\n        let skeData = this.findSymbolSpineData(symbolName);\n        this.havingAnim = skeData != undefined;\n        if (asset) {\n            this.staticSymbol.active = true;\n            this.staticSymbol.getComponent(cc.Sprite).spriteFrame = asset;\n        } else {\n            this.staticSymbol.active = false;\n        }\n        if (skeData) {\n            this.spineNode.active = true;\n            this.spineNode.getComponent(sp.Skeleton).skeletonData = skeData.spine;\n            this.animation = this.spineNode.getComponent(sp.Skeleton);\n        } else {\n            this.spineNode.active = false;\n        }\n    },\n\n    playAnimation( isLoop = true){\n        if (this.havingAnim) {\n            this.isPlaying = true;\n            this.spineNode.active = true;\n            this.animation.setAnimation(0, \"animation\", isLoop);\n        } \n    },\n\n});\n"]}