{"version":3,"sources":["../../../../../../../assets/cc-common/cc-slot-base-test/SpinWheel/Scripts/assets/cc-common/cc-slot-base-test/SpinWheel/Scripts/SpinWheel.js"],"names":["cc","Class","extends","Component","properties","wheel","Node","configFile","type","Asset","default","onLoad","_config","json","node","on","init","startSpin","setResult","stopSpin","window","lateUpdate","dt","isSpinning","angle","rotateSpeed","config","Object","assign","tweenSpeed","tweenStop","result","stepAngle","totalItem","speedUpTime","maxSpeed","stop","tween","to","call","start","endAngle","_getItemAngle","index","slowDownTime","endSpeed","bufferStop","bufferAngle","slowDownAngle","delayAngle","delayTime","delay","_tweenToResult","offset","resetSpinWheel","getConfig","create"],"mappings":"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","file":"SpinWheel.js","sourceRoot":"../../../../../../../assets/cc-common/cc-slot-base-test/SpinWheel/Scripts","sourcesContent":["cc.Class({\n\n    extends: cc.Component,\n\n    properties: {\n        wheel: cc.Node,\n        configFile: {\n            type: cc.Asset,\n            default: null,\n        }\n    },\n    onLoad() {\n        this._config = this.configFile.json;\n        this.node.on(\"INIT\", this.init, this);\n        this.node.on(\"START_SPIN\", this.startSpin, this);\n        this.node.on(\"SET_RESULT\", this.setResult, this);\n        this.node.on(\"STOP_SPIN\", this.stopSpin, this);\n        this.init(this._config);\n        window.wheel = this;\n    },\n    lateUpdate(dt) {\n        if (!this.isSpinning) return;\n        this.wheel.angle += dt * this.rotateSpeed;\n        this.wheel.angle %= 360;\n    },\n\n    init(config) {\n        Object.assign(this._config, config);\n        this.tweenSpeed = null;\n        this.tweenStop = null;\n        this.result = null;\n        this.stepAngle = 360 / this._config.totalItem;\n        this.rotateSpeed = 0;\n    },\n    startSpin() {\n        if (this.isSpinning) return;\n        this.isSpinning = true;\n        const { speedUpTime, maxSpeed } = this._config;\n        this.tweenSpeed && this.tweenSpeed.stop();\n        this.tweenSpeed = cc.tween(this)\n            .to(speedUpTime, { rotateSpeed: maxSpeed })\n            .call(() => {\n                this.tweenSpeed = null;\n            })\n            .start();\n    },\n    setResult(result) {\n        this.result = result;\n        this.endAngle = 360 - this._getItemAngle(this.result);\n    },\n    _getItemAngle(index) {\n        return this.stepAngle * index;\n    },\n    stopSpin() {\n        const { slowDownTime, endSpeed , maxSpeed, bufferStop} = this._config;\n        const bufferAngle = bufferStop * this.stepAngle;\n        let slowDownAngle = (maxSpeed + endSpeed) * slowDownTime / 2;\n        let delayAngle = 360 + (this.endAngle - bufferAngle - slowDownAngle) % 360;\n        let delayTime = ((360 + delayAngle - this.wheel.angle) % 360) / maxSpeed;\n\n        this.tweenStop = cc.tween(this)\n            .delay(delayTime)\n            .to(slowDownTime, { rotateSpeed: endSpeed })\n            .call(() => {\n                this.isSpinning = false;\n                this._tweenToResult();\n            })\n            .start();\n    },\n    _tweenToResult() {\n        const { endSpeed } = this._config;\n        const offset = (360 + this.endAngle - this.wheel.angle) % 360;\n        this.tweenStop = cc.tween(this.wheel)\n            .to(offset / endSpeed, { angle: this.endAngle })\n            .call(() => {\n                this.tweenStop = null;\n            })\n            .start()\n    },\n    resetSpinWheel() {\n        this.tweenSpeed && this.tweenSpeed.stop();\n        this.tweenSpeed = null;\n\n        this.tweenStop && this.tweenStop.stop();\n        this.tweenStop = null;\n\n        this.isSpinning = false;\n        this.rotateSpeed = 0;\n    },\n    getConfig() {\n        return Object.assign(Object.create(null), this._config);\n    }\n});\n"]}