{"version":3,"sources":["AutoScaleBackground.js"],"names":["cc","Class","extends","Component","onLoad","_thisOnResized","onScreenResized","bind","sys","isMobile","window","addEventListener","view","on","scaleCanvasByOrientation","widthBackground","heightBackground","heightDefaultCanvas","widthView","getFrameSize","width","heightView","height","scaleHeightDevice","scaleWidthDevice","realScaleDevice","convertWithBG","convertHeightBG","ratioW","ratioH","node","scale","onDestroy","removeEventListener","off"],"mappings":";;;;;;AACAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,UAHK,oBAGI;AACL,aAAKC,cAAL,GAAsB,KAAKC,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAtB;AACA,YAAIP,GAAGQ,GAAH,CAAOC,QAAX,EAAqB;AACjBC,mBAAOC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKN,cAAvC;AACH,SAFD,MAGK;AACDL,eAAGY,IAAH,CAAQC,EAAR,CAAW,eAAX,EAA4B,KAAKR,cAAjC;AACH;;AAED,aAAKS,wBAAL;AACH,KAbI;AAeLA,4BAfK,sCAesB;AACvB,YAAIC,kBAAkB,GAAtB;AACA,YAAIC,mBAAmB,GAAvB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAIC,sBAAsB,IAA1B;AACA,YAAIC,YAAYlB,GAAGY,IAAH,CAAQO,YAAR,GAAuBC,KAAvC;AACA,YAAIC,aAAarB,GAAGY,IAAH,CAAQO,YAAR,GAAuBG,MAAxC;;AAEA,YAAIC,oBAAoBF,aAAaJ,mBAArC;AACA,YAAIO,mBAAmBN,YAAWD,mBAAlC;;AAEA,YAAIQ,kBAAkBF,oBAAoBC,gBAApB,GAAuCA,gBAAvC,GAA0DD,iBAAhF;;AAEA,YAAIG,gBAAgBX,kBAAkBU,eAAtC;AACA,YAAIE,kBAAkBX,mBAAmBS,eAAzC;;AAEA,YAAIG,SAASV,YAAYQ,aAAzB;AACA,YAAIG,SAASR,aAAaM,eAA1B;;AAEA,YAAIC,SAASC,MAAb,EAAqB,KAAKC,IAAL,CAAUC,KAAV,GAAkBH,MAAlB,CAArB,KACK,KAAKE,IAAL,CAAUC,KAAV,GAAkBF,MAAlB;AACR,KA3CI;AA6CLG,aA7CK,uBA6CO;AACR,YAAIhC,GAAGQ,GAAH,CAAOC,QAAX,EAAqB;AACjBC,mBAAOuB,mBAAP,CAA2B,QAA3B,EAAqC,KAAK5B,cAA1C;AACH,SAFD,MAGK;AACDL,eAAGY,IAAH,CAAQsB,GAAR,CAAY,eAAZ,EAA6B,KAAK7B,cAAlC;AACH;AACJ,KApDI;AAsDLC,mBAtDK,6BAsDa;AACd,aAAKQ,wBAAL;AACH;AAxDI,CAAT","file":"AutoScaleBackground.js","sourceRoot":"../../../../../../../assets/cc-common/cc-share-v1/common/viewComponent","sourcesContent":["\ncc.Class({\n    extends: cc.Component,\n\n    onLoad() {\n        this._thisOnResized = this.onScreenResized.bind(this);\n        if (cc.sys.isMobile) {\n            window.addEventListener('resize', this._thisOnResized);\n        }\n        else {\n            cc.view.on('canvas-resize', this._thisOnResized);\n        }\n\n        this.scaleCanvasByOrientation();\n    },\n\n    scaleCanvasByOrientation() {\n        let widthBackground = 960;\n        let heightBackground = 640;\n\n        // let isPortrait = false;\n        // if (widthView > heightView) {\n        //     isPortrait = false; // landscape\n        // } else {\n        //     isPortrait = true;\n        // }\n\n        let heightDefaultCanvas = 1280;\n        let widthView = cc.view.getFrameSize().width;\n        let heightView = cc.view.getFrameSize().height;\n\n        let scaleHeightDevice = heightView / heightDefaultCanvas;\n        let scaleWidthDevice = widthView/ heightDefaultCanvas;\n\n        let realScaleDevice = scaleHeightDevice > scaleWidthDevice ? scaleWidthDevice : scaleHeightDevice;\n\n        let convertWithBG = widthBackground * realScaleDevice;\n        let convertHeightBG = heightBackground * realScaleDevice;\n        \n        let ratioW = widthView / convertWithBG;\n        let ratioH = heightView / convertHeightBG;\n\n        if (ratioW > ratioH) this.node.scale = ratioW;\n        else this.node.scale = ratioH;\n    },\n\n    onDestroy() {\n        if (cc.sys.isMobile) {\n            window.removeEventListener('resize', this._thisOnResized);\n        }\n        else {\n            cc.view.off('canvas-resize', this._thisOnResized);\n        }\n    },\n\n    onScreenResized() {\n        this.scaleCanvasByOrientation();\n    },\n});\n"]}