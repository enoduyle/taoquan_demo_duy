{"version":3,"sources":["../../../../../../../assets/cc-common/cc-slotbase-v2/slotGame/table/assets/cc-common/cc-slotbase-v2/slotGame/table/SlotTableNearWinEffectv2.js"],"names":["cc","Class","extends","Component","properties","startAtScatterCount","startAtBonusCount","startAtJackpotCount","stopAtScatterCount","stopAtBonusCount","reelParticle","Node","sfxNearWin","default","type","AudioClip","paylineHolderNode","paylineNormalSymbol","Prefab","bonusSymbol","scatterSymbol","jackpotSymbol","isSkipNearWinTurbo","onLoad","payLineMatrix","node","config","PAY_LINE_MATRIX","payLineMatrixForCompare","Object","keys","forEach","push","key","join","slice","start","on","reelStopNearWin","reelReset","adjustReelDelay","startPositionX","x","nearWinSoundKey","soundPlayer","stopSound","hideParticleList","clearSymbolPaylines","reels","data","countScatter","countBonus","countJackpot","foundNearWin","jackpotLine","nearWinList","betLines","gSlotDataStore","isSkipWhenTurbo","modeTurbo","col","length","isNearWinScatter","isNearWinBonus","isNearWinJackpot","isNearWin","jpIndex","row","symbolValue","createPaylineSymbol","jpInBetLine","i","extendTimeToStop","count","context","isFastToResult","runAnimationNearWin","playSound","pos","SYMBOL_WIDTH","activeParticleList","adjustReelSpeed","SUPER_TURBO","director","getScheduler","schedule","curentConfig","TIME","active","children","paylineSymbol","symbol","emit","opacity","removeAllChildren","symbolName","currentIndex","isShowing","enableHighlight","playAnimation","getXPosition","index","startX","TABLE_FORMAT","reel","instantiate","parent","y","showNumber","SYMBOL_HEIGHT","changeToSymbol","disableHighlight"],"mappings":"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","file":"SlotTableNearWinEffectv2.js","sourceRoot":"../../../../../../../assets/cc-common/cc-slotbase-v2/slotGame/table","sourcesContent":["\n\ncc.Class({\n    extends: cc.Component,\n    properties: {\n        startAtScatterCount: 2,\n        startAtBonusCount: 2,\n        startAtJackpotCount: 4,\n        stopAtScatterCount: 99,\n        stopAtBonusCount: 99,\n        reelParticle: cc.Node,\n        sfxNearWin: {\n            default: null,\n            type: cc.AudioClip,\n        },\n        paylineHolderNode: cc.Node,\n        paylineNormalSymbol: cc.Prefab,\n        bonusSymbol: 'R',\n        scatterSymbol: 'A',\n        jackpotSymbol: 'JP',\n        isSkipNearWinTurbo: false\n    },\n\n    onLoad() {\n        const payLineMatrix = this.node.config.PAY_LINE_MATRIX;\n        this.payLineMatrixForCompare = [];\n        if (payLineMatrix) {\n            Object.keys(payLineMatrix).forEach(key => {\n                this.payLineMatrixForCompare.push(payLineMatrix[key].join().slice(0, -2));\n            });\n        }\n    },\n    start () {\n        this.node.on(\"REEL_STOP_NEARWIN\",this.reelStopNearWin,this);\n        this.node.on(\"TABLE_START_NEARWIN\",this.reelReset,this);\n        this.node.on(\"REEL_ABOUT_TO_STOP_NEARWIN\",this.adjustReelDelay,this);\n        this.reelReset();\n        this.startPositionX = this.reelParticle.x;\n    },\n    reelReset() {\n        if (this.nearWinSoundKey) {\n            this.node.soundPlayer.stopSound(this.nearWinSoundKey);\n            this.nearWinSoundKey = null;\n        }\n        this.hideParticleList();\n        this.clearSymbolPaylines();\n    },\n    adjustReelDelay({reels, data}) {\n        let countScatter = 0;\n        let countBonus = 0;\n        let countJackpot = 0;\n        let foundNearWin = false;\n        let jackpotLine = '';\n        this.nearWinList = [];\n        let betLines = [];\n        if (this.node.gSlotDataStore) {\n            betLines = this.node.gSlotDataStore.betLines;\n        }\n\n        let isSkipWhenTurbo = this.isSkipNearWinTurbo && this.node.gSlotDataStore && this.node.gSlotDataStore.modeTurbo;\n        for (let col = 0; col < data.length; col++) {\n            const isNearWinScatter = (countScatter >= this.startAtScatterCount) && (countScatter < this.stopAtScatterCount) && !isSkipWhenTurbo;\n            const isNearWinBonus = (countBonus >= this.startAtBonusCount) && (countBonus < this.stopAtBonusCount) && !isSkipWhenTurbo;\n            let isNearWinJackpot = countJackpot >= this.startAtJackpotCount && !isSkipWhenTurbo;\n            let isNearWin = (isNearWinScatter || isNearWinBonus);\n            let jpIndex = -1;\n            for (let row = 0; row < data[col].length; ++row) {\n                const symbolValue = data[col][row];\n                if (symbolValue === this.bonusSymbol) {\n                    countBonus++;\n                    this.createPaylineSymbol(this.node.reels[col], symbolValue, col, row);\n                } else if (symbolValue === this.scatterSymbol) {\n                    countScatter++;\n                    this.createPaylineSymbol(this.node.reels[col], symbolValue, col, row);\n                } else if (symbolValue === this.jackpotSymbol) {\n                    countJackpot++;\n                    jpIndex = row;\n                    this.createPaylineSymbol(this.node.reels[col], symbolValue, col, row);\n                }\n            }\n\n            if (col !== data.length - 1) {\n                jackpotLine += (col > 0 ? ',' : '') + jpIndex;\n            }\n\n            if (!isSkipWhenTurbo && betLines && betLines.length) {\n                let jpInBetLine = false;\n                for (let i = 0; i < betLines.length; i++) {\n                    if (!jpInBetLine) {\n                        jpInBetLine = this.payLineMatrixForCompare[betLines[i] - 1] === jackpotLine;\n                    }\n                }\n                isNearWinJackpot = col === data.length - 1 && countJackpot >= 4 && jpInBetLine;\n            }\n\n            isNearWin = isNearWin || isNearWinJackpot;\n            foundNearWin = foundNearWin || isNearWin;\n\n            if (foundNearWin) {\n                this.nearWinList[col] = {isNearWinScatter, isNearWinBonus, isNearWinJackpot, isNearWin};\n                reels[col].extendTimeToStop(isNearWin);\n            }\n        }\n    },\n    reelStopNearWin({count, context}) {\n        this.hideParticleList();\n        if (!context.isFastToResult) {\n            this.runAnimationNearWin(this.scatterSymbol, count);\n            this.runAnimationNearWin(this.bonusSymbol, count);\n        }\n\n        if (this.nearWinList[count] && this.nearWinList[count].isNearWin && !context.isFastToResult) {\n\n            if (this.node.soundPlayer && !this.nearWinSoundKey) {\n                this.nearWinSoundKey = this.node.soundPlayer.playSound(this.sfxNearWin, true);\n            }\n\n            const pos = this.startPositionX + count * this.node.config.SYMBOL_WIDTH;\n            this.activeParticleList(pos);\n\n            for (let i = count; i < this.node.reels.length; i++) {\n                if (this.nearWinList[i] && this.nearWinList[i].isNearWin)\n                    this.node.reels[i].adjustReelSpeed(this.node.config.SUPER_TURBO);\n            }\n\n            if (count === (this.node.reels.length - 1)) {\n                cc.director.getScheduler().schedule(function(){\n                    this.node.reels[count].adjustReelSpeed(this.node.curentConfig.TIME);\n                }, this, 0, 0, 1, false);\n            }\n\n            if (this.nearWinList[count].isNearWinScatter) {\n                this.runAnimationNearWin(this.scatterSymbol, count);\n            }\n\n            if (this.nearWinList[count].isNearWinBonus) {\n                this.runAnimationNearWin(this.bonusSymbol, count);\n            }\n\n            if (this.nearWinList[count].isNearWinJackpot) {\n                this.runAnimationNearWin(this.jackpotSymbol, count);\n            }\n\n        } else {\n            if (this.nearWinSoundKey) {\n                this.node.soundPlayer.stopSound(this.nearWinSoundKey);\n                this.nearWinSoundKey = null;\n            }\n        }\n        if (count >= this.node.reels.length) {\n            this.clearSymbolPaylines();\n            this.hideParticleList();\n        }\n    },\n    hideParticleList() {\n        this.reelParticle.active = false;\n    },\n    activeParticleList(pos) {\n        this.reelParticle.active = true;\n        this.reelParticle.x = pos;\n    },\n\n    clearSymbolPaylines() {\n        if (!this.paylineNormalSymbol || !this.paylineHolderNode) return;\n        this.paylineHolderNode.children.forEach(paylineSymbol => {\n            if (paylineSymbol) {\n                const {col, row, symbol} = paylineSymbol;\n                this.node.emit('SHOW_STATIC_SYMBOL', col, row, symbol, true);\n            }\n        });\n        this.paylineHolderNode.opacity = 0;\n        this.paylineHolderNode.removeAllChildren();\n    },\n\n    runAnimationNearWin(symbolName, currentIndex){\n        if (!this.paylineNormalSymbol || !this.paylineHolderNode || !symbolName) return;\n\n        this.paylineHolderNode.opacity = 255;\n        this.paylineHolderNode.children.forEach(paylineSymbol => {\n            if (paylineSymbol.symbol === symbolName && paylineSymbol.col < currentIndex && !paylineSymbol.isShowing) {\n                paylineSymbol.opacity = 255;\n                paylineSymbol.isShowing = true;\n                paylineSymbol.enableHighlight();\n                paylineSymbol.playAnimation(1, true);\n            }\n            if (paylineSymbol.symbol === symbolName) {\n                const {col, row, symbol} = paylineSymbol;\n                this.node.emit('SHOW_STATIC_SYMBOL', col, row, symbol, false);\n            }\n        });\n    },\n\n    getXPosition(index) {\n        let startX = -(this.node.config.TABLE_FORMAT.length / 2 - 0.5) * this.node.config.SYMBOL_WIDTH;\n        return (startX + this.node.config.SYMBOL_WIDTH * index);\n    },\n\n    createPaylineSymbol(reel, symbol, col, row) {\n        if (!this.paylineNormalSymbol || !this.paylineHolderNode) return;\n\n        let paylineSymbol = cc.instantiate(this.paylineNormalSymbol);\n        paylineSymbol.parent = this.paylineHolderNode;\n        paylineSymbol.x = this.getXPosition(col);\n        paylineSymbol.y = ((reel.showNumber/2 - row - 0.5)) * this.node.config.SYMBOL_HEIGHT;\n        paylineSymbol.col = col;\n        paylineSymbol.row = row;\n        paylineSymbol.isShowing = false;\n        paylineSymbol.symbol = symbol;\n        paylineSymbol.changeToSymbol(symbol);\n        paylineSymbol.disableHighlight();\n    },\n});\n"]}