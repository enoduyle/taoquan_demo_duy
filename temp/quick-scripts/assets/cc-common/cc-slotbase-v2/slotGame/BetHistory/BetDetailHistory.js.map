{"version":3,"sources":["BetDetailHistory.js"],"names":["globalNetwork","require","serviceRest","arrayTypeJackpot","formatMoney","cc","Class","extends","Component","properties","title","Label","table","backBtn","Node","nextBtn","loading","scrollItem","Prefab","scrollContainer","highlight","scrollView","ScrollView","errorMessage","noBetDetail","hasFreespinOption","displayItem","labelTotalWin","summaryNode","titleJP","listJP","SpriteFrame","titleWinAmt","titleLayout","nameBetHistoryScrollItem","closeButton","normalName","freeGameName","topUpName","bonusName","jackpotName","summaryName","onLoad","node","on","sessionData","getComponent","Button","interactable","resetBoard","scrollTo","v2","opacity","active","string","requestTotalPage","ev","stopPropagation","userData","getUserData","index","currentPage","requestDetail","sessionId","renderTotalPage","disableClose","bind","closeNotice","itemPerPage","curHighLight","serverMessage","instantiate","setParent","parent","showElement","start","modeItem","NodePool","i","put","localizeText","config","MESSAGE_DIALOG","NORMAL_GAME","FREE_GAME","TOPUP_GAME","BONUS_GAME","JACKPOT","SUMMARY","errorText","getComponentInChildren","ERROR_CONNECTION_HISTORY","NO_BET_HISTORY","getModeItem","item","get","onEnable","token","getToken","headers","Authorization","tokenType","userId","requestParams","serviceId","GAME_ID","psId","getWithHeader","url","params","callback","onTotalDetailResponse","callbackErr","requestErr","resetWinAmt","res","error","msg","clearTable","hideElement","data","resultList","length","summaryData","scroll","Error","updateHighlight","emit","loadModeItem","playLoading","stopAllActions","page","from","size","onRequestResponse","total","updateScroller","renderResult","updateTitle","updateTitleJP","latestWinJackpotInfo","jackpotAmount","mode","winAmount","updateWinAmt","lastMode","timeCount","scrollList","cleanScrollList","addButtonTotalPage","countFreeSpin","parsedData","split","indexPage","parseInt","push","count","labelScroll","setIndex","pos","children","position","totalResultItem","titleMode","log","onNextButton","soundPlayer","playSFXClick","onBackButton","stopAutoScroll","itemLength","width","offsetX","scrollToOffset","setToken","type","onClose","idJP","forEach","it","jackpotId","indexOf","Sprite","spriteFrame","tt","getTypeJackpot","jp","includes","value"],"mappings":"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","file":"BetDetailHistory.js","sourceRoot":"../../../../../../../assets/cc-common/cc-slotbase-v2/slotGame/BetHistory","sourcesContent":["const globalNetwork = require('globalNetwork');\nconst serviceRest = require('serviceRest');\nconst arrayTypeJackpot = [\"MINI\", \"MINOR\", \"MAJOR\", \"GRAND\"];\nconst { formatMoney } = require(\"utils\");\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        title: cc.Label,\n        table: require(\"SlotTableHistory\"),\n        backBtn: cc.Node,\n        nextBtn: cc.Node,\n        loading: cc.Node,\n        scrollItem: cc.Prefab,\n        scrollContainer: cc.Node,\n        highlight: cc.Node,\n        scrollView: cc.ScrollView,\n        errorMessage: cc.Node,\n        noBetDetail: cc.Node,\n        hasFreespinOption: false,\n        displayItem: 3,\n        labelTotalWin: cc.Label,\n        summaryNode: cc.Node,\n\n        titleJP: cc.Node,\n        listJP: [cc.SpriteFrame],\n        titleWinAmt: cc.Node,\n        titleLayout: cc.Node,\n        nameBetHistoryScrollItem: \"BetHistoryScrollItem\",\n        closeButton: cc.Node,\n        normalName: \"Normal\",\n        freeGameName: \"FreeGame\",\n        topUpName: \"Topup\",\n        bonusName: \"Chọn Hũ\",\n        jackpotName: \"Thắng Hũ\",\n        summaryName: \"Tổng Kết\",\n    },\n\n\n    onLoad() {\n        this.node.on('OPEN_BET_DETAIL', (sessionData) => {\n            this.nextBtn.getComponent(cc.Button).interactable = false;\n            this.backBtn.getComponent(cc.Button).interactable = false;\n\n            this.resetBoard();\n            this.scrollView.scrollTo(cc.v2(0, 0), 0.0);\n            this.sessionData = sessionData;\n\n            if (this.summaryNode) this.summaryNode.opacity = 0;\n            if (this.table) this.table.node.opacity = 0;\n            if (this.loading) this.loading.active = true;\n            if (this.title) this.title.string = \"\";\n            if (this.errorMessage) this.errorMessage.active = false;\n            if (this.noBetDetail) this.noBetDetail.active = false;\n            this.requestTotalPage();\n        });\n        this.node.on('ON_SCROLL_CLICK', (ev) => {\n            ev.stopPropagation();\n            let userData = ev.getUserData();\n            if (userData.index != this.currentPage) {\n                this.currentPage = userData.index;\n\n                if (userData.index >= 0)\n                    this.requestDetail(this.sessionId, userData.index);\n                else {\n                    this.renderTotalPage();\n                }\n            }\n        });\n\n        this.node.on(\"DISABLE_CLOSE\", this.disableClose.bind(this));\n        this.node.on(\"CLOSE_NOTICE\", this.closeNotice, this);\n        this.node.active = false;\n        this.currentPage = -1;\n        this.itemPerPage = 1;\n        this.curHighLight = -1;\n\n        this.serverMessage = cc.instantiate(this.errorMessage);\n        this.serverMessage.setParent(this.errorMessage.parent);\n        this.serverMessage.active = false;\n        this.showElement();\n    },\n\n    start() {\n        this.modeItem = new cc.NodePool();\n        for (let i = 0; i < 10; i++) {\n            this.modeItem.put(cc.instantiate(this.scrollItem));\n        }\n        this.localizeText();\n    },\n\n    localizeText() {\n        if (this.node.config.MESSAGE_DIALOG) {\n            this.normalName = this.node.config.MESSAGE_DIALOG.NORMAL_GAME;\n            this.freeGameName = this.node.config.MESSAGE_DIALOG.FREE_GAME;\n            this.topUpName = this.node.config.MESSAGE_DIALOG.TOPUP_GAME;\n            this.bonusName = this.node.config.MESSAGE_DIALOG.BONUS_GAME;\n            this.jackpotName = this.node.config.MESSAGE_DIALOG.JACKPOT;\n            this.summaryName = this.node.config.MESSAGE_DIALOG.SUMMARY;\n            let errorText = this.errorMessage ? this.errorMessage.getComponentInChildren(cc.Label) : null;\n            if (errorText) {\n                errorText.string = this.node.config.MESSAGE_DIALOG.ERROR_CONNECTION_HISTORY;\n            }\n            let noBetDetail = this.noBetDetail ? this.noBetDetail.getComponentInChildren(cc.Label) : null;\n            if (noBetDetail) {\n                noBetDetail.string = this.node.config.MESSAGE_DIALOG.NO_BET_HISTORY;\n            }\n        }\n    },\n\n    getModeItem() {\n        let item = this.modeItem.get();\n        if (!item) {\n            item = cc.instantiate(this.scrollItem);\n        }\n        return item;\n    },\n\n    onEnable() {\n        this.serverMessage.active = false;\n        this.showElement();\n    },\n\n    requestTotalPage() {\n        let token = this.token || globalNetwork.getToken();\n        let headers = {\n            Authorization: token\n        };\n\n        headers['token-type'] = 'user';\n        if (this.tokenType) {\n            headers['token-type'] = this.tokenType;\n        }\n        if (this.userId) {\n            headers['user-id'] = this.userId;\n        }\n        let requestParams = {\n            serviceId: this.node.config.GAME_ID,\n            psId: this.sessionData.sessionId,\n        };\n        serviceRest.getWithHeader({\n            url: \"history/getHistoryUserSpinSummary\",\n            params: requestParams,\n            callback: this.onTotalDetailResponse.bind(this),\n            callbackErr: this.requestErr.bind(this),\n            headers\n        });\n        this.currentPage = -1;\n        this.sessionId = this.sessionData.sessionId;\n        // this.requestDetail(this.sessionData.sessionId, 0);\n        if (this.titleJP) this.titleJP.active = false;\n        this.resetWinAmt();\n    },\n\n    onTotalDetailResponse(res) {\n        if (res.error && res.error.msg) {\n            if (this.table) this.table.clearTable();\n            if (this.loading) this.loading.active = false;\n            this.serverMessage.active = true;\n            this.noBetDetail.active = false;\n            this.hideElement();\n            this.serverMessage.getComponentInChildren(cc.Label).string = res.error.msg;\n        }\n        else if (res.data && res.data.resultList && res.data.resultList.length > 0) {\n            this.sessionData.summaryData = res.data.resultList[0];\n            this.sessionData.scroll = res.data.scroll;\n            this.sessionData.summaryData.sessionId = this.sessionData.sessionId;\n            this.renderTotalPage();\n        }\n        else {\n            if (this.sessionData) {\n                throw new Error('Null summary data: ' + this.sessionData.sessionId);\n            }\n            this.requestErr();\n        }\n    },\n\n    renderTotalPage() {\n        if (this.loading) this.loading.active = false;\n        if (this.table) {\n            this.table.node.opacity = 255;\n            this.table.node.active = false;\n        }\n        if (this.title) this.title.string = \"\";\n        this.updateHighlight(-1);\n        this.backBtn.getComponent(cc.Button).interactable = false;\n        this.nextBtn.getComponent(cc.Button).interactable = true;\n\n        if (this.summaryNode) {\n            this.summaryNode.opacity = 255;\n            this.summaryNode.active = true;\n            this.summaryNode.emit('DISPLAY_DATA', this.sessionData.summaryData);\n        }\n\n        // init scroll bar\n        this.loadModeItem({ scroll: this.sessionData.scroll });\n\n        if (this.titleJP) this.titleJP.active = false;\n        this.resetWinAmt();\n    },\n\n    playLoading() {\n        if (this.errorMessage) this.errorMessage.active = false;\n        if (this.noBetDetail) this.noBetDetail.active = false;\n        this.scrollContainer.stopAllActions();\n        if (this.loading) this.loading.active = true;\n        this.serverMessage.active = false;\n    },\n\n    requestDetail(sessionId, page, url = \"history/getHistoryUserSpinDetails\") {\n        this.playLoading();\n        this.nextBtn.getComponent(cc.Button).interactable = false;\n        this.backBtn.getComponent(cc.Button).interactable = false;\n        let from = (page) * this.itemPerPage;\n        this.sessionId = sessionId;\n        let token = this.token || globalNetwork.getToken();\n        let headers = {\n            Authorization: token\n        };\n\n        headers['token-type'] = 'user';\n        if (this.tokenType) {\n            headers['token-type'] = this.tokenType;\n        }\n        if (this.userId) {\n            headers['user-id'] = this.userId;\n        }\n\n        let requestParams = {\n            serviceId: this.node.config.GAME_ID,\n            from: from,\n            size: this.itemPerPage,\n            psId: sessionId,\n            scroll: true\n        };\n\n\n        serviceRest.getWithHeader({\n            url: url,\n            params: requestParams,\n            callback: this.onRequestResponse.bind(this),\n            callbackErr: this.requestErr.bind(this),\n            headers\n        });\n    },\n\n    onRequestResponse(res) {\n        if (this.loading) this.loading.active = false;\n        this.resetWinAmt();\n        if (res.error && res.error.msg) {\n            if (this.table) this.table.clearTable();\n            this.serverMessage.active = true;\n            this.noBetDetail.active = false;\n            this.hideElement();\n            this.serverMessage.getComponentInChildren(cc.Label).string = res.error.msg;\n            return;\n        }\n        else if (res.error || !res.data || res.data.resultList.length <= 0) {\n            if (!this.errorMessage.active) this.noBetDetail.active = true;\n            return;\n        } else {\n            this.noBetDetail.active = false;\n        }\n\n        if (this.currentPage == -1) {\n            this.loadModeItem(res.data);\n            return;\n        }\n\n        this.nextBtn.getComponent(cc.Button).interactable = true;\n        this.backBtn.getComponent(cc.Button).interactable = true;\n\n        if (res.data.total <= this.currentPage * this.itemPerPage + 1) {\n            this.nextBtn.getComponent(cc.Button).interactable = false;\n        }\n\n        this.updateHighlight(this.currentPage);\n        this.updateScroller();\n        if (this.summaryNode) this.summaryNode.active = false;\n        if (this.table) {\n            this.table.node.active = true;\n            this.table.renderResult(res.data.resultList[0]);\n        }\n        this.updateTitle(res.data.resultList[0]);\n        this.updateTitleJP(res.data.resultList[0]);\n\n        let { latestWinJackpotInfo } = res.data.resultList[0];\n        let jackpotAmount = latestWinJackpotInfo && latestWinJackpotInfo.jackpotAmount ? latestWinJackpotInfo.jackpotAmount : 0;\n\n        let mode = res.data.resultList[0].mode;\n        let winAmount = res.data.resultList[0].winAmount;\n        if (mode === 'free' || mode === 'topup') winAmount = res.data.resultList[0].winAmount + jackpotAmount;\n        if (winAmount && winAmount > 0 && mode !== 'normal') {\n            this.updateWinAmt(`: ${formatMoney(winAmount)}`);\n        }\n    },\n\n    loadModeItem(data) {\n        let { scroll } = data;\n        let lastMode = '';\n        this.timeCount = [];\n        this.scrollList = [];\n\n\n        this.cleanScrollList();\n        this.addButtonTotalPage();\n\n        let countFreeSpin = 0;\n\n\n        for (let i = 0; i < scroll.length; i++) {\n\n            let parsedData = scroll[i].split(':');\n            let indexPage = parseInt(parsedData[0]);\n            let mode = parsedData[1];\n            this.scrollList.push(mode);\n            let count = (lastMode != mode) ? 1 : this.timeCount[i - 1] + 1;\n            this.timeCount[i] = count;\n            lastMode = mode;\n\n            switch (mode) {\n                case \"normal\":\n                    mode = this.normalName || \"normal\";\n                    break;\n                case \"free\":\n                    if (this.hasFreespinOption) {\n                        countFreeSpin++;\n                        mode = (this.freeGameName || \"Free\") + \" \" + countFreeSpin;\n                    } else {\n                        countFreeSpin++;\n                        if (parsedData[2] == 1)\n                            mode = (this.freeGameName || \"Free\") + \" \" + countFreeSpin;\n                        else\n                            mode = (this.topUpName || \"Topup\") + \" \" + countFreeSpin;\n                    }\n                    break;\n                case \"bonus\":\n                    mode = (this.bonusName || \"Bonus\") + \" \" + this.timeCount[i];\n                    break;\n            }\n\n            if (mode == \"free_option\") {\n                countFreeSpin = 0;\n            } else {\n                let labelScroll = null;\n                let item = this.getModeItem();\n                item.parent = this.scrollContainer;\n                if (item.getComponent(cc.Label)) {\n                    labelScroll = item.getComponent(cc.Label);\n                } else {\n                    labelScroll = item.getComponentInChildren(cc.Label);\n                }\n                if (labelScroll) labelScroll.string = mode;\n                item.getComponent(this.nameBetHistoryScrollItem).setIndex(indexPage);\n            }\n        }\n\n        this.updateHighlight(-1);\n    },\n\n    updateHighlight(pos) {\n        for (let i = 0; i < this.scrollContainer.children.length; i++) {\n            let item = this.scrollContainer.children[i];\n            let labelScroll = null;\n            let scrollItem = item.getComponent(this.nameBetHistoryScrollItem);\n            if (item.getComponent(cc.Label)) {\n                labelScroll = item.getComponent(cc.Label);\n            } else {\n                labelScroll = item.getComponentInChildren(cc.Label);\n            }\n            if (scrollItem && scrollItem.index == pos) {\n                this.highlight.parent = item;\n                this.highlight.position = cc.v2(0, 0);\n                this.highlight.active = true;\n                this.curHighLight = i;\n                if (pos !== -1 && labelScroll) this.updateTitle(labelScroll.string);\n                return;\n            }\n        }\n        this.updateScroller();\n    },\n\n    cleanScrollList() {\n        while (this.scrollContainer.children.length > 0) {\n            this.modeItem.put(this.scrollContainer.children[0]);\n        }\n    },\n\n    addButtonTotalPage() {\n        let totalResultItem = cc.instantiate(this.scrollItem);\n        let labelScroll = null;\n        totalResultItem.getComponent(this.nameBetHistoryScrollItem).setIndex(-1);\n        totalResultItem.parent = this.scrollContainer;\n        if (totalResultItem.getComponent(cc.Label)) {\n            labelScroll = totalResultItem.getComponent(cc.Label);\n        } else {\n            labelScroll = totalResultItem.getComponentInChildren(cc.Label);\n        }\n        if (labelScroll) labelScroll.string = this.summaryName;\n    },\n\n    updateTitle(data) {\n        let titleMode = this.title.string;\n        if (data) {\n            if (data.mode && data.mode === 'normal') {\n                titleMode = this.normalName;\n            }\n            if (!data.mode) {\n                titleMode = data;\n            }\n        }\n        this.title.string = titleMode;\n    },\n\n    requestErr() {\n        cc.log(\"err\");\n        if (this.table) this.table.clearTable();\n        if (this.loading) this.loading.active = false;\n        if (this.errorMessage) {\n            this.errorMessage.active = true;\n            this.noBetDetail.active = false;\n            this.hideElement();\n        }\n    },\n\n    onNextButton() {\n        this.currentPage += 1;\n        this.curHighLight += 1;\n        if (this.scrollList[this.currentPage] == \"free_option\") {\n            this.currentPage += 1;\n        }\n        if (this.node.soundPlayer) this.node.soundPlayer.playSFXClick();\n        this.requestDetail(this.sessionId, this.currentPage);\n    },\n\n    onBackButton() {\n        this.currentPage = this.currentPage - 1;\n        if (this.scrollList[this.currentPage] == \"free_option\") {\n            this.currentPage -= 1;\n        }\n        if (this.node.soundPlayer) this.node.soundPlayer.playSFXClick();\n        if (this.curHighLight >= 0) this.curHighLight -= 1;\n        if (this.currentPage >= 0) {\n            this.requestDetail(this.sessionId, this.currentPage);\n        }\n        else {\n            this.updateScroller();\n            this.renderTotalPage();\n        }\n    },\n\n    updateScroller() {\n        this.scrollView.stopAutoScroll();\n        if (this.curHighLight >= 1 && this.curHighLight + 1 <= this.scrollContainer.children.length) {\n            let itemLength = this.scrollContainer.children[0].width;\n            let offsetX = (this.curHighLight - 1) * itemLength;\n            this.scrollView.scrollToOffset(cc.v2(offsetX, 0));\n        } else if (this.curHighLight == 0) {\n            this.scrollView.scrollToOffset(cc.v2(0, 0));\n        }\n    },\n\n    resetBoard() {\n        this.currentPage = 0;\n        if (this.summaryNode) this.summaryNode.opacity = 0;\n        while (this.scrollContainer.children.length > 0) {\n            this.modeItem.put(this.scrollContainer.children[0]);\n        }\n        if (this.table) {\n            this.table.node.opacity = 0;\n            this.table.clearTable();\n        }\n        if (this.labelTotalWin) {\n            this.labelTotalWin.node.active = false;\n            this.labelTotalWin.string = \"\";\n        }\n    },\n\n    setToken(token, type, userId) {\n        this.token = token;\n        this.tokenType = type;\n        this.userId = userId;\n    },\n\n    onClose() {\n        this.resetBoard();\n        if (this.node.soundPlayer) this.node.soundPlayer.playSFXClick();\n        if (this.summaryNode) this.summaryNode.emit('CLEAR_TOTAL_DETAIL_DATA');\n        this.node.emit(\"SHOW_BET_HISTORY\");\n        this.node.active = false;\n    },\n\n    disableClose() {\n        if (this.closeButton)\n            this.closeButton.active = false;\n    },\n\n    updateTitleJP(data) {\n        if (this.titleLayout) this.titleLayout.active = false;\n        if (this.titleJP && this.listJP && this.listJP.length > 0) {\n            let { latestWinJackpotInfo } = data;\n            if (latestWinJackpotInfo) {\n                let idJP = -1;\n                arrayTypeJackpot.forEach((it, index) => {\n                    if (latestWinJackpotInfo.jackpotId.indexOf(it) >= 0)\n                        idJP = index;\n                });\n                if (this.listJP.length <= arrayTypeJackpot.length && idJP != -1) {\n                    this.titleJP.getComponent(cc.Sprite).spriteFrame = this.listJP[idJP];\n                    this.titleJP.active = true;\n                    this.updateTitle(data);\n                    let tt = this.title.getComponent(cc.Label).string;\n                    this.title.getComponent(cc.Label).string = tt + \" + \";\n                }\n            } else {\n                this.titleJP.active = false;\n            }\n        } else {\n            let { latestWinJackpotInfo } = data;\n            if (latestWinJackpotInfo && data.mode != \"normal\") {\n                this.updateTitle(data);\n                let tt = this.title.getComponent(cc.Label).string;\n                this.title.getComponent(cc.Label).string = tt + \" + \" + this.jackpotName;\n            }\n        }\n        if (this.titleLayout) this.titleLayout.active = true;\n    },\n\n    closeNotice() {\n        if (this.errorMessage) this.errorMessage.active = false;\n    },\n    getTypeJackpot(jackpotId) {\n        for (let index = 0; index < arrayTypeJackpot.length; index++) {\n            const jp = arrayTypeJackpot[index];\n            if (jackpotId.includes(jp)) {\n                return (index + 1);\n            }\n        }\n        return 0;\n    },\n\n    updateWinAmt(value) {\n        if (this.titleLayout) this.titleLayout.active = false;\n        if (value && this.titleWinAmt) {\n            this.titleWinAmt.getComponent(cc.Label).string = value;\n            this.titleWinAmt.active = true;\n            if (this.titleLayout) this.titleLayout.active = true;\n        }\n    },\n    resetWinAmt() {\n        if (this.titleWinAmt) {\n            this.titleWinAmt.getComponent(cc.Label).string = '';\n            this.titleWinAmt.active = false;\n        }\n    },\n    hideElement() {\n        if (this.titleLayout) this.titleLayout.active = false;\n        this.table.node.active = false;\n        if (this.summaryNode) this.summaryNode.active = false;\n        this.scrollView.node.active = false;\n    },\n    showElement() {\n        if (this.titleLayout) this.titleLayout.active = true;\n        this.table.node.active = true;\n        if (this.summaryNode) this.summaryNode.active = true;\n        this.scrollView.node.active = true;\n    },\n});\n"]}