{"version":3,"sources":["EventListenerManager.js"],"names":["EventListenerManager","instanceObject","createInstance","serviceId","_serviceId","_listeners","cc","EventTarget","on","type","callback","target","once","off","emit","arg1","arg2","arg3","arg4","arg5","dispatchEvent","event","targetOff","getServiceId","hasInstance","getInstance","_instance","constructor","module","exports"],"mappings":";;;;;;AAAA,IAAIA,uBAAwB,YAAU;AAClC,QAAIC,iBAAiB,EAArB;AACA,aAASC,cAAT,CAAwBC,SAAxB,EAAkC;AAC9B,YAAIC,aAAaD,SAAjB;AACA,YAAIE,aAAa,IAAIC,GAAGC,WAAP,EAAjB;AACA,eAAO;AACHC,gBAAI,YAASC,IAAT,EAAeC,QAAf,EAAyBC,MAAzB,EAAgC;AAChC,oBAAG,CAACN,UAAJ,EAAgBA,aAAa,IAAIC,GAAGC,WAAP,EAAb;AAChB,uBAAOF,WAAWG,EAAX,CAAcC,IAAd,EAAoBC,QAApB,EAA8BC,MAA9B,CAAP;AACH,aAJE;;AAMHC,kBAAM,cAASH,IAAT,EAAeC,QAAf,EAAyBC,MAAzB,EAAgC;AAClC,oBAAGN,UAAH,EAAeA,WAAWO,IAAX,CAAgBH,IAAhB,EAAsBC,QAAtB,EAAgCC,MAAhC;AAClB,aARE;;AAUHE,iBAAK,aAASJ,IAAT,EAAeC,QAAf,EAAyBC,MAAzB,EAAgC;AACjC,oBAAGN,UAAH,EAAeA,WAAWQ,GAAX,CAAeJ,IAAf,EAAqBC,QAArB,EAA+BC,MAA/B;AAClB,aAZE;;AAcHG,kBAAM,cAASL,IAAT,EAAeM,IAAf,EAAqBC,IAArB,EAA2BC,IAA3B,EAAiCC,IAAjC,EAAuCC,IAAvC,EAA4C;AAC9C,oBAAGd,UAAH,EAAeA,WAAWS,IAAX,CAAgBL,IAAhB,EAAsBM,IAAtB,EAA4BC,IAA5B,EAAkCC,IAAlC,EAAwCC,IAAxC,EAA8CC,IAA9C;AAClB,aAhBE;;AAkBHC,2BAAe,uBAASC,KAAT,EAAe;AAC1B,oBAAGhB,UAAH,EAAeA,WAAWe,aAAX,CAAyBC,KAAzB;AAClB,aApBE;;AAsBHC,uBAAW,mBAASX,MAAT,EAAgB;AACvB,oBAAGN,UAAH,EAAeA,WAAWiB,SAAX,CAAqBX,MAArB;AAClB,aAxBE;;AA0BHY,0BAAc,wBAAU;AACpB,uBAAOnB,UAAP;AACH;AA5BE,SAAP;AA8BH;AACD,aAASoB,WAAT,CAAqBrB,SAArB,EAA+B;AAC3B,eAAOF,eAAeE,SAAf,CAAP;AACH;AACD,WAAO;AACHsB,qBAAa,qBAAStB,SAAT,EAAmB;AAC5B,gBAAIuB,YAAYF,YAAYrB,SAAZ,CAAhB;AACA,gBAAG,CAACuB,SAAJ,EAAc;AACVA,4BAAY,IAAIxB,cAAJ,CAAmBC,SAAnB,CAAZ;AACA,uBAAOuB,UAAUC,WAAjB;AACA1B,+BAAeE,SAAf,IAA4BuB,SAA5B;AACH;AACD,mBAAOA,SAAP;AACH;AATE,KAAP;AAWH,CAlD0B,EAA3B;;AAoDAE,OAAOC,OAAP,GAAiB7B,oBAAjB","file":"EventListenerManager.js","sourceRoot":"../../../../../../assets/cc-common/cc-share-v1/common","sourcesContent":["var EventListenerManager = (function(){\n    var instanceObject = {};\n    function createInstance(serviceId){\n        var _serviceId = serviceId;\n        var _listeners = new cc.EventTarget();\n        return {\n            on: function(type, callback, target){\n                if(!_listeners) _listeners = new cc.EventTarget();\n                return _listeners.on(type, callback, target);\n            },\n\n            once: function(type, callback, target){\n                if(_listeners) _listeners.once(type, callback, target);\n            },\n\n            off: function(type, callback, target){\n                if(_listeners) _listeners.off(type, callback, target);\n            },\n\n            emit: function(type, arg1, arg2, arg3, arg4, arg5){\n                if(_listeners) _listeners.emit(type, arg1, arg2, arg3, arg4, arg5);\n            },\n\n            dispatchEvent: function(event){\n                if(_listeners) _listeners.dispatchEvent(event);\n            },\n\n            targetOff: function(target){\n                if(_listeners) _listeners.targetOff(target);\n            },\n\n            getServiceId: function(){\n                return _serviceId;\n            },\n        };\n    }\n    function hasInstance(serviceId){\n        return instanceObject[serviceId];\n    }\n    return {\n        getInstance: function(serviceId){\n            var _instance = hasInstance(serviceId);\n            if(!_instance){\n                _instance = new createInstance(serviceId);\n                delete _instance.constructor;\n                instanceObject[serviceId] = _instance;\n            }\n            return _instance;\n        }\n    };\n})();\n\nmodule.exports = EventListenerManager;\n"]}