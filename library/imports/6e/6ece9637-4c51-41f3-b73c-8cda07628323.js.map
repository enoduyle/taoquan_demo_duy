{"version":3,"sources":["../../../../../../../assets/cc-common/cc-share-v1/common/crypto-js/assets/cc-common/cc-share-v1/common/crypto-js/sha256.js"],"names":["CryptoJS","require","C","C_lib","lib","WordArray","Hasher","C_algo","algo","H","K","isPrime","n","sqrtN","Math","sqrt","factor","getFractionalBits","nPrime","pow","W","SHA256","extend","_doReset","_hash","init","slice","_doProcessBlock","M","offset","words","a","b","c","d","e","f","g","h","i","gamma0x","gamma0","gamma1x","gamma1","ch","maj","sigma0","sigma1","t1","t2","_doFinalize","data","_data","dataWords","nBitsTotal","_nDataBytes","nBitsLeft","sigBytes","floor","length","_process","clone","call","_createHelper","HmacSHA256","_createHmacHelper","module","exports"],"mappings":"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","file":"sha256.js","sourceRoot":"../../../../../../../assets/cc-common/cc-share-v1/common/crypto-js","sourcesContent":["const CryptoJS = require('./crypto-core');\n\n// Shortcuts\nvar C = CryptoJS;\nvar C_lib = C.lib;\nvar WordArray = C_lib.WordArray;\nvar Hasher = C_lib.Hasher;\nvar C_algo = C.algo;\n\n// Initialization and round constants tables\nvar H = [];\nvar K = [];\n\n// Compute constants\n(function () {\n    function isPrime(n) {\n        var sqrtN = Math.sqrt(n);\n        for (var factor = 2; factor <= sqrtN; factor++) {\n            if (!(n % factor)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function getFractionalBits(n) {\n        return ((n - (n | 0)) * 0x100000000) | 0;\n    }\n\n    var n = 2;\n    var nPrime = 0;\n    while (nPrime < 64) {\n        if (isPrime(n)) {\n            if (nPrime < 8) {\n                H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));\n            }\n            K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));\n\n            nPrime++;\n        }\n\n        n++;\n    }\n}());\n\n// Reusable object\nvar W = [];\n\n/**\n * SHA-256 hash algorithm.\n */\nvar SHA256 = C_algo.SHA256 = Hasher.extend({\n    _doReset: function () {\n        this._hash = new WordArray.init(H.slice(0));\n    },\n\n    _doProcessBlock: function (M, offset) {\n        // Shortcut\n        var H = this._hash.words;\n\n        // Working variables\n        var a = H[0];\n        var b = H[1];\n        var c = H[2];\n        var d = H[3];\n        var e = H[4];\n        var f = H[5];\n        var g = H[6];\n        var h = H[7];\n\n        // Computation\n        for (var i = 0; i < 64; i++) {\n            if (i < 16) {\n                W[i] = M[offset + i] | 0;\n            } else {\n                var gamma0x = W[i - 15];\n                var gamma0 = ((gamma0x << 25) | (gamma0x >>> 7)) ^\n                    ((gamma0x << 14) | (gamma0x >>> 18)) ^\n                    (gamma0x >>> 3);\n\n                var gamma1x = W[i - 2];\n                var gamma1 = ((gamma1x << 15) | (gamma1x >>> 17)) ^\n                    ((gamma1x << 13) | (gamma1x >>> 19)) ^\n                    (gamma1x >>> 10);\n\n                W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n            }\n\n            var ch = (e & f) ^ (~e & g);\n            var maj = (a & b) ^ (a & c) ^ (b & c);\n\n            var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\n            var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7) | (e >>> 25));\n\n            var t1 = h + sigma1 + ch + K[i] + W[i];\n            var t2 = sigma0 + maj;\n\n            h = g;\n            g = f;\n            f = e;\n            e = (d + t1) | 0;\n            d = c;\n            c = b;\n            b = a;\n            a = (t1 + t2) | 0;\n        }\n\n        // Intermediate hash value\n        H[0] = (H[0] + a) | 0;\n        H[1] = (H[1] + b) | 0;\n        H[2] = (H[2] + c) | 0;\n        H[3] = (H[3] + d) | 0;\n        H[4] = (H[4] + e) | 0;\n        H[5] = (H[5] + f) | 0;\n        H[6] = (H[6] + g) | 0;\n        H[7] = (H[7] + h) | 0;\n    },\n\n    _doFinalize: function () {\n        // Shortcuts\n        var data = this._data;\n        var dataWords = data.words;\n\n        var nBitsTotal = this._nDataBytes * 8;\n        var nBitsLeft = data.sigBytes * 8;\n\n        // Add padding\n        dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n        dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n        dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n        data.sigBytes = dataWords.length * 4;\n\n        // Hash final blocks\n        this._process();\n\n        // Return final computed hash\n        return this._hash;\n    },\n\n    clone: function () {\n        var clone = Hasher.clone.call(this);\n        clone._hash = this._hash.clone();\n\n        return clone;\n    }\n});\n\n/**\n * Shortcut function to the hasher's object interface.\n *\n * @param {WordArray|string} message The message to hash.\n *\n * @return {WordArray} The hash.\n *\n * @static\n *\n * @example\n *\n *     var hash = CryptoJS.SHA256('message');\n *     var hash = CryptoJS.SHA256(wordArray);\n */\nC.SHA256 = Hasher._createHelper(SHA256);\n\n/**\n * Shortcut function to the HMAC's object interface.\n *\n * @param {WordArray|string} message The message to hash.\n * @param {WordArray|string} key The secret key.\n *\n * @return {WordArray} The HMAC.\n *\n * @static\n *\n * @example\n *\n *     var hmac = CryptoJS.HmacSHA256(message, key);\n */\nC.HmacSHA256 = Hasher._createHmacHelper(SHA256);\nmodule.exports = SHA256;\n"]}