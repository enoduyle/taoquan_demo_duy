{"version":3,"sources":["sha1.js"],"names":["CryptoJS","require","C","C_lib","lib","WordArray","Hasher","C_algo","algo","W","SHA1","extend","_doReset","_hash","init","_doProcessBlock","M","offset","H","words","a","b","c","d","e","i","n","t","_doFinalize","data","_data","dataWords","nBitsTotal","_nDataBytes","nBitsLeft","sigBytes","Math","floor","length","_process","clone","call","_createHelper","HmacSHA1","_createHmacHelper","module","exports"],"mappings":"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","file":"sha1.js","sourceRoot":"../../../../../../../assets/cc-common/cc-share-v1/common/crypto-js","sourcesContent":["const CryptoJS = require('./crypto-core');\n\n\n// Shortcuts\nvar C = CryptoJS;\nvar C_lib = C.lib;\nvar WordArray = C_lib.WordArray;\nvar Hasher = C_lib.Hasher;\nvar C_algo = C.algo;\n\n// Reusable object\nvar W = [];\n\n/**\n * SHA-1 hash algorithm.\n */\nvar SHA1 = C_algo.SHA1 = Hasher.extend({\n    _doReset: function () {\n        this._hash = new WordArray.init([\n            0x67452301, 0xefcdab89,\n            0x98badcfe, 0x10325476,\n            0xc3d2e1f0\n        ]);\n    },\n\n    _doProcessBlock: function (M, offset) {\n        // Shortcut\n        var H = this._hash.words;\n\n        // Working variables\n        var a = H[0];\n        var b = H[1];\n        var c = H[2];\n        var d = H[3];\n        var e = H[4];\n\n        // Computation\n        for (var i = 0; i < 80; i++) {\n            if (i < 16) {\n                W[i] = M[offset + i] | 0;\n            } else {\n                var n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n                W[i] = (n << 1) | (n >>> 31);\n            }\n\n            var t = ((a << 5) | (a >>> 27)) + e + W[i];\n            if (i < 20) {\n                t += ((b & c) | (~b & d)) + 0x5a827999;\n            } else if (i < 40) {\n                t += (b ^ c ^ d) + 0x6ed9eba1;\n            } else if (i < 60) {\n                t += ((b & c) | (b & d) | (c & d)) - 0x70e44324;\n            } else /* if (i < 80) */ {\n                t += (b ^ c ^ d) - 0x359d3e2a;\n            }\n\n            e = d;\n            d = c;\n            c = (b << 30) | (b >>> 2);\n            b = a;\n            a = t;\n        }\n\n        // Intermediate hash value\n        H[0] = (H[0] + a) | 0;\n        H[1] = (H[1] + b) | 0;\n        H[2] = (H[2] + c) | 0;\n        H[3] = (H[3] + d) | 0;\n        H[4] = (H[4] + e) | 0;\n    },\n\n    _doFinalize: function () {\n        // Shortcuts\n        var data = this._data;\n        var dataWords = data.words;\n\n        var nBitsTotal = this._nDataBytes * 8;\n        var nBitsLeft = data.sigBytes * 8;\n\n        // Add padding\n        dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n        dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n        dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n        data.sigBytes = dataWords.length * 4;\n\n        // Hash final blocks\n        this._process();\n\n        // Return final computed hash\n        return this._hash;\n    },\n\n    clone: function () {\n        var clone = Hasher.clone.call(this);\n        clone._hash = this._hash.clone();\n\n        return clone;\n    }\n});\n\n/**\n * Shortcut function to the hasher's object interface.\n *\n * @param {WordArray|string} message The message to hash.\n *\n * @return {WordArray} The hash.\n *\n * @static\n *\n * @example\n *\n *     var hash = CryptoJS.SHA1('message');\n *     var hash = CryptoJS.SHA1(wordArray);\n */\nC.SHA1 = Hasher._createHelper(SHA1);\n\n/**\n * Shortcut function to the HMAC's object interface.\n *\n * @param {WordArray|string} message The message to hash.\n * @param {WordArray|string} key The secret key.\n *\n * @return {WordArray} The HMAC.\n *\n * @static\n *\n * @example\n *\n *     var hmac = CryptoJS.HmacSHA1(message, key);\n */\nC.HmacSHA1 = Hasher._createHmacHelper(SHA1);\nmodule.exports = SHA1;\n"]}