{"version":3,"sources":["../../../../../../assets/cc-common/cc-slotbase-v2/g9000/assets/cc-common/cc-slotbase-v2/g9000/BetHistoryMgr.js"],"names":["require","updateUtilConfig","cc","Class","extends","Component","properties","betHistoryPrefab","Prefab","onLoad","queryString","window","location","search","urlParams","URLSearchParams","playSession","get","token","tokenType","userId","currencyCode","_updateCurrencyConfig","betInstance","instantiate","parent","node","opacity","setPosition","clickAndShowComp","getComponent","enter","betHistory","setToken","showBetDetail","sessionId","disableCloseDetail","console","warn","gameId","gSlotDataStore","config","CURRENCY_CONFIG","IS_SUPPORT_MULTI_CURRENCY","currencyConfig","MONEY_FORMAT"],"mappings":";;;;;;eAA6BA,QAAQ,OAAR;IAArBC,4BAAAA;;AAERC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,0BAAkBL,GAAGM;AADb,KAHP;;AAOLC,UAPK,oBAOI;AACL,YAAMC,cAAcC,OAAOC,QAAP,CAAgBC,MAApC;AACA,YAAMC,YAAY,IAAIC,eAAJ,CAAoBL,WAApB,CAAlB;;AAEA,aAAKM,WAAL,GAAmBF,UAAUG,GAAV,CAAc,MAAd,CAAnB;AACA,aAAKC,KAAL,GAAaJ,UAAUG,GAAV,CAAc,OAAd,CAAb;AACA,aAAKE,SAAL,GAAiBL,UAAUG,GAAV,CAAc,WAAd,CAAjB;AACA,aAAKG,MAAL,GAAcN,UAAUG,GAAV,CAAc,QAAd,CAAd;AACA,aAAKI,YAAL,GAAoBP,UAAUG,GAAV,CAAc,GAAd,CAApB;;AAEA,YAAI,KAAKI,YAAT,EAAuB;AACnB,iBAAKC,qBAAL;AACH;AACD,YAAI,KAAKf,gBAAL,IAAyB,KAAKS,WAAlC,EAA+C;AAC3C,iBAAKO,WAAL,GAAmBrB,GAAGsB,WAAH,CAAe,KAAKjB,gBAApB,CAAnB;AACA,iBAAKgB,WAAL,CAAiBE,MAAjB,GAA0B,KAAKC,IAA/B;AACA,iBAAKH,WAAL,CAAiBI,OAAjB,GAA2B,GAA3B;AACA,iBAAKJ,WAAL,CAAiBK,WAAjB,CAA6B,CAA7B,EAA+B,CAA/B;;AAEA,gBAAIC,mBAAmB,KAAKN,WAAL,CAAiBO,YAAjB,CAA8B,cAA9B,CAAvB;AACAD,gCAAoBA,iBAAiBE,KAAjB,EAApB;;AAEA,iBAAKC,UAAL,GAAkB,KAAKT,WAAL,CAAiBO,YAAjB,CAA8B,YAA9B,CAAlB;AACA,iBAAKE,UAAL,CAAgBC,QAAhB,CAAyB,KAAKf,KAA9B,EAAqC,KAAKC,SAA1C,EAAqD,KAAKC,MAA1D;AACA,iBAAKY,UAAL,CAAgBE,aAAhB,CAA8B,EAACC,WAAW,KAAKnB,WAAjB,EAA9B;AACA,iBAAKgB,UAAL,CAAgBI,kBAAhB;AACH,SAbD,MAaO;AACHC,oBAAQC,IAAR,uCAAiD,KAAKC,MAAtD;AACH;AACJ,KApCI;AAsCLjB,yBAtCK,mCAsCmB;AACpB,YAAI,CAAC,KAAKI,IAAL,CAAUc,cAAX,IAA6B,CAAC,KAAKd,IAAL,CAAUe,MAAxC,IAAkD,CAAC,KAAKf,IAAL,CAAUe,MAAV,CAAiBC,eAApE,IAAuF,CAAC,KAAKhB,IAAL,CAAUe,MAAV,CAAiBE,yBAA7G,EAAwI;AACxI,aAAKjB,IAAL,CAAUc,cAAV,CAAyBnB,YAAzB,GAAwC,KAAKA,YAA7C;AACA,YAAMuB,iBAAiB,KAAKlB,IAAL,CAAUe,MAAV,CAAiBC,eAAjB,CAAiC,KAAKrB,YAAtC,CAAvB;AACA,YAAIuB,kBAAkB3C,gBAAtB,EAAwC;AACpCA,6BAAiB,iBAAjB,EAAoC2C,eAAeC,YAAnD;AACH;AACJ;AA7CI,CAAT","file":"BetHistoryMgr.js","sourceRoot":"../../../../../../assets/cc-common/cc-slotbase-v2/g9000","sourcesContent":["const { updateUtilConfig } = require('utils');\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        betHistoryPrefab: cc.Prefab\n    },\n\n    onLoad() {\n        const queryString = window.location.search;\n        const urlParams = new URLSearchParams(queryString);\n\n        this.playSession = urlParams.get('psId');\n        this.token = urlParams.get('token');\n        this.tokenType = urlParams.get('tokenType');\n        this.userId = urlParams.get('userId');\n        this.currencyCode = urlParams.get('c');\n\n        if (this.currencyCode) {\n            this._updateCurrencyConfig();\n        }\n        if (this.betHistoryPrefab && this.playSession) {\n            this.betInstance = cc.instantiate(this.betHistoryPrefab);\n            this.betInstance.parent = this.node;\n            this.betInstance.opacity = 255;\n            this.betInstance.setPosition(0,0);\n            \n            let clickAndShowComp = this.betInstance.getComponent('ClickAndShow');\n            clickAndShowComp && clickAndShowComp.enter();\n\n            this.betHistory = this.betInstance.getComponent('BetHistory');\n            this.betHistory.setToken(this.token, this.tokenType, this.userId);\n            this.betHistory.showBetDetail({sessionId: this.playSession});\n            this.betHistory.disableCloseDetail();\n        } else {\n            console.warn(`Cant get history prefab for game ${this.gameId}`);\n        }\n    },\n\n    _updateCurrencyConfig() {\n        if (!this.node.gSlotDataStore || !this.node.config || !this.node.config.CURRENCY_CONFIG || !this.node.config.IS_SUPPORT_MULTI_CURRENCY) return;\n        this.node.gSlotDataStore.currencyCode = this.currencyCode;\n        const currencyConfig = this.node.config.CURRENCY_CONFIG[this.currencyCode];\n        if (currencyConfig && updateUtilConfig) {\n            updateUtilConfig('CURRENCY_CONFIG', currencyConfig.MONEY_FORMAT);\n        }\n    },\n});\n"]}