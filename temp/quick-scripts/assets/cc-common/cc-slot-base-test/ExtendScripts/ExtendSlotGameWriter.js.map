{"version":3,"sources":["ExtendSlotGameWriter.js"],"names":["StateGameMode","NormalGame","FreeGame","FreespinOption","BonusGame","Others","cc","Class","extends","require","makeScriptResultReceive","node","gSlotDataStore","playSession","matrix","jackpot","state","listScript","jpInfo","length","split","jpType","push","command","data","jpValue","Number","makeScriptShowResults","winAmount","payLines","payLineJackPot","freeSpinOption","bonusGame","freeGame","winAmountPS","freeGameRemain","currentBetData","slotBetDataStore","isBigwin","isJackpotWin","isFastResult","name","content","jackpotType","time","spinTimes","makeScriptGameRestart","promotion","promotionRemain","scriptUpdateWinAmount"],"mappings":"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","file":"ExtendSlotGameWriter.js","sourceRoot":"../../../../../../assets/cc-common/cc-slot-base-test/ExtendScripts","sourcesContent":["const StateGameMode = {\n    NormalGame: 1,\n    FreeGame: 2,\n    FreespinOption: 3,\n    BonusGame: 4,\n    Others: 9,\n};\n\ncc.Class({\n    extends: require('SlotGameWriter'),\n\n    makeScriptResultReceive() {\n        const { matrix, jackpot, state } = this.node.gSlotDataStore.playSession;\n\n        let listScript = [];\n\n        if (jackpot && state !== StateGameMode.FreespinOption) {\n            const jpInfo = jackpot[jackpot.length - 1].split(';');\n            const jpType = jpInfo[0].split('_')[2];\n            listScript.push({\n                command: \"_updateValueJP\",\n                data: {\n                    jpValue: Number(jpInfo[1]),\n                    jpType: jpType,\n                }\n            });\n            listScript.push({\n                command: \"_pauseUpdateJP\"\n            });\n        }\n\n        listScript.push({\n            command: \"_resultReceive\",\n            data: matrix,\n        });\n\n        listScript.push({\n            command: \"_showResult\",\n            data: matrix,\n        });\n\n        return listScript;\n    },\n\n    makeScriptShowResults() {\n        const { state, matrix, winAmount, payLines, payLineJackPot, freeSpinOption, jackpot,\n            bonusGame, freeGame, winAmountPS, freeGameRemain,\n        } = this.node.gSlotDataStore.playSession;\n\n        const { currentBetData } = this.node.gSlotDataStore.slotBetDataStore.data;\n        const listScript = [];\n        const isBigwin = winAmount && winAmount >= currentBetData * 20 && !isJackpotWin;\n        const isJackpotWin = jackpot && jackpot.length > 0;\n        this.isFastResult = false;\n\n        if (state === StateGameMode.FreespinOption) {\n            listScript.push({\n                command: \"_hideCutscene\",\n                data: {\n                    name: \"FreeGameOption\",\n                }\n            });\n        } else {\n            listScript.push({\n                command: \"_setUpPaylines\",\n                data: { matrix, payLines },\n            });\n        }\n\n        if (isJackpotWin) {\n            listScript.push({\n                command: \"_showJackpotPayLine\",\n                data: payLineJackPot,\n            });\n            const jpInfo = jackpot[jackpot.length - 1].split(';');\n            const jpType = jpInfo[0].split('_')[2];\n            listScript.push({\n                command: \"_showUnskippedCutscene\",\n                data: {\n                    name: \"JackpotWin\",\n                    content: {\n                        winAmount: Number(jpInfo[1]),\n                        jackpotType: jpType\n                    }\n                }\n            });\n            listScript.push({\n                command: \"_updateWinningAmount\",\n                data: { winAmount: Number(jpInfo[1]), time: 100 }\n            });\n            listScript.push({\n                command: \"_resumeUpdateJP\",\n            });\n        } else if (isBigwin) {\n            listScript.push({\n                command: \"_blinkAllPaylines\",\n            });\n            listScript.push({\n                command: \"_showCutscene\",\n                data: {\n                    name: \"WinEffect\",\n                    content: {\n                        winAmount,\n                        currentBetData\n                    }\n                }\n            });\n        }\n        if (state == StateGameMode.NormalGame) {\n            const { spinTimes } = this.node.gSlotDataStore;\n            if (bonusGame && bonusGame > 0) {\n                listScript.push({ command: '_updateLastWin', data: false });\n                if (winAmount && winAmount > 0) {\n                    listScript.push({\n                        command: '_updateWinningAmount',\n                        data: {\n                            winAmount: winAmountPS,\n                            time: 300\n                        }\n                    });\n                } else {\n                    listScript.push({\n                        command: '_clearWinAmount'\n                    });\n                }\n                listScript.push({\n                    command: \"_showBonusPayLine\",\n                });\n                listScript.push({\n                    command: \"_newGameMode\",\n                    data: { name: \"bonusGame\", },\n                });\n                listScript.push({\n                    command: \"_resumeGameMode\",\n                    data: { name: \"normalGame\", },\n                });\n                if (!freeGame && spinTimes && spinTimes > 0) {\n                    listScript.push({\n                        command: \"_resumeSpinTime\",\n                        data: spinTimes,\n                    });\n                }\n            }\n\n            if ((freeSpinOption && freeSpinOption > 0) || (freeGame && freeGame > 0)) {\n                const { spinTimes } = this.node.gSlotDataStore;\n                listScript.push({\n                    command: '_updateLastWin',\n                    data: false\n                });\n                if (!bonusGame) {\n                    if (winAmountPS && winAmountPS > 0) {\n                        listScript.push({\n                            command: '_updateWinningAmount',\n                            data: { winAmount: winAmountPS, time: 10 }\n                        });\n                    } else {\n                        listScript.push({\n                            command: '_clearWinAmount'\n                        });\n                    }\n                }\n                listScript.push({\n                    command: \"_showScatterPayLine\",\n                });\n                if (freeSpinOption && freeSpinOption > 0) {\n                    listScript.push({\n                        command: \"_showCutscene\",\n                        data: {\n                            name: \"FreeGameOption\"\n                        }\n                    });\n                }\n                listScript.push({\n                    command: \"_newGameMode\",\n                    data: { name: \"freeGame\", data: matrix },\n                });\n                listScript.push({\n                    command: \"_resumeGameMode\",\n                    data: { name: \"normalGame\", },\n                });\n\n                if (spinTimes && spinTimes > 0) {\n                    listScript.push({\n                        command: \"_resumeSpinTime\",\n                        data: spinTimes,\n                    });\n                }\n            }\n            if (payLines && payLines.length > 0) {\n                if (!isBigwin) {\n                    listScript.push({\n                        command: \"_blinkAllPaylines\",\n                    });\n                }\n                listScript.push({\n                    command: \"_showNormalPayline\",\n                });\n            }\n            else {\n                listScript.push({\n                    command: \"_clearPaylines\",\n                });\n            }\n            listScript.push({\n                command: \"_gameEnd\"\n            });\n            listScript.push({\n                command: \"_gameFinish\"\n            });\n            listScript.push({\n                command: \"_gameRestart\"\n            });\n        } else if (state == StateGameMode.FreeGame) {\n            if (bonusGame && bonusGame > 0) {\n                if (winAmount && winAmount > 0) {\n                    listScript.push({\n                        command: '_updateWinningAmount',\n                        data: {\n                            winAmount: winAmountPS,\n                            time: 300\n                        }\n                    });\n                }\n                listScript.push({\n                    command: \"_showBonusPayLine\",\n                });\n                listScript.push({\n                    command: \"_newGameMode\",\n                    data: { name: \"bonusGame\", },\n                });\n                listScript.push({\n                    command: \"_resumeGameMode\",\n                    data: { name: \"freeGame\", },\n                });\n            }\n\n            if (payLines && payLines.length > 0) {\n                listScript.push({\n                    command: \"_blinkAllPaylines\",\n                });\n                listScript.push({\n                    command: \"_showFreePayline\",\n                });\n            }\n            else {\n                listScript.push({\n                    command: \"_clearPaylines\",\n                });\n            }\n            listScript.push({\n                command: \"_gameEnd\"\n            });\n\n            if (!freeGameRemain || freeGameRemain <= 0) {\n                if (winAmountPS && winAmountPS > 0) {\n                    listScript.push({\n                        command: '_updateWinningAmount',\n                        data: {\n                            winAmount: winAmountPS,\n                            time: 300\n                        }\n                    });\n                }\n                listScript.push({\n                    command: \"_delayTimeScript\",\n                    data: 0.3\n                });\n                listScript.push({\n                    command: \"_showUnskippedCutscene\",\n                    data: {\n                        name: \"TotalWinPanel\",\n                        content: {}\n                    }\n                });\n                listScript.push({\n                    command: \"_gameExit\",\n                });\n            } else {\n                listScript.push({\n                    command: \"_gameRestart\"\n                });\n            }\n        }\n        return listScript;\n    },\n\n    makeScriptGameRestart() {\n        const listScript = [];\n        const {freeGameRemain} = this.node.gSlotDataStore.playSession;\n        const {spinTimes, promotion, promotionRemain} = this.node.gSlotDataStore;\n\n        this.scriptUpdateWinAmount(listScript);\n        if (promotion && promotion > 0) {\n            listScript.push({\n                command: \"_showTrialButtons\",\n                data: false,\n            });\n            listScript.push({\n                command: \"_resetPromotionButtons\"\n            });\n        }\n\n        if (spinTimes && spinTimes > 0) {\n            if(freeGameRemain && freeGameRemain > 0){\n                listScript.push({\n                    command: \"_runAutoSpin\"\n                });\n            }else if(!promotion){\n                listScript.push({\n                    command: \"_runAutoSpin\"\n                });\n            }\n        } else {\n            if (!promotionRemain || promotionRemain <= 0) {\n                listScript.push({\n                    command: '_enableBet'\n                });\n                listScript.push({\n                    command: \"_exitPromotionMode\"\n                });\n                listScript.push({\n                    command: \"_showTrialButtons\",\n                    data: true\n                });\n            }\n        }\n        listScript.push({\n            command: \"_runAsyncScript\",\n        });\n        return listScript;\n    },\n\n    scriptUpdateWinAmount(listScript) {\n        const { winAmount, winAmountPS } = this.node.gSlotDataStore.playSession;\n        if (winAmount && winAmount > 0) {\n            if (winAmountPS == winAmount) {\n                listScript.push({\n                    command: \"_clearWinAmount\"\n                });\n            }\n            listScript.push({\n                command: \"_updateWinningAmount\",\n                data: { winAmount: winAmountPS, time: 300 }\n            });\n        }\n    },\n});\n"]}