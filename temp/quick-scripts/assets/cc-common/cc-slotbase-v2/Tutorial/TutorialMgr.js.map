{"version":3,"sources":["TutorialMgr.js"],"names":["lodash","require","XORCipher","INDICATOR_ANGEL","TOP","LEFT","RIGHT","cc","Class","extends","Component","properties","dialog","gradientBot","Node","gradientTop","tutorialSteps","type","Asset","default","indicator","tutorialText","buttonSkip","jackpot","timeDelayStart","isDebug","tutorialDataConfigs","TutorialDataConfig","onLoad","inited","finished","node","active","listLockedObjects","listLockedObjectData","trialSessionCount","start","maxDemoTime","config","MAX_PLAY_DEMO","startTutorial","waitForStart","init","opacity","endTutorialData","_isSpinning","initJackpot","slotButtons","forEach","sb","emit","_lockTouch","stopAllActions","mainDirector","currentGameMode","disableBet","runAction","sequence","delayTime","callFunc","reset","_unlockTouch","forceSkipTutorial","skipTutorial","run","IS_SUPPORT_MULTI_CURRENCY","length","currencyCode","toUpperCase","dataConfig","find","tutorialData","json","get","gameStateManager","_spinTutorialData","encryptData","data","isEncrypted","decryptData","decode_tutorial","JSON","parse","canvas","flags","unlockAll","jackpotComponent","getComponent","getComponentsInChildren","initData","jackpotReset","jackpots","Object","keys","DEFAULT_TRIAL_JACKPOT","value","jp","callbackJackpotUpdate","playIndicatorAnim","angle","repeatForever","moveBy","index","spinIndex","showing","pauseGameMode","_lockAtButton","objPath","obj","doLockObject","warn","_lockAtObjects","listPath","_unlockAllObjects","lockObject","lockObjectPosition","parent","convertToWorldSpaceAR","position","unshift","lockObjectActive","lockObjectColor","color","lockObjectParent","lockObjectLocalPos","lockObjectIndex","getSiblingIndex","lockObjetOpacity","setSiblingIndex","convertToNodeSpaceAR","Color","WHITE","fadeTo","lockObjectData","_unlockButton","_lockAtSymbol","x","y","path","extendPath","reel","symbol","getShowSymbol","gradient","_showDialog","title","content","arrow","arrow1","backgroundReverse","titleText","getText","contentText","v2","show","scale","scaleTo","bg","getChildByName","scaleY","_hideDialog","hide","_showIndicator","rotation","_pauseGameMode","pause","_hideIndicator","_startFreespin","name","_addBoolFlag","flag","push","_removeBoolFlag","filter","it","_resumeCurrentScript","_setLockedButtonPos","_setJackpotActive","_activeBet","enableBet","_setBetValue","bet","_enableButton","button","Button","interactable","_disableButton","_updateJackpot","renderJackpotBet","_enableTrialButtons","trialButton","isContainFlag","indexOf","trigger","action","waitingTrigger","some","Steps","hideTutorial","runJackpot","doActionAfterFinishSpin","showPopupRedirect","currentStepData","log","command","resolve","stepData","stringify","error","isShowing","onTutorialClick","onTutorialFinish","id","setMainGameMgr","director","evt","soundPlayer","playSFXClick","skipTutorialMode","playAnimSwitchToReal","havingDirector","isFinished","onStateUpdate","trialJpl","winJackpotAmount","trialJplWin","isTutorialData","getLatestJackpot","isFinishedTutorial","jackpotName","split","map","item","includes","i","jackpotData","jackpotAmount","Number","replace","JP_PREFIX_EVENT","onEnable","enableSkipBtn","isOn","displaySkipBtn","isActive"],"mappings":";;;;;;AAAA,IAAMA,SAASC,QAAQ,QAAR,CAAf;AACA,IAAMC,YAAYD,QAAQ,UAAR,CAAlB;AACA,IAAME,kBAAkB;AACpBC,SAAK,GADe;AAEpBC,UAAM,CAAC,EAFa;AAGpBC,WAAO;AAHa,CAAxB;AAKAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,gBAAQX,QAAQ,gBAAR,CADA;AAERY,qBAAaN,GAAGO,IAFR;AAGRC,qBAAaR,GAAGO,IAHR;AAIRE,uBAAe;AACXC,kBAAMV,GAAGW,KADE;AAEXC,qBAAS;AAFE,SAJP;AAQRC,mBAAWb,GAAGO,IARN;AASRO,sBAAc;AACVJ,kBAAMV,GAAGW,KADC;AAEVC,qBAAS;AAFC,SATN;AAaRG,oBAAYf,GAAGO,IAbP;AAcRS,iBAAShB,GAAGO,IAdJ;AAeRU,wBAAgB,CAfR;AAgBRC,iBAAS,KAhBD;AAiBRC,6BAAqB;AACjBP,qBAAS,EADQ;AAEjBF,kBAAMhB,QAAQ,oBAAR,EAA8B0B;AAFnB;AAjBb,KAHP;;AA0BLC,UA1BK,oBA0BI;AACL,YAAI,OAAQ,KAAKC,MAAb,KAAyB,WAA7B,EACI,KAAKA,MAAL,GAAc,KAAd;AACJ,aAAKC,QAAL,GAAgB,IAAhB;AACA,YAAI,CAAC,KAAKD,MAAV,EAAkB;AACd,iBAAKE,IAAL,CAAUC,MAAV,GAAmB,KAAnB;AACH;;AAED,aAAKC,iBAAL,GAAyB,EAAzB;AACA,aAAKC,oBAAL,GAA4B,EAA5B;AACA,aAAKC,iBAAL,GAAyB,CAAzB;AACH,KArCI;AAuCLC,SAvCK,mBAuCG;AACJ,aAAKC,WAAL,GAAmB,KAAKN,IAAL,CAAUO,MAAV,CAAiBC,aAAjB,IAAkC,EAArD;AACH,KAzCI;AA2CLC,iBA3CK,2BA2CW;AAAA;;AACZ,YAAI,KAAKC,YAAT,EAAuB;;AAEvB,YAAI,CAAC,KAAKZ,MAAV,EAAkB;AACd,iBAAKa,IAAL;AACH;AACD,aAAKX,IAAL,CAAUC,MAAV,GAAmB,IAAnB;AACA,aAAKD,IAAL,CAAUY,OAAV,GAAoB,GAApB;AACA,aAAKC,eAAL,GAAuB,KAAvB;AACA,aAAKC,WAAL,GAAmB,KAAnB;AACA,aAAKC,WAAL;AACA,aAAKC,WAAL,CAAiBC,OAAjB,CAAyB,cAAM;AAC3BC,eAAGlB,IAAH,CAAQmB,IAAR,CAAa,iBAAb,EAAgC,KAAhC;AACH,SAFD;AAGA,aAAKC,UAAL;AACA,aAAKV,YAAL,GAAoB,IAApB;AACA,aAAKV,IAAL,CAAUqB,cAAV;AACA,YAAI,KAAKC,YAAL,IAAqB,KAAKA,YAAL,CAAkBtB,IAA3C,EAAiD;AAC7C,iBAAKsB,YAAL,CAAkBtB,IAAlB,CAAuBmB,IAAvB,CAA4B,wBAA5B;AACA,iBAAKG,YAAL,CAAkBC,eAAlB,CAAkCJ,IAAlC,CAAuC,cAAvC;AACA,iBAAKG,YAAL,CAAkBE,UAAlB,CAA6B,IAA7B;AACH;AACD,aAAKxB,IAAL,CAAUyB,SAAV,CAAoBjD,GAAGkD,QAAH,CAAYlD,GAAGmD,SAAH,CAAa,KAAKlC,cAAlB,CAAZ,EAA+CjB,GAAGoD,QAAH,CAAY,YAAM;AACjF,kBAAK7B,QAAL,GAAgB,KAAhB;AACA,kBAAK8B,KAAL;AACA,kBAAKC,YAAL;AACA,gBAAI,MAAKC,iBAAT,EAA4B;AACxB,sBAAKC,YAAL;AACH,aAFD,MAEO;AACH,sBAAKC,GAAL;AACH;AACD,gBAAI,MAAKX,YAAL,IAAqB,MAAKA,YAAL,CAAkBtB,IAA3C,EAAiD;AAC7C,sBAAKsB,YAAL,CAAkBC,eAAlB,CAAkCJ,IAAlC,CAAuC,aAAvC;AACH;AACD,kBAAKT,YAAL,GAAoB,KAApB;AACH,SAbkE,CAA/C,CAApB;AAcH,KA/EI;AAiFLC,QAjFK,kBAiFE;AACH,YAAI,KAAKX,IAAL,CAAUO,MAAV,CAAiB2B,yBAAjB,IAA8C,KAAKvC,mBAAL,CAAyBwC,MAA3E,EAAmF;AAC/E,gBAAMC,eAAe,KAAKd,YAAL,CAAkBc,YAAlB,CAA+BC,WAA/B,EAArB;AACA,gBAAMC,aAAa,KAAK3C,mBAAL,CAAyB4C,IAAzB,CAA8B;AAAA,uBAAUhC,OAAO6B,YAAP,CAAoBC,WAApB,MAAqCD,YAA/C;AAAA,aAA9B,KAA8F,EAAjH;AACA,iBAAKI,YAAL,GAAoBF,WAAWE,YAAX,IAA2BF,WAAWE,YAAX,CAAwBC,IAAvE;AACA,iBAAKxD,aAAL,GAAqBqD,WAAWrD,aAAX,IAA4B,KAAKA,aAAtD;AACA,iBAAKK,YAAL,GAAoBgD,WAAWhD,YAAX,IAA2B,KAAKA,YAApD;AACA,gBAAMkD,eAAevE,OAAOyE,GAAP,CAAW,KAAKpB,YAAhB,EAA8B,oCAA9B,CAArB;AACA,gBAAIkB,gBAAgB,KAAKA,YAAzB,EAAuC;AACnC,qBAAKlB,YAAL,CAAkBqB,gBAAlB,CAAmCC,iBAAnC,GAAuD,KAAKJ,YAA5D;AACH,aAFD,MAEO;AACH,qBAAKT,iBAAL,GAAyB,IAAzB;AACH;AACJ;AACD,YAAI,KAAKS,YAAT,EAAuB;AAAA,gCACwB,KAAKA,YAD7B;AAAA,gBACLK,WADK,iBACXC,IADW;AAAA,gBACQC,WADR,iBACQA,WADR;;AAEnB,gBAAIA,WAAJ,EAAiB;AACb,oBAAMC,cAAc7E,UAAU8E,eAAV,CAA0BJ,WAA1B,CAApB;AACA,qBAAKL,YAAL,GAAoBU,KAAKC,KAAL,CAAWH,WAAX,CAApB;AACA,qBAAK1B,YAAL,CAAkBqB,gBAAlB,CAAmCC,iBAAnC,GAAuD,KAAKJ,YAA5D;AACH;AACJ;;AAED,aAAKY,MAAL,GAAc5E,GAAG+D,IAAH,CAAQ,QAAR,CAAd;AACA,aAAKzC,MAAL,GAAc,IAAd;AACA,aAAKuD,KAAL,GAAa,EAAb;AACA,aAAKC,SAAL;AACA,aAAKC,gBAAL,GAAwB,KAAK/D,OAAL,CAAagE,YAAb,CAA0B,SAA1B,CAAxB;AACA,aAAKxC,WAAL,GAAmB,KAAKM,YAAL,CAAkBmC,uBAAlB,CAA0C,gBAA1C,CAAnB;AACA,aAAKF,gBAAL,CAAsBG,QAAtB;AACA,aAAKC,YAAL,GAAoB,KAApB;AACH,KAhHI;AAkHL5C,eAlHK,yBAkHS;AAAA;;AACV,aAAKvB,OAAL,CAAaS,MAAb,GAAsB,IAAtB;AACA,aAAKT,OAAL,CAAaoB,OAAb,GAAuB,GAAvB;AACA,YAAIgD,WAAWC,OAAOC,IAAP,CAAY,KAAK9D,IAAL,CAAUO,MAAV,CAAiBwD,qBAA7B,CAAf;AACAH,iBAAS3C,OAAT,CAAiB,cAAM;AACnB,gBAAI+C,QAAQ,OAAKhE,IAAL,CAAUO,MAAV,CAAiBwD,qBAAjB,CAAuCE,EAAvC,CAAZ;AACA,mBAAKV,gBAAL,CAAsBW,qBAAtB,CAA4CD,EAA5C,EAAgDD,KAAhD;AACH,SAHD;AAIH,KA1HI;AA4HLG,qBA5HK,+BA4HwB;AAAA,YAAXC,KAAW,uEAAH,CAAG;;AACzB,aAAK/E,SAAL,CAAegC,cAAf;AACA,gBAAQ+C,KAAR;AACI,iBAAKhG,gBAAgBG,KAArB;AACI,qBAAKc,SAAL,CAAeoC,SAAf,CAAyBjD,GAAG6F,aAAH,CAAiB7F,GAAGkD,QAAH,CAAYlD,GAAG8F,MAAH,CAAU,GAAV,EAAe,EAAf,EAAmB,CAAnB,CAAZ,EAAmC9F,GAAG8F,MAAH,CAAU,GAAV,EAAe,CAAC,EAAhB,EAAoB,CAApB,CAAnC,CAAjB,CAAzB;AACA;AACJ,iBAAKlG,gBAAgBE,IAArB;AACI,qBAAKe,SAAL,CAAeoC,SAAf,CAAyBjD,GAAG6F,aAAH,CAAiB7F,GAAGkD,QAAH,CAAYlD,GAAG8F,MAAH,CAAU,GAAV,EAAe,CAAC,EAAhB,EAAoB,CAApB,CAAZ,EAAoC9F,GAAG8F,MAAH,CAAU,GAAV,EAAe,EAAf,EAAmB,CAAnB,CAApC,CAAjB,CAAzB;AACA;AACJ,iBAAKlG,gBAAgBC,GAArB;AACI,qBAAKgB,SAAL,CAAeoC,SAAf,CAAyBjD,GAAG6F,aAAH,CAAiB7F,GAAGkD,QAAH,CAAYlD,GAAG8F,MAAH,CAAU,GAAV,EAAe,CAAf,EAAkB,EAAlB,CAAZ,EAAmC9F,GAAG8F,MAAH,CAAU,GAAV,EAAe,CAAf,EAAkB,CAAC,EAAnB,CAAnC,CAAjB,CAAzB;AACA;AACJ;AACI,qBAAKjF,SAAL,CAAeoC,SAAf,CAAyBjD,GAAG6F,aAAH,CAAiB7F,GAAGkD,QAAH,CAAYlD,GAAG8F,MAAH,CAAU,GAAV,EAAe,CAAf,EAAkB,CAAC,EAAnB,CAAZ,EAAoC9F,GAAG8F,MAAH,CAAU,GAAV,EAAe,CAAf,EAAkB,EAAlB,CAApC,CAAjB,CAAzB;AACA;AAZR;AAcH,KA5II;AA8ILzC,SA9IK,mBA8IG;AACJ,aAAK0C,KAAL,GAAa,CAAb;AACA,aAAKC,SAAL,GAAiB,CAAjB;AACA,aAAKC,OAAL,GAAe,IAAf;AACA,aAAKC,aAAL,GAAqB,KAArB;AACA,aAAKnF,UAAL,CAAgBU,MAAhB,GAAyB,IAAzB;AACA,aAAKoD,KAAL,GAAa,EAAb;AACH,KArJI;AAuJLsB,iBAvJK,+BAuJsB;AAAA,YAAXC,OAAW,QAAXA,OAAW;;AACvB,YAAIC,MAAMrG,GAAG+D,IAAH,CAAQqC,OAAR,CAAV;AACA,YAAIC,GAAJ,EAAS;AACL,iBAAKC,YAAL,CAAkBD,GAAlB;AACH,SAFD,MAGK;AACDrG,eAAGuG,IAAH,CAAQ,4CAA4CH,OAApD;AACH;AACJ,KA/JI;AAiKLI,kBAjKK,iCAiKwB;AAAA;;AAAA,YAAZC,QAAY,SAAZA,QAAY;;AACzB,YAAI,KAAK/E,iBAAL,IAA0B,KAAKA,iBAAL,CAAuBiC,MAArD,EAA6D;AACzD,iBAAK+C,iBAAL;AACH;AACD,YAAID,YAAYA,SAAS9C,MAAzB,EAAiC;AAC7B8C,qBAAShE,OAAT,CAAiB,mBAAW;AACxB,oBAAIkE,aAAa3G,GAAG+D,IAAH,CAAQqC,OAAR,CAAjB;AACA,oBAAMQ,qBAAqBD,WAAWE,MAAX,CAAkBC,qBAAlB,CAAwCH,WAAWI,QAAnD,CAA3B;AACA,uBAAKrF,iBAAL,CAAuBsF,OAAvB,CAA+BL,UAA/B;AACA,uBAAKhF,oBAAL,CAA0BqF,OAA1B,CAAkC;AAC9BC,sCAAkBN,WAAWlF,MADC;AAE9ByF,qCAAiBP,WAAWQ,KAFE;AAG9BC,sCAAkBT,WAAWE,MAHC;AAI9BQ,wCAAoBV,WAAWI,QAJD;AAK9BH,0DAL8B;AAM9BU,qCAAiBX,WAAWY,eAAX,EANa;AAO9BC,sCAAkBb,WAAWvE;AAPC,iBAAlC;AASAuE,2BAAWE,MAAX,GAAoB,OAAKrF,IAAzB;AACAmF,2BAAWc,eAAX,CAA2B,OAAKjH,WAAL,CAAiB+G,eAAjB,EAA3B;AACAZ,2BAAWI,QAAX,GAAsB,OAAKvF,IAAL,CAAUkG,oBAAV,CAA+Bd,kBAA/B,CAAtB;AACAD,2BAAWlF,MAAX,GAAoB,IAApB;AACAkF,2BAAWQ,KAAX,GAAmBnH,GAAG2H,KAAH,CAASC,KAA5B;AACAjB,2BAAWvE,OAAX,GAAqB,GAArB;AACH,aAnBD;AAoBA,iBAAK9B,WAAL,CAAiBmB,MAAjB,GAA0B,IAA1B;AACA,iBAAKnB,WAAL,CAAiB8B,OAAjB,GAA2B,CAA3B;AACA,iBAAK9B,WAAL,CAAiB2C,SAAjB,CAA2BjD,GAAG6H,MAAH,CAAU,GAAV,EAAe,GAAf,CAA3B;AACH;AACJ,KA9LI;AAgMLnB,qBAhMK,+BAgMe;AAAA;;AAChB,YAAI,KAAKhF,iBAAL,IAA0B,KAAKA,iBAAL,CAAuBiC,MAArD,EAA6D;AACzD,iBAAKrD,WAAL,CAAiBmB,MAAjB,GAA0B,KAA1B;AACA,iBAAKC,iBAAL,CAAuBe,OAAvB,CAA+B,UAACkE,UAAD,EAAaZ,KAAb,EAAuB;AAClD,oBAAM+B,iBAAiB,OAAKnG,oBAAL,CAA0BoE,KAA1B,CAAvB;AACAY,2BAAWE,MAAX,GAAoBiB,eAAeV,gBAAnC;AACAT,2BAAWI,QAAX,GAAsBe,eAAeT,kBAArC;AACAV,2BAAWc,eAAX,CAA2BK,eAAeR,eAA1C;AACAX,2BAAWlF,MAAX,GAAoBqG,eAAeb,gBAAnC;AACAN,2BAAWQ,KAAX,GAAmBW,eAAeZ,eAAlC;AACAP,2BAAWvE,OAAX,GAAqB0F,eAAeN,gBAApC;AACH,aARD;AASA,iBAAK9F,iBAAL,GAAyB,EAAzB;AACA,iBAAKC,oBAAL,GAA4B,EAA5B;AACH;AACJ,KA/MI;AAiNL2E,gBAjNK,wBAiNQD,GAjNR,EAiNa;AACd,YAAI,KAAKM,UAAT,EAAqB,KAAKoB,aAAL;AACrB,aAAKpB,UAAL,GAAkBN,GAAlB;AACA,aAAKY,gBAAL,GAAwBZ,IAAI5E,MAA5B;AACA,aAAKyF,eAAL,GAAuBb,IAAIc,KAA3B;AACA,aAAKC,gBAAL,GAAwB,KAAKT,UAAL,CAAgBE,MAAxC;AACA,aAAKQ,kBAAL,GAA0B,KAAKV,UAAL,CAAgBI,QAA1C;AACA,aAAKH,kBAAL,GAA0B,KAAKQ,gBAAL,CAAsBN,qBAAtB,CAA4C,KAAKO,kBAAjD,CAA1B;AACA,aAAKC,eAAL,GAAuB,KAAKX,UAAL,CAAgBY,eAAhB,EAAvB;AACA,aAAKC,gBAAL,GAAwB,KAAKb,UAAL,CAAgBvE,OAAxC;;AAEA,aAAKuE,UAAL,CAAgBE,MAAhB,GAAyB,KAAKrF,IAA9B;AACA,aAAKmF,UAAL,CAAgBc,eAAhB,CAAgC,KAAKjH,WAAL,CAAiB+G,eAAjB,EAAhC;AACA,aAAKZ,UAAL,CAAgBI,QAAhB,GAA2B,KAAKvF,IAAL,CAAUkG,oBAAV,CAA+B,KAAKd,kBAApC,CAA3B;AACA,aAAKD,UAAL,CAAgBlF,MAAhB,GAAyB,IAAzB;AACA,aAAKkF,UAAL,CAAgBQ,KAAhB,GAAwBnH,GAAG2H,KAAH,CAASC,KAAjC;AACA,aAAKjB,UAAL,CAAgBvE,OAAhB,GAA0B,GAA1B;;AAEA,aAAK9B,WAAL,CAAiBmB,MAAjB,GAA0B,IAA1B;AACA,aAAKnB,WAAL,CAAiB8B,OAAjB,GAA2B,CAA3B;AACA,aAAK9B,WAAL,CAAiB2C,SAAjB,CAA2BjD,GAAG6H,MAAH,CAAU,GAAV,EAAe,GAAf,CAA3B;AACH,KAtOI;AAwOLE,iBAxOK,2BAwOW;AACZ,YAAI,KAAKpB,UAAT,EAAqB;AACjB,iBAAKrG,WAAL,CAAiBmB,MAAjB,GAA0B,KAA1B;AACA,iBAAKkF,UAAL,CAAgBE,MAAhB,GAAyB,KAAKO,gBAA9B;AACA,iBAAKT,UAAL,CAAgBI,QAAhB,GAA2B,KAAKM,kBAAhC;AACA,iBAAKV,UAAL,CAAgBc,eAAhB,CAAgC,KAAKH,eAArC;AACA,iBAAKX,UAAL,CAAgBlF,MAAhB,GAAyB,KAAKwF,gBAA9B;AACA,iBAAKN,UAAL,CAAgBQ,KAAhB,GAAwB,KAAKD,eAA7B;AACA,iBAAKP,UAAL,CAAgBvE,OAAhB,GAA0B,KAAKoF,gBAA/B;AACA,iBAAKb,UAAL,GAAkB,IAAlB;AACH;AACJ,KAnPI;AAqPLqB,iBArPK,gCAqP+D;AAAA,YAApDC,CAAoD,SAApDA,CAAoD;AAAA,YAAjDC,CAAiD,SAAjDA,CAAiD;AAAA,+BAA9CC,IAA8C;AAAA,YAA9CA,IAA8C,8BAAvC,uBAAuC;AAAA,YAAdC,UAAc,SAAdA,UAAc;;AAChE,YAAIC,OAAOrI,GAAG+D,IAAH,CAAQoE,OAAOD,CAAf,EAAkB,KAAKpF,YAAL,CAAkBC,eAApC,CAAX;AACA,YAAIuF,SAASD,KAAKrD,YAAL,CAAkB,UAAlB,EAA8BuD,aAA9B,CAA4CN,CAA5C,CAAb;AACA,YAAI5B,MAAM,IAAV;;AAEA,YAAI+B,UAAJ,EAAgB;AACZ/B,kBAAMrG,GAAG+D,IAAH,CAAQqE,UAAR,EAAoBE,MAApB,CAAN;AACH,SAFD,MAGK;AACDjC,kBAAMiC,MAAN;AACH;AACDjC,eAAO,KAAKC,YAAL,CAAkBD,GAAlB,CAAP;AACH,KAjQI;AAmQLzD,cAnQK,sBAmQM0B,IAnQN,EAmQY;AACb,aAAK9D,WAAL,CAAiB4B,OAAjB,GAA2BkC,QAAQA,KAAKkE,QAAb,GAAwB,GAAxB,GAA8B,CAAzD;AACA,aAAKhI,WAAL,CAAiBiB,MAAjB,GAA0B,IAA1B;AACH,KAtQI;AAwQL6B,gBAxQK,0BAwQU;AACX,aAAK9C,WAAL,CAAiBiB,MAAjB,GAA0B,KAA1B;AACH,KA1QI;AA4QLgH,eA5QK,8BA4QuE;AAAA,YAA9DC,KAA8D,SAA9DA,KAA8D;AAAA,YAAvDC,OAAuD,SAAvDA,OAAuD;AAAA,YAA9C5B,QAA8C,SAA9CA,QAA8C;AAAA,YAApC6B,KAAoC,SAApCA,KAAoC;AAAA,YAA7BC,MAA6B,SAA7BA,MAA6B;AAAA,YAArBC,iBAAqB,SAArBA,iBAAqB;;AACxE,YAAIC,YAAY,KAAKC,OAAL,CAAaN,KAAb,CAAhB;AACA,YAAIO,cAAc,KAAKD,OAAL,CAAaL,OAAb,CAAlB;AACA,aAAKtI,MAAL,CAAYmB,IAAZ,CAAiBuF,QAAjB,GAA4BA,YAAY/G,GAAGkJ,EAAH,CAAM,CAAN,EAAS,CAAT,CAAxC;AACA,aAAK7I,MAAL,CAAY8I,IAAZ,CAAiBJ,SAAjB,EAA4BE,WAA5B,EAAyCL,KAAzC,EAAgDC,MAAhD;AACA,aAAKxI,MAAL,CAAYmB,IAAZ,CAAiB4H,KAAjB,GAAyB,GAAzB;AACA,aAAK/I,MAAL,CAAYmB,IAAZ,CAAiByB,SAAjB,CAA2BjD,GAAGkD,QAAH,CAAYlD,GAAGqJ,OAAH,CAAW,GAAX,EAAgB,GAAhB,CAAZ,EAAkCrJ,GAAGqJ,OAAH,CAAW,GAAX,EAAgB,GAAhB,CAAlC,EAAwDrJ,GAAGqJ,OAAH,CAAW,GAAX,EAAgB,CAAhB,CAAxD,CAA3B;AACA,YAAMC,KAAK,KAAKjJ,MAAL,CAAYmB,IAAZ,CAAiB+H,cAAjB,CAAgC,IAAhC,CAAX;AACA,YAAID,EAAJ,EAAQ;AACJA,eAAGE,MAAH,GAAYV,oBAAoB,CAAC,CAArB,GAAyB,CAArC;AACH;AACJ,KAvRI;AAyRLW,eAzRK,yBAyRS;AACV,aAAKpJ,MAAL,CAAYqJ,IAAZ;AACH,KA3RI;AA6RLC,kBA7RK,iCA6RkC;AAAA,YAAtBC,QAAsB,SAAtBA,QAAsB;AAAA,YAAZ7C,QAAY,SAAZA,QAAY;;AACnC,aAAKlG,SAAL,CAAeY,MAAf,GAAwB,IAAxB;AACA,aAAKZ,SAAL,CAAe+E,KAAf,GAAuBgE,QAAvB;AACA,aAAK/I,SAAL,CAAekG,QAAf,GAA0BA,QAA1B;AACA,aAAKpB,iBAAL,CAAuBiE,QAAvB;AACH,KAlSI;AAoSLC,kBApSK,iCAoSqB;AAAA,YAATC,KAAS,SAATA,KAAS;;AACtB,aAAK5D,aAAL,GAAqB4D,KAArB;AACH,KAtSI;AAwSLC,kBAxSK,4BAwSY;AACb,aAAKlJ,SAAL,CAAeY,MAAf,GAAwB,KAAxB;AACA,aAAKZ,SAAL,CAAegC,cAAf;AACH,KA3SI;AA6SLmH,kBA7SK,4BA6SY;AACb,YAAI,KAAKlH,YAAL,IAAqB,KAAKA,YAAL,CAAkBC,eAAlB,CAAkCkH,IAAlC,IAA0C,gBAAnE,EAAqF;AACjF,iBAAKnH,YAAL,CAAkBC,eAAlB,CAAkCiC,YAAlC,CAA+C,kBAA/C,EAAmE/B,SAAnE,CAA6E,aAA7E,EAA4F,MAA5F;AACH;AACJ,KAjTI;AAmTLiH,gBAnTK,+BAmTkB;AAAA,YAARC,IAAQ,SAARA,IAAQ;;AACnB,aAAKtF,KAAL,CAAWuF,IAAX,CAAgBD,IAAhB;AACH,KArTI;AAuTLE,mBAvTK,kCAuTqB;AAAA,YAARF,IAAQ,SAARA,IAAQ;;AACtB,aAAKtF,KAAL,GAAa,KAAKA,KAAL,CAAWyF,MAAX,CAAkB;AAAA,mBAAMC,MAAMJ,IAAZ;AAAA,SAAlB,CAAb;AACH,KAzTI;AA2TLK,wBA3TK,kCA2TkB;AACnB,aAAK1H,YAAL,IAAqB,KAAKA,YAAL,CAAkBC,eAAlB,CAAkCJ,IAAlC,CAAuC,qBAAvC,CAArB;AACH,KA7TI;AA+TL8H,uBA/TK,sCA+TyB;AAAA,YAARxC,CAAQ,SAARA,CAAQ;AAAA,YAALC,CAAK,SAALA,CAAK;;AAC1B,YAAI,KAAKvB,UAAT,EAAqB;AACjB,iBAAKA,UAAL,CAAgBsB,CAAhB,GAAoBA,CAApB;AACA,iBAAKtB,UAAL,CAAgBuB,CAAhB,GAAoBA,CAApB;AACH;AACJ,KApUI;AAsULwC,qBAtUK,qCAsUyB;AAAA,YAAVjJ,MAAU,UAAVA,MAAU;;AAC1B,YAAI,KAAKT,OAAT,EACI,KAAKA,OAAL,CAAaS,MAAb,GAAsBA,MAAtB;AACP,KAzUI;AA2ULkJ,cA3UK,8BA2UkB;AAAA,YAAVlJ,MAAU,UAAVA,MAAU;;AACnB,YAAIA,MAAJ,EACI,KAAKqB,YAAL,CAAkB8H,SAAlB,CAA4B,IAA5B,EADJ,KAGI,KAAK9H,YAAL,CAAkBE,UAAlB,CAA6B,IAA7B;AACP,KAhVI;AAkVL6H,gBAlVK,gCAkVmB;AAAA,YAATrF,KAAS,UAATA,KAAS;;AACpB,aAAK1C,YAAL,CAAkBgI,GAAlB,CAAsBnI,IAAtB,CAA2B,YAA3B,EAAyC6C,KAAzC;AACH,KApVI;AAsVLuF,iBAtVK,iCAsVsB;AAAA,YAAX3E,OAAW,UAAXA,OAAW;;AACvB,YAAI4E,SAAShL,GAAG+D,IAAH,CAAQqC,OAAR,CAAb;AACA,YAAI4E,MAAJ,EAAY;AACRA,mBAAOhG,YAAP,CAAoBhF,GAAGiL,MAAvB,EAA+BC,YAA/B,GAA8C,IAA9C;AACH;AACJ,KA3VI;AA6VLC,kBA7VK,kCA6VuB;AAAA,YAAX/E,OAAW,UAAXA,OAAW;;AACxB,YAAI4E,SAAShL,GAAG+D,IAAH,CAAQqC,OAAR,CAAb;AACA,YAAI4E,MAAJ,EAAY;AACRA,mBAAOhG,YAAP,CAAoBhF,GAAGiL,MAAvB,EAA+BC,YAA/B,GAA8C,KAA9C;AACH;AACJ,KAlWI;AAoWLE,kBApWK,4BAoWY;AACb,aAAKrG,gBAAL,IAAyB,KAAKA,gBAAL,CAAsBsG,gBAAtB,EAAzB;AACH,KAtWI;AAwWLC,uBAxWK,iCAwWiB;AAClB,aAAKxI,YAAL,CAAkByI,WAAlB,CAA8B5I,IAA9B,CAAmC,gBAAnC,EAAqD,IAArD;AACH,KA1WI;AA4WL6I,iBA5WK,yBA4WSrB,IA5WT,EA4We;AAChB,eAAO,KAAKtF,KAAL,CAAW4G,OAAX,CAAmBtB,IAAnB,KAA4B,CAAnC;AACH,KA9WI;AAgXLuB,WAhXK,mBAgXGC,MAhXH,EAgXW;AACZ,YAAI,KAAKC,cAAL,IAAuB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB;AAAA,mBAAWH,YAAYC,MAAvB;AAAA,SAAzB,CAA3B,EAAoF;AAChF,iBAAK5F,KAAL,IAAc,CAAd;AACA,gBAAI,KAAKA,KAAL,GAAa,KAAKtF,aAAL,CAAmBwD,IAAnB,CAAwB6H,KAAxB,CAA8BnI,MAA/C,EACI,KAAKF,GAAL,GADJ,KAGI,KAAKsI,YAAL;AACP;AACD,YAAIJ,UAAU,mBAAV,IAAiC,KAAKxG,YAA1C,EAAwD;AACpD,iBAAK6G,UAAL;AACA,iBAAK7G,YAAL,GAAoB,KAApB;AACH;;AAED,YAAIwG,WAAW,oBAAf,EAAqC;AACjC,iBAAKrJ,WAAL,GAAmB,KAAnB;AACA,gBAAI,KAAK2J,uBAAT,EAAkC;AAC9B,qBAAKtB,UAAL,CAAgB,EAAElJ,QAAQ,IAAV,EAAhB;AACA,qBAAKY,eAAL,GAAuB,IAAvB;AACA,qBAAKd,QAAL,GAAgB,IAAhB;AACA,qBAAK0K,uBAAL,GAA+B,KAA/B;AACH;AACD,gBAAI,KAAKrK,iBAAL,IAA0B,KAAKE,WAAnC,EAAgD;AAC5C,qBAAKgB,YAAL,CAAkBoJ,iBAAlB;AACA,qBAAKtK,iBAAL,GAAyB,CAAzB;AACH;AACJ;;AAED,YAAI+J,WAAW,qBAAf,EAAsC;AAClC,iBAAK/J,iBAAL,IAA0B,CAA1B;AACH;;AAED,YAAI+J,WAAW,YAAf,EAA6B;AACzB,iBAAKrJ,WAAL,GAAmB,IAAnB;AACH;AACJ,KAlZI;AAoZLmB,OApZK,iBAoZC;AACF,aAAK0I,eAAL,GAAuB,KAAK1L,aAAL,CAAmBwD,IAAnB,CAAwB6H,KAAxB,CAA8B,KAAK/F,KAAnC,CAAvB;AACA,YAAI,CAAC,KAAKoG,eAAV,EAA2B;AACvBnM,eAAGoM,GAAH,CAAO,iBAAP;AACH;;AAED,eAAO,KAAKD,eAAL,CAAqBE,OAArB,IAAgC,UAAvC,EAAmD;AAC/C,iBAAKC,OAAL,CAAa,KAAKH,eAAlB;AACA,iBAAKpG,KAAL,IAAc,CAAd;AACA,gBAAI,KAAKA,KAAL,GAAa,KAAKtF,aAAL,CAAmBwD,IAAnB,CAAwB6H,KAAxB,CAA8BnI,MAA/C,EACI,KAAKwI,eAAL,GAAuB,KAAK1L,aAAL,CAAmBwD,IAAnB,CAAwB6H,KAAxB,CAA8B,KAAK/F,KAAnC,CAAvB,CADJ,KAGI;AACP;AACD,YAAI,KAAKA,KAAL,IAAc,KAAKtF,aAAL,CAAmBwD,IAAnB,CAAwB6H,KAAxB,CAA8BnI,MAAhD,EAAwD;AACpD,iBAAKoI,YAAL;AACH,SAFD,MAGK;AACD,iBAAKH,cAAL,GAAsB,KAAKO,eAAL,CAAqB7H,IAArB,CAA0B,SAA1B,CAAtB;AACA,iBAAKpD,OAAL,IAAgBlB,GAAGuG,IAAH,CAAQ,YAAR,EAAsB,YAAtB,EAAoC,KAAKqF,cAAzC,CAAhB;AACH;AACJ,KAzaI;AA2aLU,WA3aK,mBA2aGC,QA3aH,EA2aa;AACd,YAAI,KAAKA,SAASF,OAAd,KAA0B,OAAQ,KAAKE,SAASF,OAAd,CAAR,KAAoC,UAAlE,EAA8E;AAC1E,iBAAKnL,OAAL,IAAgBlB,GAAGuG,IAAH,CAAQgG,SAASF,OAAjB,EAA0B3H,KAAK8H,SAAL,CAAeD,SAASjI,IAAxB,EAA8B,IAA9B,EAAoC,IAApC,CAA1B,CAAhB;AACA,iBAAKiI,SAASF,OAAd,EAAuBE,SAASjI,IAAhC;AACH,SAHD,MAIK;AACDtE,eAAGyM,KAAH,CAAS,uBAAuBF,SAASF,OAAzC;AACH;AACJ,KAnbI;AAqbLK,aArbK,uBAqbO;AACR,eAAO,KAAKpL,MAAL,IAAe,KAAK2E,OAA3B;AACH,KAvbI;AAybL0G,mBAzbK,6BAyba;AACd,aAAKjB,OAAL,CAAa,gBAAb;AACH,KA3bI;AA6bLkB,oBA7bK,8BA6bc;AACf,YAAI,KAAKrL,QAAT,EAAmB;AACnB,aAAKA,QAAL,GAAgB,IAAhB;AACA,aAAK0K,uBAAL,GAA+B,KAA/B;AACH,KAjcI;AAmcLnH,aAncK,uBAmcO;AACR,aAAK2E,WAAL;AACA,aAAKM,cAAL;AACA,aAAKhC,aAAL;AACA,aAAKzE,YAAL;AACA,aAAKoD,iBAAL;AACA,aAAK3F,UAAL,CAAgBU,MAAhB,GAAyB,KAAzB;AACA,aAAKnB,WAAL,CAAiBmB,MAAjB,GAA0B,KAA1B;AACH,KA3cI;AA6cLuH,WA7cK,mBA6cG6D,EA7cH,EA6cO;AACR,YAAI,KAAK/L,YAAL,IAAqB,KAAKA,YAAL,CAAkBmD,IAAvC,IAA+C,KAAKnD,YAAL,CAAkBmD,IAAlB,CAAuB4I,EAAvB,CAAnD,EAA+E;AAC3E,mBAAO,KAAK/L,YAAL,CAAkBmD,IAAlB,CAAuB4I,EAAvB,CAAP;AACH;AACD,eAAOA,EAAP;AACH,KAldI;AAodLC,kBApdK,0BAodUC,QApdV,EAodoB;AACrB,aAAKjK,YAAL,GAAoBiK,QAApB;AACH,KAtdI;AAwdLvJ,gBAxdK,wBAwdQwJ,GAxdR,EAwda;AACd,YAAI,KAAKxL,IAAL,CAAUyL,WAAd,EAA2B;AACvB,gBAAID,GAAJ,EAAS,KAAKxL,IAAL,CAAUyL,WAAV,CAAsBC,YAAtB;AACZ;AACD,aAAKnH,KAAL,GAAa,KAAKtF,aAAL,CAAmBwD,IAAnB,CAAwB6H,KAAxB,CAA8BnI,MAA3C;AACA,aAAKsC,OAAL,GAAe,KAAf;;AAEA,YAAI,KAAKuF,aAAL,CAAmB,eAAnB,CAAJ,EAAyC;AACrC,iBAAKxB,cAAL;AACH;;AAED,YAAI,KAAK1H,WAAT,EAAsB;AAClB,iBAAK2J,uBAAL,GAA+B,IAA/B;AACH,SAFD,MAGK;AACD,iBAAK5J,eAAL,GAAuB,IAAvB;AACA,iBAAKd,QAAL,GAAgB,IAAhB;AACA,iBAAKoJ,UAAL,CAAgB,EAAElJ,QAAQ,IAAV,EAAhB;AACH;;AAED,YAAI,KAAKqB,YAAL,IAAqB,KAAKA,YAAL,CAAkBtB,IAA3C,EAAiD;AAC7C,iBAAKsB,YAAL,CAAkBtB,IAAlB,CAAuBmB,IAAvB,CAA4B,uBAA5B;AACA,iBAAKG,YAAL,CAAkBqK,gBAAlB;AACH;AACD,aAAK3L,IAAL,CAAUqB,cAAV;AACA,aAAKkJ,YAAL;AACH,KAlfI;AAofLA,gBApfK,0BAofU;AACX,aAAKjH,SAAL;AACA,aAAK8G,cAAL,GAAsB,EAAtB;AACA,aAAK3F,OAAL,GAAe,KAAf;AACA,aAAKzD,WAAL,CAAiBC,OAAjB,CAAyB,cAAM;AAC3BC,eAAGlB,IAAH,CAAQmB,IAAR,CAAa,iBAAb,EAAgC,IAAhC;AACH,SAFD;AAGA,YAAI,KAAKN,eAAT,EAA0B,KAAKuK,gBAAL;AAC1B,aAAK9J,YAAL,CAAkBtB,IAAlB,CAAuBmB,IAAvB,CAA4B,eAA5B;AACA,aAAKG,YAAL,CAAkBtB,IAAlB,CAAuBmB,IAAvB,CAA4B,uBAA5B;AACA,aAAKkC,KAAL,GAAa,EAAb;AACA,aAAK2F,oBAAL;AACH,KAhgBI;AAkgBL4C,wBAlgBK,kCAkgBkB;AAAA;;AACnB,YAAMC,iBAAiB,KAAKvK,YAAL,IAAqB,KAAKA,YAAL,CAAkBtB,IAA9D;AACA,aAAKR,OAAL,CAAaS,MAAb,GAAsB,KAAtB;AACA,aAAKmB,UAAL;AACA,aAAKpB,IAAL,CAAUqB,cAAV;AACA,aAAK8H,UAAL,CAAgB,EAAElJ,QAAQ,KAAV,EAAhB;AACA,aAAKe,WAAL,CAAiBC,OAAjB,CAAyB,cAAM;AAC3BC,eAAGlB,IAAH,CAAQmB,IAAR,CAAa,iBAAb,EAAgC,KAAhC;AACH,SAFD;AAGA,YAAI0K,cAAJ,EAAoB;AAChB,iBAAKvK,YAAL,CAAkBtB,IAAlB,CAAuBmB,IAAvB,CAA4B,wBAA5B;AACH;AACD,aAAKnB,IAAL,CAAUyB,SAAV,CAAoBjD,GAAGkD,QAAH,CAAYlD,GAAGmD,SAAH,CAAa,KAAKlC,cAAlB,CAAZ,EAA+CjB,GAAGoD,QAAH,CAAY,YAAM;AACjF,mBAAKuH,UAAL,CAAgB,EAAElJ,QAAQ,IAAV,EAAhB;AACA,mBAAKe,WAAL,CAAiBC,OAAjB,CAAyB,cAAM;AAC3BC,mBAAGlB,IAAH,CAAQmB,IAAR,CAAa,iBAAb,EAAgC,IAAhC;AACH,aAFD;AAGA,gBAAI0K,cAAJ,EAAoB;AAChB,uBAAKvK,YAAL,CAAkBtB,IAAlB,CAAuBmB,IAAvB,CAA4B,uBAA5B;AACH;AACD,mBAAKW,YAAL;AACA,mBAAK9B,IAAL,CAAUC,MAAV,GAAmB,KAAnB;AACH,SAVkE,CAA/C,CAApB;AAWH,KAzhBI;AA2hBL6L,cA3hBK,wBA2hBQ;AACT,eAAO,CAAC,KAAKhM,MAAN,IAAiB,KAAKC,QAA7B;AACH,KA7hBI;AA+hBLgM,iBA/hBK,yBA+hBSjJ,IA/hBT,EA+hBe;AAChBtE,WAAGoM,GAAH,CAAO9H,IAAP;AACA,aAAKS,gBAAL,GAAwB,KAAK/D,OAAL,CAAagE,YAAb,CAA0B,SAA1B,CAAxB;AACA,YAAIV,KAAKkJ,QAAT,EAAmB;AACf,gBAAIlJ,KAAKmJ,gBAAL,IAAyBnJ,KAAKtD,OAAlC,EAA2C;AACvC,oBAAIsD,KAAKoJ,WAAL,IAAoBpJ,KAAKoJ,WAAL,CAAiB/J,MAAzC,EAAiD;AAAA,wBACrC6J,QADqC,GACXlJ,IADW,CACrCkJ,QADqC;AAAA,wBAC3BE,WAD2B,GACXpJ,IADW,CAC3BoJ,WAD2B;;AAE7C,wBAAMC,iBAAiBrJ,KAAKoJ,WAAL,CAAiB/J,MAAjB,GAA0B,CAAjD;AACA,yBAAK6J,QAAL,GAAgBG,iBAAiBrJ,KAAKoJ,WAAtB,GAAoC,KAAKE,gBAAL,CAAsBJ,QAAtB,EAAgCE,WAAhC,CAApD;AACA,yBAAK1B,UAAL;AACH;AACD,qBAAKwB,QAAL,GAAgBlJ,KAAKkJ,QAArB;AACA,qBAAKrI,YAAL,GAAoB,IAApB;AACH,aATD,MASO;AACH,qBAAKqI,QAAL,GAAgBlJ,KAAKkJ,QAArB;AACA,qBAAKxB,UAAL;AACH;AACJ;AACD,YAAI1H,KAAKuJ,kBAAT,EAA6B;AACzB,iBAAKxL,eAAL,GAAuB,IAAvB;AACA,gBAAI,CAAC,KAAK4D,OAAV,EACI,KAAK2G,gBAAL;AACP;AACJ,KAtjBI;AAwjBLgB,oBAxjBK,4BAwjBYJ,QAxjBZ,EAwjBsBE,WAxjBtB,EAwjBmC;AACpC,YAAMI,cAAcJ,YAAY,CAAZ,EAAeK,KAAf,CAAqB,GAArB,EAA0B,CAA1B,CAApB;AACA,eAAOP,SAASQ,GAAT,CAAa;AAAA,mBAAQC,KAAKC,QAAL,CAAcJ,WAAd,IAA6BJ,YAAY,CAAZ,CAA7B,GAA8CO,IAAtD;AAAA,SAAb,CAAP;AACH,KA3jBI;AA6jBLjC,cA7jBK,wBA6jBQ;AACT,aAAK,IAAImC,IAAI,CAAb,EAAgBA,IAAI,KAAKX,QAAL,CAAc7J,MAAlC,EAA0CwK,GAA1C,EAA+C;AAC3C,gBAAIC,cAAc,KAAKZ,QAAL,CAAcW,CAAd,EAAiBJ,KAAjB,CAAuB,GAAvB,CAAlB;AACA,gBAAIM,gBAAgBC,OAAOF,YAAY,CAAZ,CAAP,CAApB;AACA,gBAAIN,cAAcM,YAAY,CAAZ,EAAeG,OAAf,CAAuB,KAAK/M,IAAL,CAAUO,MAAV,CAAiByM,eAAxC,EAAyD,EAAzD,CAAlB;AACA,iBAAKzJ,gBAAL,CAAsBW,qBAAtB,CAA4CoI,WAA5C,EAAyDO,aAAzD;AACH;AACJ,KApkBI;AAskBLI,YAtkBK,sBAskBM;AACP,aAAKzN,OAAL,CAAaS,MAAb,GAAsB,IAAtB;AACH,KAxkBI;AA0kBLiN,iBA1kBK,2BA0kBuB;AAAA,YAAdC,IAAc,uEAAP,KAAO;;AACxB,aAAK5N,UAAL,CAAgBiE,YAAhB,CAA6BhF,GAAGiL,MAAhC,EAAwCC,YAAxC,GAAuDyD,IAAvD;AACH,KA5kBI;AA8kBLC,kBA9kBK,4BA8kB4B;AAAA,YAAlBC,QAAkB,uEAAP,KAAO;;AAC7B,aAAK9N,UAAL,CAAgBU,MAAhB,GAAyBoN,QAAzB;AACH;AAhlBI,CAAT","file":"TutorialMgr.js","sourceRoot":"../../../../../../assets/cc-common/cc-slotbase-v2/Tutorial","sourcesContent":["const lodash = require('lodash');\nconst XORCipher = require(\"XOCypher\");\nconst INDICATOR_ANGEL = {\n    TOP: 180,\n    LEFT: -90,\n    RIGHT: 90\n};\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        dialog: require(\"TutorialDialog\"),\n        gradientBot: cc.Node,\n        gradientTop: cc.Node,\n        tutorialSteps: {\n            type: cc.Asset,\n            default: null\n        },\n        indicator: cc.Node,\n        tutorialText: {\n            type: cc.Asset,\n            default: null\n        },\n        buttonSkip: cc.Node,\n        jackpot: cc.Node,\n        timeDelayStart: 0,\n        isDebug: false,\n        tutorialDataConfigs: {\n            default: [],\n            type: require('SlotCustomDataType').TutorialDataConfig\n        },\n    },\n\n    onLoad() {\n        if (typeof (this.inited) === 'undefined')\n            this.inited = false;\n        this.finished = true;\n        if (!this.inited) {\n            this.node.active = false;\n        }\n\n        this.listLockedObjects = [];\n        this.listLockedObjectData = [];\n        this.trialSessionCount = 0;\n    },\n\n    start() {\n        this.maxDemoTime = this.node.config.MAX_PLAY_DEMO || 10;\n    },\n\n    startTutorial() {\n        if (this.waitForStart) return;\n\n        if (!this.inited) {\n            this.init();\n        }\n        this.node.active = true;\n        this.node.opacity = 255;\n        this.endTutorialData = false;\n        this._isSpinning = false;\n        this.initJackpot();\n        this.slotButtons.forEach(sb => {\n            sb.node.emit(\"ENABLE_SPIN_KEY\", false);\n        });\n        this._lockTouch();\n        this.waitForStart = true;\n        this.node.stopAllActions();\n        if (this.mainDirector && this.mainDirector.node) {\n            this.mainDirector.node.emit('DISABLE_BUTTON_CONTROL');\n            this.mainDirector.currentGameMode.emit('SPIN_DISABLE');\n            this.mainDirector.disableBet(true);\n        }\n        this.node.runAction(cc.sequence(cc.delayTime(this.timeDelayStart), cc.callFunc(() => {\n            this.finished = false;\n            this.reset();\n            this._unlockTouch();\n            if (this.forceSkipTutorial) {\n                this.skipTutorial();\n            } else {\n                this.run();\n            }\n            if (this.mainDirector && this.mainDirector.node) {\n                this.mainDirector.currentGameMode.emit('SPIN_ENABLE');\n            }\n            this.waitForStart = false;\n        })));\n    },\n\n    init() {\n        if (this.node.config.IS_SUPPORT_MULTI_CURRENCY && this.tutorialDataConfigs.length) {\n            const currencyCode = this.mainDirector.currencyCode.toUpperCase();\n            const dataConfig = this.tutorialDataConfigs.find(config => config.currencyCode.toUpperCase() == currencyCode) || {};\n            this.tutorialData = dataConfig.tutorialData && dataConfig.tutorialData.json;\n            this.tutorialSteps = dataConfig.tutorialSteps || this.tutorialSteps;\n            this.tutorialText = dataConfig.tutorialText || this.tutorialText;\n            const tutorialData = lodash.get(this.mainDirector, 'gameStateManager._spinTutorialData');\n            if (tutorialData && this.tutorialData) {\n                this.mainDirector.gameStateManager._spinTutorialData = this.tutorialData;\n            } else {\n                this.forceSkipTutorial = true;\n            }\n        }\n        if (this.tutorialData) {\n            const { data: encryptData, isEncrypted } = this.tutorialData;\n            if (isEncrypted) {\n                const decryptData = XORCipher.decode_tutorial(encryptData);\n                this.tutorialData = JSON.parse(decryptData);\n                this.mainDirector.gameStateManager._spinTutorialData = this.tutorialData;\n            }\n        }\n\n        this.canvas = cc.find(\"Canvas\");\n        this.inited = true;\n        this.flags = [];\n        this.unlockAll();\n        this.jackpotComponent = this.jackpot.getComponent(\"Jackpot\");\n        this.slotButtons = this.mainDirector.getComponentsInChildren(\"SlotButtonBase\");\n        this.jackpotComponent.initData();\n        this.jackpotReset = false;\n    },\n\n    initJackpot() {\n        this.jackpot.active = true;\n        this.jackpot.opacity = 255;\n        let jackpots = Object.keys(this.node.config.DEFAULT_TRIAL_JACKPOT);\n        jackpots.forEach(jp => {\n            let value = this.node.config.DEFAULT_TRIAL_JACKPOT[jp];\n            this.jackpotComponent.callbackJackpotUpdate(jp, value);\n        });\n    },\n\n    playIndicatorAnim(angle = 0) {\n        this.indicator.stopAllActions();\n        switch (angle) {\n            case INDICATOR_ANGEL.RIGHT:\n                this.indicator.runAction(cc.repeatForever(cc.sequence(cc.moveBy(0.5, 50, 0), cc.moveBy(0.5, -50, 0))));\n                break;\n            case INDICATOR_ANGEL.LEFT:\n                this.indicator.runAction(cc.repeatForever(cc.sequence(cc.moveBy(0.5, -50, 0), cc.moveBy(0.5, 50, 0))));\n                break;\n            case INDICATOR_ANGEL.TOP:\n                this.indicator.runAction(cc.repeatForever(cc.sequence(cc.moveBy(0.5, 0, 50), cc.moveBy(0.5, 0, -50))));\n                break;\n            default:\n                this.indicator.runAction(cc.repeatForever(cc.sequence(cc.moveBy(0.5, 0, -50), cc.moveBy(0.5, 0, 50))));\n                break;\n        }\n    },\n\n    reset() {\n        this.index = 0;\n        this.spinIndex = 0;\n        this.showing = true;\n        this.pauseGameMode = false;\n        this.buttonSkip.active = true;\n        this.flags = [];\n    },\n\n    _lockAtButton({ objPath }) {\n        let obj = cc.find(objPath);\n        if (obj) {\n            this.doLockObject(obj);\n        }\n        else {\n            cc.warn(\"TutorialMgr cant find object with path \" + objPath);\n        }\n    },\n\n    _lockAtObjects({ listPath }) {\n        if (this.listLockedObjects && this.listLockedObjects.length) {\n            this._unlockAllObjects();\n        }\n        if (listPath && listPath.length) {\n            listPath.forEach(objPath => {\n                let lockObject = cc.find(objPath);\n                const lockObjectPosition = lockObject.parent.convertToWorldSpaceAR(lockObject.position);\n                this.listLockedObjects.unshift(lockObject);\n                this.listLockedObjectData.unshift({\n                    lockObjectActive: lockObject.active,\n                    lockObjectColor: lockObject.color,\n                    lockObjectParent: lockObject.parent,\n                    lockObjectLocalPos: lockObject.position,\n                    lockObjectPosition,\n                    lockObjectIndex: lockObject.getSiblingIndex(),\n                    lockObjetOpacity: lockObject.opacity,\n                });\n                lockObject.parent = this.node;\n                lockObject.setSiblingIndex(this.gradientTop.getSiblingIndex());\n                lockObject.position = this.node.convertToNodeSpaceAR(lockObjectPosition);\n                lockObject.active = true;\n                lockObject.color = cc.Color.WHITE;\n                lockObject.opacity = 255;\n            });\n            this.gradientBot.active = true;\n            this.gradientBot.opacity = 0;\n            this.gradientBot.runAction(cc.fadeTo(0.1, 160));\n        }\n    },\n\n    _unlockAllObjects() {\n        if (this.listLockedObjects && this.listLockedObjects.length) {\n            this.gradientBot.active = false;\n            this.listLockedObjects.forEach((lockObject, index) => {\n                const lockObjectData = this.listLockedObjectData[index];\n                lockObject.parent = lockObjectData.lockObjectParent;\n                lockObject.position = lockObjectData.lockObjectLocalPos;\n                lockObject.setSiblingIndex(lockObjectData.lockObjectIndex);\n                lockObject.active = lockObjectData.lockObjectActive;\n                lockObject.color = lockObjectData.lockObjectColor;\n                lockObject.opacity = lockObjectData.lockObjetOpacity;\n            });\n            this.listLockedObjects = [];\n            this.listLockedObjectData = [];\n        }\n    },\n\n    doLockObject(obj) {\n        if (this.lockObject) this._unlockButton();\n        this.lockObject = obj;\n        this.lockObjectActive = obj.active;\n        this.lockObjectColor = obj.color;\n        this.lockObjectParent = this.lockObject.parent;\n        this.lockObjectLocalPos = this.lockObject.position;\n        this.lockObjectPosition = this.lockObjectParent.convertToWorldSpaceAR(this.lockObjectLocalPos);\n        this.lockObjectIndex = this.lockObject.getSiblingIndex();\n        this.lockObjetOpacity = this.lockObject.opacity;\n\n        this.lockObject.parent = this.node;\n        this.lockObject.setSiblingIndex(this.gradientTop.getSiblingIndex());\n        this.lockObject.position = this.node.convertToNodeSpaceAR(this.lockObjectPosition);\n        this.lockObject.active = true;\n        this.lockObject.color = cc.Color.WHITE;\n        this.lockObject.opacity = 255;\n\n        this.gradientBot.active = true;\n        this.gradientBot.opacity = 0;\n        this.gradientBot.runAction(cc.fadeTo(0.1, 160));\n    },\n\n    _unlockButton() {\n        if (this.lockObject) {\n            this.gradientBot.active = false;\n            this.lockObject.parent = this.lockObjectParent;\n            this.lockObject.position = this.lockObjectLocalPos;\n            this.lockObject.setSiblingIndex(this.lockObjectIndex);\n            this.lockObject.active = this.lockObjectActive;\n            this.lockObject.color = this.lockObjectColor;\n            this.lockObject.opacity = this.lockObjetOpacity;\n            this.lockObject = null;\n        }\n    },\n\n    _lockAtSymbol({ x, y, path = \"SlotTable/Table/Reel_\", extendPath }) {\n        let reel = cc.find(path + y, this.mainDirector.currentGameMode);\n        let symbol = reel.getComponent(\"SlotReel\").getShowSymbol(x);\n        let obj = null;\n\n        if (extendPath) {\n            obj = cc.find(extendPath, symbol);\n        }\n        else {\n            obj = symbol;\n        }\n        obj && this.doLockObject(obj);\n    },\n\n    _lockTouch(data) {\n        this.gradientTop.opacity = data && data.gradient ? 180 : 0;\n        this.gradientTop.active = true;\n    },\n\n    _unlockTouch() {\n        this.gradientTop.active = false;\n    },\n\n    _showDialog({ title, content, position, arrow, arrow1, backgroundReverse }) {\n        let titleText = this.getText(title);\n        let contentText = this.getText(content);\n        this.dialog.node.position = position || cc.v2(0, 0);\n        this.dialog.show(titleText, contentText, arrow, arrow1);\n        this.dialog.node.scale = 0.1;\n        this.dialog.node.runAction(cc.sequence(cc.scaleTo(0.2, 1.2), cc.scaleTo(0.1, 0.9), cc.scaleTo(0.1, 1)));\n        const bg = this.dialog.node.getChildByName('Bg');\n        if (bg) {\n            bg.scaleY = backgroundReverse ? -1 : 1;\n        }\n    },\n\n    _hideDialog() {\n        this.dialog.hide();\n    },\n\n    _showIndicator({ rotation, position }) {\n        this.indicator.active = true;\n        this.indicator.angle = rotation;\n        this.indicator.position = position;\n        this.playIndicatorAnim(rotation);\n    },\n\n    _pauseGameMode({ pause }) {\n        this.pauseGameMode = pause;\n    },\n\n    _hideIndicator() {\n        this.indicator.active = false;\n        this.indicator.stopAllActions();\n    },\n\n    _startFreespin() {\n        if (this.mainDirector && this.mainDirector.currentGameMode.name == \"FreeGamePrefab\") {\n            this.mainDirector.currentGameMode.getComponent(\"SlotGameDirector\").runAction('SpinByTimes', 999999);\n        }\n    },\n\n    _addBoolFlag({ flag }) {\n        this.flags.push(flag);\n    },\n\n    _removeBoolFlag({ flag }) {\n        this.flags = this.flags.filter(it => it != flag);\n    },\n\n    _resumeCurrentScript() {\n        this.mainDirector && this.mainDirector.currentGameMode.emit('RUN_CONTINUE_SCRIPT');\n    },\n\n    _setLockedButtonPos({ x, y }) {\n        if (this.lockObject) {\n            this.lockObject.x = x;\n            this.lockObject.y = y;\n        }\n    },\n\n    _setJackpotActive({ active }) {\n        if (this.jackpot)\n            this.jackpot.active = active;\n    },\n\n    _activeBet({ active }) {\n        if (active)\n            this.mainDirector.enableBet(true);\n        else\n            this.mainDirector.disableBet(true);\n    },\n\n    _setBetValue({ value }) {\n        this.mainDirector.bet.emit(\"UPDATE_BET\", value);\n    },\n\n    _enableButton({ objPath }) {\n        let button = cc.find(objPath);\n        if (button) {\n            button.getComponent(cc.Button).interactable = true;\n        }\n    },\n\n    _disableButton({ objPath }) {\n        let button = cc.find(objPath);\n        if (button) {\n            button.getComponent(cc.Button).interactable = false;\n        }\n    },\n\n    _updateJackpot() {\n        this.jackpotComponent && this.jackpotComponent.renderJackpotBet();\n    },\n\n    _enableTrialButtons() {\n        this.mainDirector.trialButton.emit(\"ENABLE_BUTTONS\", true);\n    },\n\n    isContainFlag(flag) {\n        return this.flags.indexOf(flag) >= 0;\n    },\n\n    trigger(action) {\n        if (this.waitingTrigger && this.waitingTrigger.some(trigger => trigger === action)) {\n            this.index += 1;\n            if (this.index < this.tutorialSteps.json.Steps.length)\n                this.run();\n            else\n                this.hideTutorial();\n        }\n        if (action == \"ON_CUTSCENE_CLOSE\" && this.jackpotReset) {\n            this.runJackpot();\n            this.jackpotReset = false;\n        }\n\n        if (action === \"GAME_RESET_SESSION\") {\n            this._isSpinning = false;\n            if (this.doActionAfterFinishSpin) {\n                this._activeBet({ active: true });\n                this.endTutorialData = true;\n                this.finished = true;\n                this.doActionAfterFinishSpin = false;\n            }\n            if (this.trialSessionCount >= this.maxDemoTime) {\n                this.mainDirector.showPopupRedirect();\n                this.trialSessionCount = 0;\n            }\n        }\n\n        if (action === 'NORMAL_GAME_RESTART') {\n            this.trialSessionCount += 1;\n        }\n\n        if (action === \"SPIN_CLICK\") {\n            this._isSpinning = true;\n        }\n    },\n\n    run() {\n        this.currentStepData = this.tutorialSteps.json.Steps[this.index];\n        if (!this.currentStepData) {\n            cc.log(\"something wrong\");\n        }\n\n        while (this.currentStepData.command != \"_waitFor\") {\n            this.resolve(this.currentStepData);\n            this.index += 1;\n            if (this.index < this.tutorialSteps.json.Steps.length)\n                this.currentStepData = this.tutorialSteps.json.Steps[this.index];\n            else\n                break;\n        }\n        if (this.index >= this.tutorialSteps.json.Steps.length) {\n            this.hideTutorial();\n        }\n        else {\n            this.waitingTrigger = this.currentStepData.data[\"trigger\"];\n            this.isDebug && cc.warn(\"%c waiting\", \"color:red;\", this.waitingTrigger);\n        }\n    },\n\n    resolve(stepData) {\n        if (this[stepData.command] && typeof (this[stepData.command]) === \"function\") {\n            this.isDebug && cc.warn(stepData.command, JSON.stringify(stepData.data, null, \"\\t\"));\n            this[stepData.command](stepData.data);\n        }\n        else {\n            cc.error(\"Cant find command \" + stepData.command);\n        }\n    },\n\n    isShowing() {\n        return this.inited && this.showing;\n    },\n\n    onTutorialClick() {\n        this.trigger(\"TUTORIAL_CLICK\");\n    },\n\n    onTutorialFinish() {\n        if (this.finished) return;\n        this.finished = true;\n        this.doActionAfterFinishSpin = false;\n    },\n\n    unlockAll() {\n        this._hideDialog();\n        this._hideIndicator();\n        this._unlockButton();\n        this._unlockTouch();\n        this._unlockAllObjects();\n        this.buttonSkip.active = false;\n        this.gradientBot.active = false;\n    },\n\n    getText(id) {\n        if (this.tutorialText && this.tutorialText.json && this.tutorialText.json[id]) {\n            return this.tutorialText.json[id];\n        }\n        return id;\n    },\n\n    setMainGameMgr(director) {\n        this.mainDirector = director;\n    },\n\n    skipTutorial(evt) {\n        if (this.node.soundPlayer) {\n            if (evt) this.node.soundPlayer.playSFXClick();\n        }\n        this.index = this.tutorialSteps.json.Steps.length;\n        this.showing = false;\n\n        if (this.isContainFlag(\"pauseFreeGame\")) {\n            this._startFreespin();\n        }\n\n        if (this._isSpinning) {\n            this.doActionAfterFinishSpin = true;\n        }\n        else {\n            this.endTutorialData = true;\n            this.finished = true;\n            this._activeBet({ active: true });\n        }\n\n        if (this.mainDirector && this.mainDirector.node) {\n            this.mainDirector.node.emit('ENABLE_BUTTON_CONTROL');\n            this.mainDirector.skipTutorialMode();\n        }\n        this.node.stopAllActions();\n        this.hideTutorial();\n    },\n\n    hideTutorial() {\n        this.unlockAll();\n        this.waitingTrigger = [];\n        this.showing = false;\n        this.slotButtons.forEach(sb => {\n            sb.node.emit(\"ENABLE_SPIN_KEY\", true);\n        });\n        if (this.endTutorialData) this.onTutorialFinish();\n        this.mainDirector.node.emit('HIDE_TUTORIAL');\n        this.mainDirector.node.emit('ENABLE_BUTTON_CONTROL');\n        this.flags = [];\n        this._resumeCurrentScript();\n    },\n\n    playAnimSwitchToReal() {\n        const havingDirector = this.mainDirector && this.mainDirector.node;\n        this.jackpot.active = false;\n        this._lockTouch();\n        this.node.stopAllActions();\n        this._activeBet({ active: false });\n        this.slotButtons.forEach(sb => {\n            sb.node.emit(\"ENABLE_SPIN_KEY\", false);\n        });\n        if (havingDirector) {\n            this.mainDirector.node.emit('DISABLE_BUTTON_CONTROL');\n        }\n        this.node.runAction(cc.sequence(cc.delayTime(this.timeDelayStart), cc.callFunc(() => {\n            this._activeBet({ active: true });\n            this.slotButtons.forEach(sb => {\n                sb.node.emit(\"ENABLE_SPIN_KEY\", true);\n            });\n            if (havingDirector) {\n                this.mainDirector.node.emit('ENABLE_BUTTON_CONTROL');\n            }\n            this._unlockTouch();\n            this.node.active = false;\n        })));\n    },\n\n    isFinished() {\n        return !this.inited || (this.finished);\n    },\n\n    onStateUpdate(data) {\n        cc.log(data);\n        this.jackpotComponent = this.jackpot.getComponent(\"Jackpot\");\n        if (data.trialJpl) {\n            if (data.winJackpotAmount || data.jackpot) {\n                if (data.trialJplWin && data.trialJplWin.length) {\n                    const { trialJpl, trialJplWin } = data;\n                    const isTutorialData = data.trialJplWin.length > 1;\n                    this.trialJpl = isTutorialData ? data.trialJplWin : this.getLatestJackpot(trialJpl, trialJplWin);\n                    this.runJackpot();\n                }\n                this.trialJpl = data.trialJpl;\n                this.jackpotReset = true;\n            } else {\n                this.trialJpl = data.trialJpl;\n                this.runJackpot();\n            }\n        }\n        if (data.isFinishedTutorial) {\n            this.endTutorialData = true;\n            if (!this.showing)\n                this.onTutorialFinish();\n        }\n    },\n\n    getLatestJackpot(trialJpl, trialJplWin) {\n        const jackpotName = trialJplWin[0].split(';')[0];\n        return trialJpl.map(item => item.includes(jackpotName) ? trialJplWin[0] : item);\n    },\n\n    runJackpot() {\n        for (let i = 0; i < this.trialJpl.length; i++) {\n            let jackpotData = this.trialJpl[i].split(';');\n            let jackpotAmount = Number(jackpotData[1]);\n            let jackpotName = jackpotData[0].replace(this.node.config.JP_PREFIX_EVENT, \"\");\n            this.jackpotComponent.callbackJackpotUpdate(jackpotName, jackpotAmount);\n        }\n    },\n\n    onEnable() {\n        this.jackpot.active = true;\n    },\n\n    enableSkipBtn(isOn = false) {\n        this.buttonSkip.getComponent(cc.Button).interactable = isOn;\n    },\n\n    displaySkipBtn(isActive = false) {\n        this.buttonSkip.active = isActive;\n    },\n});\n"]}