{"version":3,"sources":["../../../../../../assets/cc-common/cc-slotbase-v2/slotGame/assets/cc-common/cc-slotbase-v2/slotGame/SlotGameWriter.js"],"names":["require","findKeyByValue","floatUtils","cc","Class","extends","Component","onLoad","node","writer","makeScriptResume","gSlotDataStore","playSession","normalGameTableFormat","bonusGameMatrix","normalGameMatrix","normalGamePayLines","bonusGameRemain","freeGameRemain","freeGameMatrix","winAmount","betId","freeGameTableFormat","currentBonusCredits","isFinished","freeSpinOption","extend","fsor","normalSpinMatrix","convertSlotMatrix","normalPayLines","convertPayLine","steps","slotBetDataStore","data","listBet","String","split","betIndex","betValue","isBonusGameInNormal","isBonusGameInFree","isFreeGame","promotion","promotionRemain","promotionTotal","listScript","push","command","matrix","payLines","updatedWinAmount","time","name","freeSpinMatrix","length","makeScriptUpdateWalletData","wallet","currentWallet","isEqual","updateWallet","makeScriptGameStart","makeScriptSwitchMode","makeScriptSpinClick","currentBetData","currentExtraBetData","extraSteps","extraBetIndex","spinTimes","isAutoSpin","promotionBetId","availableSpinTimes","totalBetAmount","_getTotalBetAmount","canISpin","calculateWalletAfterClickSpin","mainDirector","trialMode","_canSpinTrial","updateWalletAfterClickSpin","makeScriptResultReceive","lastEvent","jpInfo","makeScriptShowResults","type","payLineJackPot","bonusGame","freeGame","winAmountPlaySession","winJackpotAmount","isSessionEnded","isBigwin","isJackpotWin","modeTurbo","isFastResult","content","makeScriptGameEnd","makeScriptGameFinish","makeScriptSetUpBet","value","scriptUpdateWinAmount","makeScriptGameRestart","makeScriptSpinByTimes","times","makeScriptDisableAutoSpin","isPlayDemo","trialWallet","totalBet","displayingBetData"],"mappings":"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","file":"SlotGameWriter.js","sourceRoot":"../../../../../../assets/cc-common/cc-slotbase-v2/slotGame","sourcesContent":["\n\nconst { findKeyByValue, floatUtils } = require('utils');\ncc.Class({\n    extends: cc.Component,\n    onLoad() {\n        this.node.writer = this;\n    },\n    makeScriptResume() {\n        const {\n            normalGameTableFormat, bonusGameMatrix, normalGameMatrix, normalGamePayLines, bonusGameRemain, freeGameRemain,\n            freeGameMatrix, winAmount, betId, freeGameTableFormat, currentBonusCredits, isFinished\n        } = this.node.gSlotDataStore.playSession;\n        const {fsor: freeSpinOption} = this.node.gSlotDataStore.playSession.extend;\n        const normalSpinMatrix = this.node.gSlotDataStore.convertSlotMatrix(normalGameMatrix, normalGameTableFormat);\n        const normalPayLines = this.node.gSlotDataStore.convertPayLine(normalGamePayLines);\n        const {steps} = this.node.gSlotDataStore.slotBetDataStore.data;\n        const listBet = String(betId).split('');\n        const betIndex = listBet[0];\n        const betValue = steps[betIndex];\n        const isBonusGameInNormal = (bonusGameRemain && bonusGameRemain > 0 && !freeGameMatrix);\n        const isBonusGameInFree = (bonusGameRemain && bonusGameRemain > 0 && !isBonusGameInNormal);\n        const isFreeGame = ((freeGameRemain && freeGameRemain > 0) || isBonusGameInFree);\n        const { promotion, promotionRemain, promotionTotal } = this.node.gSlotDataStore;\n\n        let listScript = [];\n\n        listScript.push({\n            command: \"_updateBet\",\n            data: betValue\n        });\n        listScript.push({\n            command: \"_disableBet\",\n        });\n        listScript.push({\n            command: \"_showTrialButtons\",\n            data: false\n        });\n        listScript.push({\n            command: \"_updateBet\",\n            data: betValue\n        });\n        listScript.push({\n            command: \"_updateMatrix\",\n            data: {matrix: normalSpinMatrix},\n        });\n        listScript.push({\n            command: \"_setUpPaylines\",\n            data: {matrix: normalSpinMatrix, payLines: normalPayLines},\n        });\n        if (!isFinished) {\n            listScript.push({\n                command: \"_hideAnimIntro\",\n            });\n        } \n        const updatedWinAmount = winAmount - (betValue * currentBonusCredits);\n        if (updatedWinAmount && updatedWinAmount > 0) {\n            listScript.push({\n                command: \"_updateWinningAmount\",\n                data: {winAmount: updatedWinAmount, time: 0}\n            });\n        }\n        if (isBonusGameInNormal) {\n            listScript.push({\n                command: \"_showBonusPayLine\",\n            });\n            listScript.push({\n                command: \"_newGameMode\",\n                data: {\n                    name: \"bonusGame\",\n                    data: bonusGameMatrix\n                },\n            });\n            listScript.push({\n                command: \"_resumeGameMode\",\n                data: {name: \"normalGame\",},\n            });\n        }\n        if (freeSpinOption && freeSpinOption > 0) {\n            listScript.push({\n                command: \"_showScatterPayLine\",\n            });\n            listScript.push({\n                command: \"_showCutscene\",\n                data: {\n                    name: \"FreeGameOption\"\n                }\n            });\n        }\n        if (isFreeGame || isBonusGameInFree) {\n            let freeSpinMatrix = normalSpinMatrix;\n            if (freeGameMatrix) {\n                freeSpinMatrix = this.node.gSlotDataStore.convertSlotMatrix(freeGameMatrix, freeGameTableFormat);\n            }\n            listScript.push({\n                command: \"_showScatterPayLine\",\n            });\n            if (isBonusGameInFree)\n            {\n                listScript.push({\n                    command: \"_newGameMode\",\n                    data: {\n                        name: \"bonusGame\",\n                        data: bonusGameMatrix\n                    },\n                });\n            }\n            if (freeGameRemain && freeGameRemain > 0)\n                listScript.push({\n                    command: \"_newGameMode\",\n                    data: {name: \"freeGame\", data: freeSpinMatrix,},\n                });\n            listScript.push({\n                command: \"_resumeGameMode\",\n                data: {name: \"normalGame\",},\n            });\n        }\n        if (normalPayLines && normalPayLines.length > 0) {\n            listScript.push({\n                command: \"_showNormalSymbolPayLine\",\n            });\n        } else {\n            listScript.push({\n                command: \"_clearPaylines\",\n            });\n        }\n        listScript.push({\n            command: \"_gameFinish\"\n        });\n        listScript.push({\n            command: \"_gameRestart\"\n        });\n\n        if(promotion === true && promotionRemain && promotionTotal && promotionRemain >0) {\n            listScript.push({\n                command: \"_showPromotionPopup\",\n            });\n        }\n\n        return listScript;\n    },\n\n    makeScriptUpdateWalletData(wallet) {\n        const listScript = [];\n        const {wallet: currentWallet} = this.node.gSlotDataStore.slotBetDataStore.data;\n        if (!floatUtils.isEqual(currentWallet, wallet)) {\n            listScript.push({\n                command: \"_updateWallet\",\n            });\n            this.node.gSlotDataStore.slotBetDataStore.updateWallet(wallet);\n        }\n        return listScript;\n    },\n\n    makeScriptGameStart() {\n        const listScript = [];\n\n        listScript.push({\n            command: \"_gameStart\",\n        });\n        return listScript;\n    },\n\n    makeScriptSwitchMode() {\n        this.node.gSlotDataStore.playSession.winAmount = 0;\n        const listScript = [];\n        listScript.push({\n            command: \"_forceToClearPaylines\"\n        });\n        listScript.push({\n            command: \"_updateLastWin\",\n            data: false\n        });\n        listScript.push({\n            command: \"_clearWinAmount\",\n        });\n        listScript.push({\n            command: \"_updateJackpot\",\n        });\n        return listScript;\n    },\n\n    makeScriptSpinClick() {\n        let listScript = [];\n        const {currentBetData, steps, currentExtraBetData, extraSteps} = this.node.gSlotDataStore.slotBetDataStore.data;\n        const betIndex = findKeyByValue(steps,currentBetData);\n        const extraBetIndex = findKeyByValue(extraSteps,currentExtraBetData);\n        const {spinTimes, isAutoSpin, promotion, promotionBetId, promotionRemain} = this.node.gSlotDataStore;\n        const {freeGameRemain, winAmount} = this.node.gSlotDataStore.playSession;\n        let availableSpinTimes = '';\n        const totalBetAmount = this._getTotalBetAmount();\n\n        if (freeGameRemain && freeGameRemain > 0) {\n            availableSpinTimes = freeGameRemain - 1;\n        }else if (promotion && promotionRemain > 0) {\n            availableSpinTimes = promotionRemain - 1;\n            listScript.push({\n                command: \"_updatePromotionRemain\",\n                data: availableSpinTimes\n            });\n        }\n        else if (isAutoSpin) {\n            if (spinTimes && spinTimes > 0) {\n                availableSpinTimes = spinTimes - 1;\n            }\n        } else {\n            availableSpinTimes = 0;\n        }\n        this.node.gSlotDataStore.spinTimes = availableSpinTimes;\n\n        const canISpin = this.node.gSlotDataStore.slotBetDataStore.calculateWalletAfterClickSpin(totalBetAmount);\n        listScript.push({\n            command: \"_showTrialButtons\",\n            data: false\n        });\n        if (this.node.mainDirector.trialMode) {\n            if (this._canSpinTrial()) {\n                if (winAmount > 0 && (!freeGameRemain || freeGameRemain <= 0) && !promotion) {\n                    listScript.push({\n                        command: \"_updateLastWin\",\n                        data: true\n                    });\n                }\n                if (!freeGameRemain)\n                    listScript.push({\n                        command: '_clearWinAmount'\n                    });\n                listScript.push({\n                    command: \"_clearPaylines\",\n                });\n                listScript.push({\n                    command: \"_updateSpinTimes\",\n                    data: availableSpinTimes\n                });\n                if (!freeGameRemain) {\n                    listScript.push({\n                        command: \"_updateWalletOnTrialSpinClick\",\n                    });\n                }\n                if (!promotion) {\n                    listScript.push({\n                        command: \"_sendSpinToNetwork\",\n                        data: { currentBetData: betIndex + \"\" + extraBetIndex }\n                    });\n                }\n\n                listScript.push({\n                    command: \"_disableBet\"\n                });\n                listScript.push({\n                    command: \"_spinClick\"\n                });\n                return listScript;\n            } else {\n                this.node.gSlotDataStore.spinTimes = 0;\n                this.node.gSlotDataStore.isAutoSpin = false;\n                listScript = [\n                    {\n                        command: \"_enableBet\",\n                    },\n                    {\n                        command: \"_clearPaylines\",\n                    },\n                    {\n                        command: '_resetSpinButton'\n                    },\n                    {\n                        command: \"_showTrialButtons\",\n                        data: true\n                    },\n                    {\n                        command: \"_showMessageNoMoney\",\n                    },\n                ];\n                return listScript;\n            }\n        } else if (canISpin >= 0 || freeGameRemain > 0 || promotion === true) {\n            if (canISpin >= 0 && !promotion && !freeGameRemain) {\n                this.node.gSlotDataStore.slotBetDataStore.updateWalletAfterClickSpin(totalBetAmount);\n            }\n            listScript.push({\n                command: '_disableBet'\n            });\n            if (winAmount > 0 && (!freeGameRemain || freeGameRemain <= 0)) {\n                listScript.push({\n                    command: '_updateLastWin',\n                    data: true\n                });\n            }\n            listScript.push({\n                command: \"_clearPaylines\"\n            });\n            if (!freeGameRemain)\n                listScript.push({\n                    command: '_clearWinAmount'\n                });\n            listScript.push({\n                command: \"_updateSpinTimes\",\n                data: availableSpinTimes\n            });\n            if(!freeGameRemain) {\n                listScript.push({\n                    command: \"_updateWallet\",\n                });\n            }\n            if (promotion) {\n                listScript.push({\n                    command: \"_sendSpinToNetwork\",\n                    data: {currentBetData: promotionBetId}\n                });\n            } else {\n                listScript.push({\n                    command: \"_sendSpinToNetwork\",\n                    data: {currentBetData: betIndex + \"\" + extraBetIndex}\n                });\n            }\n            listScript.push({\n                command: \"_spinClick\"\n            });\n        } else {\n            this.node.gSlotDataStore.spinTimes = 0;\n            this.node.gSlotDataStore.isAutoSpin = false;\n            listScript = [\n                {\n                    command: \"_enableBet\",\n                },\n                {\n                    command: \"_clearPaylines\",\n                },\n                {\n                    command: '_resetSpinButton'\n                },\n                {\n                    command: \"_showTrialButtons\",\n                    data: true\n                },\n                {\n                    command: \"_showMessageNoMoney\",\n                },\n            ];\n        }\n        return listScript;\n    },\n    makeScriptResultReceive() {\n        const {matrix, jpInfo} = this.node.gSlotDataStore.lastEvent;\n\n        let listScript = [];\n\n        if (jpInfo) {\n            listScript.push({\n                command: \"_pauseUpdateJP\"\n            });\n        }\n        \n        listScript.push({\n            command: \"_resultReceive\",\n            data: matrix,\n        });\n\n        listScript.push({\n            command: \"_showResult\",\n            data: matrix,\n        });\n\n        return listScript;\n    },\n    makeScriptShowResults() {\n        const {\n            type, matrix, winAmount, payLines, payLineJackPot,\n            bonusGame, freeGame\n        } = this.node.gSlotDataStore.lastEvent;\n\n        const {winAmount: winAmountPlaySession, freeGameRemain, winJackpotAmount} = this.node.gSlotDataStore.playSession;\n        const {fsor: freeSpinOption} = this.node.gSlotDataStore.playSession.extend;\n        const {currentBetData} = this.node.gSlotDataStore.slotBetDataStore.data;\n        const listScript = [];\n        const isSessionEnded = !bonusGame && !freeGameRemain;\n        const isBigwin = winAmount && winAmount >= currentBetData * 20 && !isJackpotWin;\n        const isJackpotWin = winJackpotAmount && winJackpotAmount > 0;\n        const { isAutoSpin, modeTurbo } = this.node.gSlotDataStore;\n        this.isFastResult = false;\n\n        if (type != 'freeGameOptionResult') {\n            listScript.push({\n                command: \"_setUpPaylines\",\n                data: {matrix, payLines},\n            });\n        }\n        else {\n            listScript.push({\n                command: \"_hideCutscene\",\n                data: {\n                    name: \"FreeGameOption\",\n                }\n            });\n        }\n\n        //TODO: jackpot\n        if (isJackpotWin) {\n            listScript.push({\n                command: \"_showJackpotPayLine\",\n                data: payLineJackPot,\n            });\n            listScript.push({\n                command: \"_showUnskippedCutscene\",\n                data:{\n                    name: \"JackpotWin\",\n                    content: {\n                        winAmount: winJackpotAmount,\n                        currentBetData\n                    }\n                }\n            });\n            listScript.push({\n                command: \"_resumeUpdateJP\",\n            });\n        }\n        else\n        {\n            if (isBigwin)\n            {\n                if (isSessionEnded && modeTurbo && !isAutoSpin && !this.isFastResult) {\n                    this.isFastResult = true;\n                    listScript.push({\n                        command: \"_gameRestart\"\n                    });\n                }\n\n                listScript.push({\n                    command: \"_blinkAllPaylines\",\n                });\n                listScript.push({\n                    command: \"_showCutscene\",\n                    data: {\n                        name: \"WinEffect\",\n                        content: {\n                            winAmount,\n                            currentBetData\n                        }\n                    }\n                });\n            }\n        }\n\n        if (type == \"normalGame\") {\n            const {spinTimes} = this.node.gSlotDataStore;\n            if (bonusGame && bonusGame > 0) {\n                listScript.push({command: '_updateLastWin', data:false});\n                if (winAmount && winAmount > 0)\n                {\n                    listScript.push({\n                        command: '_updateWinningAmount',\n                        data: {\n                            winAmount: winAmountPlaySession,\n                            time: 300\n                        }\n                    });\n                } else {\n                    listScript.push({\n                        command: '_clearWinAmount'\n                    });\n                }\n                listScript.push({\n                    command: \"_showBonusPayLine\",\n                });\n                listScript.push({\n                    command: \"_newGameMode\",\n                    data: {name: \"bonusGame\",},\n                });\n                listScript.push({\n                    command: \"_resumeGameMode\",\n                    data: {name: \"normalGame\",},\n                });\n                if (!freeGame && spinTimes && spinTimes > 0) {\n                    listScript.push({\n                        command: \"_resumeSpinTime\",\n                        data: spinTimes,\n                    });\n                }\n            }\n            \n            if ((freeSpinOption && freeSpinOption > 0) || (freeGame && freeGame > 0)) {\n                const {spinTimes} = this.node.gSlotDataStore;\n                listScript.push({\n                    command: '_updateLastWin',\n                    data: false\n                });\n                if (!bonusGame) {\n                    if (winAmountPlaySession && winAmountPlaySession > 0) {\n                        listScript.push({\n                            command: '_updateWinningAmount',\n                            data: {winAmount: winAmountPlaySession, time: 10}\n                        });\n                    } else {\n                        listScript.push({\n                            command: '_clearWinAmount'\n                        });\n                    }\n                }\n                listScript.push({\n                    command: \"_showScatterPayLine\",\n                });\n                if (freeSpinOption && freeSpinOption > 0) {\n                    listScript.push({\n                        command: \"_showCutscene\",\n                        data: {\n                            name: \"FreeGameOption\"\n                        }\n                    });\n                }\n                listScript.push({\n                    command: \"_newGameMode\",\n                    data: {name: \"freeGame\", data: matrix},\n                });\n                listScript.push({\n                    command: \"_resumeGameMode\",\n                    data: {name: \"normalGame\",},\n                });\n\n                if (spinTimes && spinTimes > 0) {\n                    listScript.push({\n                        command: \"_resumeSpinTime\",\n                        data: spinTimes,\n                    });\n                }\n            }\n            if (!isAutoSpin && !this.isFastResult) {\n                if (!isBigwin || !isSessionEnded || !modeTurbo) {\n                    this.isFastResult = true;\n                    listScript.push({\n                        command: \"_gameRestart\"\n                    });\n                }\n            }\n            if (payLines && payLines.length > 0)\n            {\n                if (!isBigwin)\n                {\n                    listScript.push({\n                        command: \"_blinkAllPaylines\",\n                    });\n                }\n                listScript.push({\n                    command: \"_showNormalPayline\",\n                });\n            }\n            else\n            {\n                listScript.push({\n                    command: \"_clearPaylines\",\n                });\n            }\n            listScript.push({\n                command: \"_gameEnd\"\n            });\n            listScript.push({\n                command: \"_gameFinish\"\n            });\n            if (!this.isFastResult) {\n                listScript.push({\n                    command: \"_gameRestart\"\n                });\n            }\n        }\n        else\n        if (type == \"freeGame\") {\n            if (bonusGame && bonusGame > 0) {\n                if (winAmount && winAmount > 0)\n                {\n                    listScript.push({\n                        command: '_updateWinningAmount',\n                        data: {\n                            winAmount: winAmountPlaySession,\n                            time: 300\n                        }\n                    });\n                }\n                listScript.push({\n                    command: \"_showBonusPayLine\",\n                });\n                listScript.push({\n                    command: \"_newGameMode\",\n                    data: {name: \"bonusGame\",},\n                });\n                listScript.push({\n                    command: \"_resumeGameMode\",\n                    data: {name: \"freeGame\",},\n                });\n            }\n\n            if (payLines && payLines.length > 0) {\n                listScript.push({\n                    command: \"_blinkAllPaylines\",\n                });\n                listScript.push({\n                    command: \"_showFreePayline\",\n                });\n            }\n            else\n            {\n                listScript.push({\n                    command: \"_clearPaylines\",\n                });\n            }\n            listScript.push({\n                command: \"_gameEnd\"\n            });\n\n            if (!freeGameRemain || freeGameRemain <= 0) {\n                if (winAmountPlaySession && winAmountPlaySession > 0) {\n                    listScript.push({\n                        command: '_updateWinningAmount',\n                        data: {\n                            winAmount: winAmountPlaySession,\n                            time: 300\n                        }\n                    });\n                }\n                listScript.push({\n                    command: \"_delayTimeScript\",\n                    data: 0.3\n                });\n                listScript.push({\n                    command: \"_showUnskippedCutscene\",\n                    data: {\n                        name: \"TotalWinPanel\",\n                        content: {}\n                    }\n                });\n                listScript.push({\n                    command: \"_gameExit\",\n                });\n            } else {\n                listScript.push({\n                    command: \"_gameRestart\"\n                });\n            }\n        }\n\n        return listScript;\n    },\n\n    makeScriptGameEnd() {\n        return [];\n    },\n    makeScriptGameFinish() {\n        const {winAmount} = this.node.gSlotDataStore.playSession;\n        const listScript = [];\n\n        if(this.node.mainDirector.trialMode && winAmount){\n            listScript.push({\n                command: '_updateTrialWallet',\n                data: winAmount,\n            });\n        }\n\n        return listScript;\n    },\n\n    makeScriptSetUpBet(value) {\n        return [{\n            command: \"_updateBet\",\n            data: value,\n        }];\n    },\n\n    scriptUpdateWinAmount(listScript) {\n        const {winAmount: winAmountPlaySession} = this.node.gSlotDataStore.playSession;\n        const {winAmount} = this.node.gSlotDataStore.lastEvent;\n        if (winAmount && winAmount > 0)\n        {\n            if (winAmountPlaySession == winAmount)\n            {\n                listScript.push({\n                    command: \"_clearWinAmount\"\n                });\n                listScript.push({\n                    command: \"_updateLastWin\",\n                    data: false\n                });\n            }\n            listScript.push({\n                command: \"_updateWinningAmount\",\n                data: {winAmount: winAmountPlaySession, time: 300}\n            });\n        }\n    },\n\n    makeScriptGameRestart() {\n        const listScript = [];\n        const {freeGameRemain} = this.node.gSlotDataStore.playSession;\n        const {spinTimes, promotion, promotionRemain} = this.node.gSlotDataStore;\n\n        this.scriptUpdateWinAmount(listScript);\n        if (promotion && promotion > 0) {\n            listScript.push({\n                command: \"_showTrialButtons\",\n                data: false,\n            });\n            listScript.push({\n                command: \"_resetPromotionButtons\"\n            });\n        }\n\n        if (spinTimes && spinTimes > 0) {\n            if(freeGameRemain && freeGameRemain > 0){\n                listScript.push({\n                    command: \"_runAutoSpin\"\n                });\n            }else if(!promotion){\n                listScript.push({\n                    command: \"_runAutoSpin\"\n                });\n            }\n        } else {\n            if (!promotionRemain || promotionRemain <= 0) {\n                listScript.push({\n                    command: '_enableBet'\n                });\n                listScript.push({\n                    command: \"_exitPromotionMode\"\n                });\n                listScript.push({\n                    command: \"_showTrialButtons\",\n                    data: true\n                });\n            }\n\n        }\n        return listScript;\n    },\n\n    //AUTO SPINS\n    makeScriptSpinByTimes(times) {\n        this.node.gSlotDataStore.isAutoSpin = true;\n        this.node.gSlotDataStore.spinTimes = times;\n        return [\n            {\n                command: \"_runAutoSpin\",\n            },\n        ];\n    },\n    makeScriptDisableAutoSpin() {\n        this.node.gSlotDataStore.isAutoSpin = false;\n        this.node.gSlotDataStore.spinTimes = 0;\n        const listScript = [];\n        listScript.push({\n            command: \"_updateSpinTimes\",\n            data: 0\n        });\n        return listScript;\n    },\n    _canSpinTrial() {\n        const { freeGameRemain } = this.node.gSlotDataStore.playSession;\n        if (freeGameRemain) return true;\n        if (!this.node.gSlotDataStore.isPlayDemo) return true;\n        const { trialWallet } = this.node.gSlotDataStore;\n        const totalBet = this._getTotalBetAmount();\n        return (trialWallet >= totalBet);\n    },\n    _getTotalBetAmount() {\n        const { displayingBetData, currentExtraBetData, currentBetData } = this.node.gSlotDataStore.slotBetDataStore.data;\n        if (displayingBetData) return displayingBetData;\n        if (currentExtraBetData && currentBetData) return currentExtraBetData * currentBetData;\n        if (currentBetData) return currentBetData;\n        return 0;\n    },\n});\n"]}