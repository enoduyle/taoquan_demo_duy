{"version":3,"sources":["floatUtils.js"],"names":["Big","require","_verifyNumbers","args","forEach","num","index","isNaN","cc","warn","plus","a","b","toNumber","minus","mul","times","div","sum","numbers","result","product","isEqual","Math","abs","module","exports"],"mappings":";;;;;;;;AAAA,IAAMA,MAAMC,QAAQ,KAAR,CAAZ;;AAEA,SAASC,cAAT,GAAiC;AAAA,sCAANC,IAAM;AAANA,YAAM;AAAA;;AAC7BA,SAAKC,OAAL,CAAa,UAACC,GAAD,EAAMC,KAAN,EAAgB;AACzB,YAAI,QAAOD,GAAP,yCAAOA,GAAP,OAAe,QAAf,IAA2BA,QAAQ,KAAK,CAAxC,IAA6CE,MAAM,CAACF,GAAP,CAAjD,EAA8D;AAC1DG,eAAGC,IAAH,CAAQ,qBAAqBH,KAA7B,EAAoCD,GAApC;AACH;AACJ,KAJD;AAKH;;AAED,SAASK,IAAT,CAAcC,CAAd,EAAiBC,CAAjB,EAAoB;AAChBV,mBAAeS,CAAf,EAAkBC,CAAlB;AACA,WAAOZ,IAAIW,KAAK,CAAT,EAAYD,IAAZ,CAAiBE,KAAK,CAAtB,EAAyBC,QAAzB,EAAP;AACH;AACD,SAASC,KAAT,CAAeH,CAAf,EAAkBC,CAAlB,EAAqB;AACjBV,mBAAeS,CAAf,EAAkBC,CAAlB;AACA,WAAOZ,IAAIW,KAAK,CAAT,EAAYG,KAAZ,CAAkBF,KAAK,CAAvB,EAA0BC,QAA1B,EAAP;AACH;AACD,SAASE,GAAT,CAAaJ,CAAb,EAAgBC,CAAhB,EAAmB;AACfV,mBAAeS,CAAf,EAAkBC,CAAlB;AACA,WAAOZ,IAAIW,KAAK,CAAT,EAAYK,KAAZ,CAAkBJ,KAAK,CAAvB,EAA0BC,QAA1B,EAAP;AACH;AACD,SAASI,GAAT,CAAaN,CAAb,EAAgBC,CAAhB,EAAmB;AACfV,mBAAeS,CAAf,EAAkBC,CAAlB;AACA,WAAOZ,IAAIW,KAAK,CAAT,EAAYM,GAAZ,CAAgBL,KAAK,CAArB,EAAwBC,QAAxB,EAAP;AACH;AACD,SAASK,GAAT,GAAyB;AAAA,uCAATC,OAAS;AAATA,eAAS;AAAA;;AACrBjB,oCAAkBiB,OAAlB;AACA,QAAIC,SAASpB,IAAI,CAAJ,CAAb;AACAmB,YAAQf,OAAR,CAAgB,eAAO;AACnBgB,iBAASA,OAAOV,IAAP,CAAYL,GAAZ,CAAT;AACH,KAFD;AAGA,WAAOe,OAAOP,QAAP,EAAP;AACH;AACD,SAASQ,OAAT,GAA6B;AAAA,uCAATF,OAAS;AAATA,eAAS;AAAA;;AACzBjB,oCAAkBiB,OAAlB;AACA,QAAIC,SAASpB,IAAI,CAAJ,CAAb;AACAmB,YAAQf,OAAR,CAAgB,eAAO;AACnBgB,iBAASA,OAAOJ,KAAP,CAAaX,GAAb,CAAT;AACH,KAFD;AAGA,WAAOe,OAAOP,QAAP,EAAP;AACH;AACD,SAASS,OAAT,CAAiBX,CAAjB,EAAoBC,CAApB,EAAuB;AACnBV,mBAAeS,CAAf,EAAkBC,CAAlB;AACA,WAAOW,KAAKC,GAAL,CAASb,IAAIC,CAAb,IAAkB,KAAzB;AACH;;AAEDa,OAAOC,OAAP,GAAiB;AACbhB,cADa,EACPI,YADO,EACAC,QADA,EACKE,QADL,EACUC,QADV,EACeG,gBADf,EACwBC;AADxB,CAAjB","file":"floatUtils.js","sourceRoot":"../../../../../../assets/cc-common/cc-share-v1/common","sourcesContent":["const Big = require(\"big\");\n\nfunction _verifyNumbers(...args) {\n    args.forEach((num, index) => {\n        if (typeof num === \"object\" || num === void 0 || isNaN(+num)) {\n            cc.warn(\"invalid number: \" + index, num);\n        }\n    });\n}\n\nfunction plus(a, b) {\n    _verifyNumbers(a, b);\n    return Big(a || 0).plus(b || 0).toNumber();\n}\nfunction minus(a, b) {\n    _verifyNumbers(a, b);\n    return Big(a || 0).minus(b || 0).toNumber();\n}\nfunction mul(a, b) {\n    _verifyNumbers(a, b);\n    return Big(a || 0).times(b || 0).toNumber();\n}\nfunction div(a, b) {\n    _verifyNumbers(a, b);\n    return Big(a || 0).div(b || 1).toNumber();\n}\nfunction sum(...numbers) {\n    _verifyNumbers(...numbers);\n    let result = Big(0);\n    numbers.forEach(num => {\n        result = result.plus(num);\n    })\n    return result.toNumber();\n}\nfunction product(...numbers) {\n    _verifyNumbers(...numbers);\n    let result = Big(1);\n    numbers.forEach(num => {\n        result = result.times(num);\n    })\n    return result.toNumber();\n}\nfunction isEqual(a, b) {\n    _verifyNumbers(a, b);\n    return Math.abs(a - b) < 1e-12;\n}\n\nmodule.exports = {\n    plus, minus, mul, div, sum, product, isEqual\n}"]}