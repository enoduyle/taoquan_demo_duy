{"version":3,"sources":["SlotTableSoundEffectv2.js"],"names":["cc","Class","extends","Component","properties","sfxBonuses","default","type","AudioClip","sfxScatters","sfxJackpots","startSoundBonus","startSoundScatter","startSoundJackpot","onLoad","payLineMatrix","node","config","PAY_LINE_MATRIX","payLineMatrixForCompare","Object","keys","forEach","push","key","join","start","on","reelStartSound","reelStopSound","countBonus","countScatter","countJackpot","playedSoundBonus","playedSoundScatter","playedSoundJackpot","bonusPlaylist","scatterPlaylist","jackpotPlayList","jackpotLine","matrix","count","jpIndex","k","length","value","_playSound","includes","countSymbol","startSoundSymbol","playedSoundSymbol","sfxSymbols","sound","shift","soundPlayer","playSFX"],"mappings":";;;;;;;;AACA;;;AAGAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,oBAAY;AACRC,qBAAS,EADD;AAERC,kBAAMP,GAAGQ;AAFD,SADJ;AAKRC,qBAAa;AACTH,qBAAS,EADA;AAETC,kBAAMP,GAAGQ;AAFA,SALL;AASRE,qBAAa;AACTJ,qBAAS,EADA;AAETC,kBAAMP,GAAGQ;AAFA,SATL;AAaRG,yBAAiB,CAbT;AAcRC,2BAAmB,CAdX;AAeRC,2BAAmB;AAfX,KAHP;;AAqBLC,UArBK,oBAqBI;AAAA;;AACL,YAAMC,gBAAgB,KAAKC,IAAL,CAAUC,MAAV,CAAiBC,eAAvC;AACA,aAAKC,uBAAL,GAA+B,EAA/B;AACA,YAAIJ,aAAJ,EAAmB;AACfK,mBAAOC,IAAP,CAAYN,aAAZ,EAA2BO,OAA3B,CAAmC,eAAO;AACtC,sBAAKH,uBAAL,CAA6BI,IAA7B,CAAkCR,cAAcS,GAAd,EAAmBC,IAAnB,EAAlC;AACH,aAFD;AAGH;AACJ,KA7BI;AA+BLC,SA/BK,mBA+BI;AACL,aAAKV,IAAL,CAAUW,EAAV,CAAa,mBAAb,EAAiC,KAAKC,cAAtC,EAAqD,IAArD;AACA,aAAKZ,IAAL,CAAUW,EAAV,CAAa,iBAAb,EAA+B,KAAKE,aAApC,EAAkD,IAAlD;AACH,KAlCI;AAoCLD,kBApCK,4BAoCY;AACb,aAAKE,UAAL,GAAkB,CAAlB;AACA,aAAKC,YAAL,GAAoB,CAApB;AACA,aAAKC,YAAL,GAAoB,CAApB;;AAEA,aAAKC,gBAAL,GAAwB,EAAxB;AACA,aAAKC,kBAAL,GAA0B,EAA1B;AACA,aAAKC,kBAAL,GAA0B,EAA1B;;AAEA,aAAKC,aAAL,gCAAyB,KAAK/B,UAA9B;AACA,aAAKgC,eAAL,gCAA2B,KAAK5B,WAAhC;AACA,aAAK6B,eAAL,gCAA2B,KAAK5B,WAAhC;;AAEA,aAAK6B,WAAL,GAAmB,EAAnB;AACH,KAlDI;AAoDLV,iBApDK,+BAoD0B;AAAA,YAAhBW,MAAgB,QAAhBA,MAAgB;AAAA,YAARC,KAAQ,QAARA,KAAQ;;AAC3B,YAAIC,UAAU,CAAC,CAAf;AACA,aAAK,IAAIC,IAAI,CAAb,EAAgBA,KAAKH,OAAOI,MAAP,IAAiBJ,OAAOI,MAAP,KAAkB,CAAlB,GAAsB,CAAtB,GAA0B,CAA3C,CAArB,EAAoED,GAApE,EAAyE;AACrE,gBAAIE,QAAQL,OAAOG,CAAP,CAAZ;AACA,gBAAIE,UAAU,GAAd,EAAmB;AACf,qBAAKf,UAAL;AACH,aAFD,MAEO,IAAIe,UAAU,GAAd,EAAmB;AACtB,qBAAKd,YAAL;AACH,aAFM,MAEA,IAAIc,UAAU,IAAd,EAAoB;AACvB,qBAAKb,YAAL;AACAU,0BAAUC,IAAI,CAAd;AACH;AACJ;;AAED,aAAKJ,WAAL,IAAoB,CAACE,QAAQ,CAAR,GAAY,GAAZ,GAAkB,EAAnB,IAAyBC,OAA7C;;AAEA,aAAKI,UAAL,CAAgB,KAAKhB,UAArB,EAAiC,KAAKnB,eAAtC,EAAuD,KAAKsB,gBAA5D,EAA8E,KAAKG,aAAnF;AACA,aAAKU,UAAL,CAAgB,KAAKf,YAArB,EAAmC,KAAKnB,iBAAxC,EAA2D,KAAKsB,kBAAhE,EAAoF,KAAKG,eAAzF;AACA,YAAI,KAAKlB,uBAAL,CAA6B4B,QAA7B,CAAsC,KAAKR,WAA3C,CAAJ,EAA6D;AACzD,iBAAKO,UAAL,CAAgB,KAAKd,YAArB,EAAmC,KAAKnB,iBAAxC,EAA2D,KAAKsB,kBAAhE,EAAoF,KAAKG,eAAzF;AACH;AACJ,KAzEI;AA2ELQ,cA3EK,sBA2EME,WA3EN,EA2EmBC,gBA3EnB,EA2EqCC,iBA3ErC,EA2EwDC,UA3ExD,EA2EoE;AACrE,YAAIH,eAAeC,gBAAf,IAAmC,CAACC,kBAAkBH,QAAlB,CAA2BC,WAA3B,CAApC,IAA+EG,WAAWP,MAA9F,EAAsG;AAClGM,8BAAkB3B,IAAlB,CAAuByB,WAAvB;AACA,gBAAII,QAAQD,WAAWE,KAAX,EAAZ;AACA,gBAAID,SAAS,KAAKpC,IAAL,CAAUsC,WAAvB,EAAoC;AAChC,qBAAKtC,IAAL,CAAUsC,WAAV,CAAsBC,OAAtB,CAA8BH,KAA9B;AACH;AACJ;AACJ;AAnFI,CAAT","file":"SlotTableSoundEffectv2.js","sourceRoot":"../../../../../../../assets/cc-common/cc-slotbase-v2/slotGame/table","sourcesContent":["\n/*\n    New Rule: Play sound when win above 3 symbol A, R - 5 symbol JP\n*/\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        sfxBonuses: {\n            default: [],\n            type: cc.AudioClip,\n        },\n        sfxScatters: {\n            default: [],\n            type: cc.AudioClip,\n        },\n        sfxJackpots: {\n            default: [],\n            type: cc.AudioClip,\n        },\n        startSoundBonus: 3,\n        startSoundScatter: 3,\n        startSoundJackpot: 5,\n    },\n\n    onLoad() {\n        const payLineMatrix = this.node.config.PAY_LINE_MATRIX;\n        this.payLineMatrixForCompare = [];\n        if (payLineMatrix) {\n            Object.keys(payLineMatrix).forEach(key => {\n                this.payLineMatrixForCompare.push(payLineMatrix[key].join());\n            });\n        }\n    },\n\n    start () {\n        this.node.on('TABLE_START_SOUND',this.reelStartSound,this);\n        this.node.on('REEL_STOP_SOUND',this.reelStopSound,this);\n    },\n\n    reelStartSound() {\n        this.countBonus = 0;\n        this.countScatter = 0;\n        this.countJackpot = 0;\n\n        this.playedSoundBonus = [];\n        this.playedSoundScatter = [];\n        this.playedSoundJackpot = [];\n\n        this.bonusPlaylist = [...this.sfxBonuses];\n        this.scatterPlaylist = [...this.sfxScatters];\n        this.jackpotPlayList = [...this.sfxJackpots];\n\n        this.jackpotLine = '';\n    },\n\n    reelStopSound({matrix, count}) {\n        let jpIndex = -1;\n        for (let k = 1; k <= matrix.length - (matrix.length === 5 ? 2 : 1); k++) {\n            let value = matrix[k];\n            if (value === 'R') {\n                this.countBonus++;\n            } else if (value === 'A') {\n                this.countScatter++;\n            } else if (value === 'JP') {\n                this.countJackpot++;\n                jpIndex = k - 1;\n            }\n        }\n\n        this.jackpotLine += (count > 1 ? ',' : '') + jpIndex;\n\n        this._playSound(this.countBonus, this.startSoundBonus, this.playedSoundBonus, this.bonusPlaylist);\n        this._playSound(this.countScatter, this.startSoundScatter, this.playedSoundScatter, this.scatterPlaylist);\n        if (this.payLineMatrixForCompare.includes(this.jackpotLine)) {\n            this._playSound(this.countJackpot, this.startSoundJackpot, this.playedSoundJackpot, this.jackpotPlayList);\n        }\n    },\n\n    _playSound(countSymbol, startSoundSymbol, playedSoundSymbol, sfxSymbols) {\n        if (countSymbol >= startSoundSymbol && !playedSoundSymbol.includes(countSymbol) && sfxSymbols.length) {\n            playedSoundSymbol.push(countSymbol);\n            let sound = sfxSymbols.shift();\n            if (sound && this.node.soundPlayer) {\n                this.node.soundPlayer.playSFX(sound);\n            }\n        }\n    }\n});\n"]}