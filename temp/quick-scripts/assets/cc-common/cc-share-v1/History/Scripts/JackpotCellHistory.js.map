{"version":3,"sources":["JackpotCellHistory.js"],"names":["require","jackpotStatic","cc","Class","extends","properties","jackpotType","Node","jackpotList","default","type","height","onLoad","_super","node","updateData","data","imageJP","findJackpotStaticData","jpType","getComponent","Sprite","spriteFrame","static","i","length","name"],"mappings":";;;;;;eAA0BA,QAAQ,gBAAR;IAAlBC,yBAAAA;;AAERC,GAAGC,KAAH,CAAS;AACLC,aAASJ,QAAQ,iBAAR,CADJ;;AAGLK,gBAAY;AACRC,qBAAaJ,GAAGK,IADR;AAERC,qBAAa;AACTC,qBAAS,EADA;AAETC,kBAAM,CAACT,aAAD;AAFG,SAFL;AAMRU,gBAAQ;AANA,KAHP;;AAYLC,UAZK,oBAYI;AACL,aAAKC,MAAL;AACA,aAAKC,IAAL,CAAUH,MAAV,GAAmB,KAAKA,MAAxB;AACH,KAfI;AAiBLI,cAjBK,sBAiBMC,IAjBN,EAiBY;AACb,aAAKH,MAAL,CAAYG,IAAZ;AACA,YAAG,KAAKV,WAAR,EAAoB;AAChB,gBAAMW,UAAU,KAAKC,qBAAL,CAA2BF,KAAKG,MAAhC,CAAhB;AACA,gBAAIF,OAAJ,EAAa;AACT,qBAAKX,WAAL,CAAiBc,YAAjB,CAA8BlB,GAAGmB,MAAjC,EAAyCC,WAAzC,GAAuDL,QAAQM,MAA/D;AACH;AACJ;AAEJ,KA1BI;AA2BLL,yBA3BK,iCA2BiBZ,WA3BjB,EA2B8B;AAC/B,aAAK,IAAIkB,IAAI,CAAb,EAAgBA,IAAI,KAAKhB,WAAL,CAAiBiB,MAArC,EAA6CD,GAA7C,EAAkD;AAC9C,gBAAI,KAAKhB,WAAL,CAAiBgB,CAAjB,EAAoBE,IAApB,IAA4BpB,WAAhC,EACI,OAAO,KAAKE,WAAL,CAAiBgB,CAAjB,CAAP;AACP;AACD,eAAO,IAAP;AACH;AAjCI,CAAT","file":"JackpotCellHistory.js","sourceRoot":"../../../../../../../assets/cc-common/cc-share-v1/History/Scripts","sourcesContent":["const { jackpotStatic } = require('CustomDataType');\n\ncc.Class({\n    extends: require(\"BaseCellHistory\"),\n\n    properties: {\n        jackpotType: cc.Node,\n        jackpotList: {\n            default: [],\n            type: [jackpotStatic]\n        },\n        height: 50\n    },\n\n    onLoad() {\n        this._super();\n        this.node.height = this.height;\n    },\n\n    updateData(data) {\n        this._super(data);\n        if(this.jackpotType){\n            const imageJP = this.findJackpotStaticData(data.jpType);\n            if (imageJP) {\n                this.jackpotType.getComponent(cc.Sprite).spriteFrame = imageJP.static;\n            }\n        }\n\n    },\n    findJackpotStaticData(jackpotType) {\n        for (let i = 0; i < this.jackpotList.length; i++) {\n            if (this.jackpotList[i].name == jackpotType)\n                return this.jackpotList[i];\n        }\n        return null;\n    },\n});\n"]}