{"version":3,"sources":["AnimationControl.js"],"names":["cc","Class","extends","Component","properties","isPlaying","get","_playing","_animation","_animState","visible","onAnimationStartedDelegates","_onAnimationStartedDelegates","onAnimationChangedDelegates","_onAnimationChangedDelegates","onAnimationCompleteDelegates","_onAnimationCompleteDelegates","currentAnimationState","onLoad","node","getComponent","Animation","start","defaultClip","getAnimationState","name","playAnimation","clipName","speed","isLoop","isAdditive","playAdditive","play","wrapMode","WrapMode","Loop","Normal","setCurrentSpeed","newSpeed","stopAnimation","stop","onAnimationEnded","log","i","length","delegate","onAnimationStarted","onAnimationChanged","param"],"mappings":"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","file":"AnimationControl.js","sourceRoot":"../../../../../../assets/cc-common/cc-slotbase-v2/component","sourcesContent":["\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n\n        isPlaying:{\n            get(){\n                let _playing = false;\n                if(this._animation!=null && this._animState!=null){\n                    _playing = this._animState.isPlaying;\n                }\n                return _playing;\n            },\n\n            visible: false,\n        },\n\n        onAnimationStartedDelegates:{\n            get(){\n                return this._onAnimationStartedDelegates;\n            },\n\n            visible: false,\n        },\n\n        onAnimationChangedDelegates:{\n            get(){\n                return this._onAnimationChangedDelegates;\n            },\n\n            visible: false,\n        },\n    \n        onAnimationCompleteDelegates:{\n            get(){\n                return this._onAnimationCompleteDelegates;\n            },\n\n            visible: false,\n        },\n    \n        currentAnimationState: {\n            get(){\n                return this._animState;\n            },\n\n            visible: false,\n        },\n    },\n    \n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        this._animation = null;\n        this._animState = null;\n        this._onAnimationCompleteDelegates = [];\n        this._onAnimationStartedDelegates = [];\n        this._onAnimationChangedDelegates = [];\n        this._animation = this.node.getComponent(cc.Animation);\n    },\n\n    start () {\n        // Obtain animation state of default animation clip first if any\n        if(this._animation!=null){\n            let defaultClip = this._animation.defaultClip;\n            this._animState = this._animation.getAnimationState(defaultClip.name);\n        }\n    },\n\n    \n\n\n    playAnimation(clipName = '', speed = 1, isLoop = false, isAdditive = false){\n        if(this._animation!=null){\n            if(isAdditive){\n                if(clipName!=\"\"){\n                    this._animState = this._animation.playAdditive(clipName);\n                }else{\n                    // play default clip\n                    this._animState = this._animation.playAdditive();\n                }\n            }else{\n                if(clipName!=\"\"){\n                    this._animState = this._animation.play(clipName);\n                }else{\n                    // play default clip\n                    this._animState = this._animation.play();\n                }\n            }\n            \n\n            if(this._animState!=null){\n                this._animState.speed = speed;\n                this._animState.wrapMode = isLoop? cc.WrapMode.Loop: cc.WrapMode.Normal;\n            }\n        }\n        \n    },\n\n    setCurrentSpeed(newSpeed){\n        if(this._animState!=null){\n            this._animState.speed = newSpeed;\n        }\n    },\n\n    stopAnimation(clipName = ''){\n        if(this._animation!=null){\n            if(clipName!=\"\"){\n                this._animation.stop(clipName);\n            }else{\n                //stop all the animations\n                this._animation.stop();\n            }\n        }\n    },\n\n    onAnimationEnded(){\n        if(this._animState!=null){\n            cc.log(`This animation clip name: ${this._animState.name} is stopped`);\n\n            for(let i = 0; i < this._onAnimationCompleteDelegates.length; i++){\n                let delegate = this._onAnimationCompleteDelegates[i];\n                delegate&&delegate();\n            }\n        }\n    },\n\n    onAnimationStarted()\n    {\n        if(this._animState!=null){\n            cc.log(`This animation clip name: ${this._animState.name} is started`);\n\n            for(let i = 0; i < this._onAnimationStartedDelegates.length; i++){\n                let delegate = this._onAnimationStartedDelegates[i];\n                delegate&&delegate();\n            }\n        }\n    },\n\n    onAnimationChanged(param)\n    {\n        cc.log('Param: ' + param);\n        if(this._animState!=null){\n            cc.log(`This animation clip name: ${this._animState.name} is changed param`);\n\n            for(let i = 0; i < this._onAnimationChangedDelegates.length; i++){\n                let delegate = this._onAnimationChangedDelegates[i];\n                delegate&&delegate(param);\n            }\n        }\n    },\n});\n"]}