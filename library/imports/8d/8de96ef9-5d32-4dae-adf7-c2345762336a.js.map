{"version":3,"sources":["../../../../../../assets/cc-common/cc-slotbase-v2/component/assets/cc-common/cc-slotbase-v2/component/CustomProgressBar.js"],"names":["BarBorder","cc","Class","name","properties","Left","Right","Top","Bottom","extends","ProgressBar","border","default","type","notify","_updateBarStatus","_super","nodeWidth","barSprite","node","width","nodeHeight","height","parentAnchorPoint","getAnchorPoint","mode","totalLength","x","y","nodeSize","size","setContentSize"],"mappings":";;;;;;AAAA,IAAMA,YAAYC,GAAGC,KAAH,CAAS;AACvBC,UAAM,WADiB;AAEvBC,gBAAW;AACPC,cAAM,CADC;AAEPC,eAAO,CAFA;AAGPC,aAAK,CAHE;AAIPC,gBAAQ;AAJD;AAFY,CAAT,CAAlB;AASAP,GAAGC,KAAH,CAAS;AACLO,aAASR,GAAGS,WADP;;AAGLN,gBAAY;AACRO,gBAAQ;AACJC,qBAAS,IADL;AAEJC,kBAAMb,SAFF;AAGJc,oBAAQ,kBAAU;AACd,qBAAKC,gBAAL;AACH;AALG;;AADA,KAHP;;AAcLA,sBAAkB,4BAAU;AACxB,aAAKC,MAAL;AACA,YAAG,KAAKL,MAAR,EAAe;AACX,gBAAIM,YAAY,KAAKC,SAAL,CAAeC,IAAf,CAAoBC,KAApB,GAA4B,KAAKT,MAAL,CAAYN,IAAxC,GAA+C,KAAKM,MAAL,CAAYL,KAA3E;AACA,gBAAIe,aAAa,KAAKH,SAAL,CAAeC,IAAf,CAAoBG,MAApB,GAA6B,KAAKX,MAAL,CAAYJ,GAAzC,GAA+C,KAAKI,MAAL,CAAYH,MAA5E;AACA,gBAAMe,oBAAoB,KAAKJ,IAAL,CAAUK,cAAV,EAA1B;AACA,gBAAG,KAAKC,IAAL,KAAc,CAAjB,EAAmB;AAAE;AACjBR,4BAAY,KAAKS,WAAL,GAAmB,KAAKf,MAAL,CAAYN,IAA/B,GAAsC,KAAKM,MAAL,CAAYL,KAA9D;AACA,qBAAKY,SAAL,CAAeC,IAAf,CAAoBQ,CAApB,GAAwB,CAACJ,kBAAkBI,CAAnB,GAAuBV,SAAvB,GAAmC,KAAKN,MAAL,CAAYN,IAAvE;AACA,qBAAKa,SAAL,CAAeC,IAAf,CAAoBS,CAApB,GAAwB,CAAxB;AACH,aAJD,MAIM,IAAG,KAAKH,IAAL,KAAc,CAAjB,EAAmB;AAAE;AACvBJ,6BAAa,KAAKK,WAAL,GAAmB,KAAKf,MAAL,CAAYJ,GAA/B,GAAqC,KAAKI,MAAL,CAAYH,MAA9D;AACA,qBAAKU,SAAL,CAAeC,IAAf,CAAoBS,CAApB,GAAwB,CAACL,kBAAkBK,CAAnB,GAAuBP,UAAvB,GAAoC,KAAKV,MAAL,CAAYH,MAAxE;AACA,qBAAKU,SAAL,CAAeC,IAAf,CAAoBQ,CAApB,GAAwB,CAAxB;AACH;AACD,gBAAIE,WAAW5B,GAAG6B,IAAH,CAAQb,SAAR,EAAmBI,UAAnB,CAAf;AACA,iBAAKF,IAAL,CAAUY,cAAV,CAAyBF,QAAzB;AACH;AACJ;;AAhCI,CAAT","file":"CustomProgressBar.js","sourceRoot":"../../../../../../assets/cc-common/cc-slotbase-v2/component","sourcesContent":["const BarBorder = cc.Class({\n    name: 'BarBorder',\n    properties:{\n        Left: 2,\n        Right: 2,\n        Top: 2,\n        Bottom: 2,\n    },\n});\ncc.Class({\n    extends: cc.ProgressBar,\n\n    properties: {\n        border: {\n            default: null,\n            type: BarBorder,\n            notify: function(){\n                this._updateBarStatus();\n            },\n        },\n\n    },\n\n    _updateBarStatus: function(){\n        this._super();\n        if(this.border){\n            let nodeWidth = this.barSprite.node.width + this.border.Left + this.border.Right;\n            let nodeHeight = this.barSprite.node.height + this.border.Top + this.border.Bottom;\n            const parentAnchorPoint = this.node.getAnchorPoint();\n            if(this.mode === 0){ // horizontal\n                nodeWidth = this.totalLength + this.border.Left + this.border.Right;\n                this.barSprite.node.x = -parentAnchorPoint.x * nodeWidth + this.border.Left;\n                this.barSprite.node.y = 0;\n            }else if(this.mode === 1){ // vertical\n                nodeHeight = this.totalLength + this.border.Top + this.border.Bottom;\n                this.barSprite.node.y = -parentAnchorPoint.y * nodeHeight + this.border.Bottom;\n                this.barSprite.node.x = 0;\n            }\n            let nodeSize = cc.size(nodeWidth, nodeHeight);\n            this.node.setContentSize(nodeSize);\n        }\n    },\n   \n});\n"]}