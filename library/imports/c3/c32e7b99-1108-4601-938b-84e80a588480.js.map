{"version":3,"sources":["../../../../../../assets/cc-common/cc-share-v1/Flutter/assets/cc-common/cc-share-v1/Flutter/MonoUpdate.js"],"names":["MD5","require","HOTUPDATE_STATUS","GET_CONFIG","CHECK_UPDATE","READY_TO_UPDATE","UPDATING","UPDATE_FAILED","ALREADY_UP_TO_DATE","UPDATE_SUCCESS","NETWORK_STATUS","CONNECTED","DISCONNECTED","LOCAL_KEY","cc","Class","extends","Component","properties","manifestUrl","type","Asset","default","panel","Node","info","Label","detail","network","byteProgress","ProgressBar","byteLabel","btnRetry","btnQuit","loadSceneName","gameId","serializable","_am","_storagePath","_oldV","_newV","_remoteURL","_localManifestPath","_localKey","onLoad","sys","isNative","_retryInfo","reConnectInterval","reconnectCount","downloadFailedAssetsInterval","downloadFailedAssetsCount","reconnectionDelay","downloadFailedAssetsDelay","maxOfCount","jsb","fileUtils","getWritablePath","log","nativeUrl","loader","md5Pipe","transformURL","AssetsManager","versionCompareHandle","bind","setVerifyCallback","_verifyFileHandle","os","OS_ANDROID","setMaxConcurrentTask","reset","getConfig","active","updateState","isConnected","updateNetworkState","getNetworkType","NetworkType","WWAN","string","node","color","Color","YELLOW","loadConfigAsync","CONFIG","USER_TOKEN","IS_FINISHED_REMOTE","HOT_UPDATE_URL","setTimeout","gameToken","getParamFlutter","localStorage","setItem","checkModifyManifest","reconnectNetwork","tempUpdateUrl","getItem","localManifest","getStringFromFile","manifestObject","JSON","parse","packageUrl","modifyAppLoadUrlForManifestFile","checkUpdate","afterString","isFileExist","loadManifest","isDirectoryExist","createDirectory","originManifest","remoteManifestUrl","remoteVersionUrl","stringify","isWritten","writeStringToFile","getState","State","UNINITED","manifest","Manifest","loadLocalManifest","error","param","value","reflection","callStaticMethod","OS_IOS","formatBytes","bytes","toFixed","getLocalManifest","isLoaded","initLocalManifestFailed","setEventCallback","checkCb","event","getEventCode","EventAssetsManager","ERROR_NO_LOCAL_MANIFEST","getLocalManifestFailed","ERROR_DOWNLOAD_MANIFEST","ERROR_PARSE_MANIFEST","downloadManifestFailed","NEW_VERSION_FOUND","hotUpdate","updateCb","update","stateName","_state","totalSize","calculateTotalSize","progress","detailStr","scheduleOnce","downloadFailedAssets","onUpdateComplete","_updateListener","searchPaths","getSearchPaths","newPaths","Array","prototype","unshift","apply","setSearchPaths","audioEngine","stopAll","game","restart","_netWorkState","callback","clearInterval","setInterval","key","assets","obj","size","failed","_failedCount","GET_LOCAL_MANIFEST_FAILED","UPDATE_PROGRESSION","downloaded","getDownloadedBytes","total","getTotalBytes","percent","Math","floor","ASSET_UPDATED","UPDATE_FINISHED","ERROR_UPDATING","getAssetId","getMessage","ERROR_DECOMPRESS","NONE","onClickRetry","onClickQuit","handleCloseGameIframe","msg","console","path","asset","compressed","resMD5","getDataFromFile","md5","versionA","versionB","vA","split","vB","i","length","a","parseInt","b","director","loadScene","onDestroy"],"mappings":"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","file":"MonoUpdate.js","sourceRoot":"../../../../../../assets/cc-common/cc-share-v1/Flutter","sourcesContent":["/* global jsb */\nconst MD5 = require(\"jsb_runtime_md5\");\n\nconst HOTUPDATE_STATUS = {\n    GET_CONFIG: \"GET_CONFIG\",\n    CHECK_UPDATE: \"CHECK_UPDATE\",\n    READY_TO_UPDATE: \"READY_TO_UPDATE\",\n    UPDATING: \"UPDATING\",\n    UPDATE_FAILED: 'UPDATE_FAILED',\n    ALREADY_UP_TO_DATE: \"ALREADY_UP_TO_DATE\",\n    UPDATE_SUCCESS: \"UPDATE_SUCCESS\",\n};\n\nconst NETWORK_STATUS = {\n    CONNECTED: \"CONNECTED\",\n    DISCONNECTED: \"DISCONNECTED\",\n};\n\nconst LOCAL_KEY = \"HOT_UPDATE_URL\";\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        manifestUrl: {\n            type: cc.Asset,\n            default: null\n        },\n        panel: cc.Node,\n        info: cc.Label,\n        detail: cc.Label,\n        network: cc.Label,\n        byteProgress: cc.ProgressBar,\n        byteLabel: cc.Label,\n        btnRetry: cc.Node,\n        btnQuit: cc.Node,\n        loadSceneName: '',\n        gameId: {\n            default: '',\n            serializable: true\n        },\n        _am: null,\n        _storagePath: '',\n        _oldV: '',\n        _newV: '',\n        _remoteURL: '',\n        _localManifestPath: '',\n        _localKey: '',\n\n       \n    },\n\n    onLoad () {\n        // Hot update is only available in Native build\n        if (!cc.sys.isNative) {\n            return;\n        }\n\n        this._retryInfo = {\n            reConnectInterval: null,\n            reconnectCount : 0,\n            downloadFailedAssetsInterval: null,\n            downloadFailedAssetsCount : 0,\n            reconnectionDelay : 3000,\n            downloadFailedAssetsDelay : 3000,\n            maxOfCount : 3\n        };\n        this._localKey = LOCAL_KEY + this.gameId;\n        this._storagePath = ((jsb.fileUtils ? jsb.fileUtils.getWritablePath() : '/') + this.gameId);\n        this.log('Storage path for remote asset : ' + this._storagePath);\n\n        // Init with empty manifest url for testing custom manifest\n\n        //Find local manifest path\n        this._localManifestPath = this.manifestUrl.nativeUrl;\n        if (cc.loader.md5Pipe) {\n            this._localManifestPath = cc.loader.md5Pipe.transformURL();\n        }\n\n        this._am = new jsb.AssetsManager('', this._storagePath, this.versionCompareHandle.bind(this));\n        this._am.setVerifyCallback(this._verifyFileHandle.bind(this));\n\n        if (cc.sys.os === cc.sys.OS_ANDROID) {\n            // Some Android device may slow down the download process when concurrent tasks is too much.\n            // The value may not be accurate, please do more test and find what's most suitable for your game.\n            this._am.setMaxConcurrentTask(2);\n        }\n        else {\n            this._am.setMaxConcurrentTask(6);\n        }\n        this.reset();\n        this.getConfig();\n    },\n\n    /**\n     * Function for retrieving the remote config\n     */\n    getConfig(){\n        this.panel.active = false;\n        this.updateState(HOTUPDATE_STATUS.GET_CONFIG);\n        if(this.isConnected()){\n            this.updateNetworkState(NETWORK_STATUS.CONNECTED);\n            if(cc.sys.getNetworkType() === cc.sys.NetworkType.WWAN){\n                this.network.string = \"Bạn đang kết nối dữ liêu di động\";\n                this.network.node.color = cc.Color.YELLOW;\n                this.network.node.active = true;\n            }\n            const loadConfigAsync = require('loadConfigAsync');\n            const CONFIG = loadConfigAsync.getConfig();\n            const {\n                USER_TOKEN, IS_FINISHED_REMOTE, HOT_UPDATE_URL\n            } = CONFIG;\n            if (!IS_FINISHED_REMOTE) {\n                setTimeout(() => {\n                    this.getConfig();\n                }, 100);\n                return;\n            }\n            let gameToken;\n            gameToken = this.getParamFlutter('getGameToken');\n            cc.sys.localStorage.setItem(USER_TOKEN, gameToken);\n            this._remoteURL = HOT_UPDATE_URL;\n            this.checkModifyManifest();\n        } else {\n            this.updateNetworkState(NETWORK_STATUS.DISCONNECTED);\n            this.reconnectNetwork(()=>{\n                this.updateNetworkState(NETWORK_STATUS.CONNECTED);\n                this.getConfig();\n            });\n        }\n    },\n    /**\n     * Compare remote hot update url with local one\n     * if local manifest does not exist, create one\n     */\n    checkModifyManifest(){\n        let tempUpdateUrl = cc.sys.localStorage.getItem(this._localKey);\n        if (!tempUpdateUrl) {\n            let localManifest = jsb.fileUtils.getStringFromFile(this._localManifestPath);\n            let manifestObject = JSON.parse(localManifest);\n            cc.sys.localStorage.setItem(this._localKey, manifestObject.packageUrl);\n        }\n        tempUpdateUrl = cc.sys.localStorage.getItem(this._localKey);\n        //Only modify manifest file if remote URL is changed\n        if (this._remoteURL && tempUpdateUrl !== this._remoteURL) {\n            this.modifyAppLoadUrlForManifestFile();\n        } else {\n            this.checkUpdate();\n        }\n    },\n    /**\n     * Modify the .manifest file\n     * There are 2 cases that need to be mentioned: init package and updated game\n     * In devices that update at least once, project.manifest will be stored in hot update directory\n     * In init package, there will be no project.manifest file in storage path (this._storagePath)\n     */\n    modifyAppLoadUrlForManifestFile() {\n        try {\n            let afterString, manifestObject;\n            if (jsb.fileUtils.isFileExist(this._storagePath + '/project.manifest')) {\n                let loadManifest = jsb.fileUtils.getStringFromFile(this._storagePath + '/project.manifest');\n                manifestObject = JSON.parse(loadManifest);\n            } else {\n                if (!jsb.fileUtils.isDirectoryExist(this._storagePath))\n                    jsb.fileUtils.createDirectory(this._storagePath);\n                let originManifest = jsb.fileUtils.getStringFromFile(this._localManifestPath);\n                manifestObject = JSON.parse(originManifest);\n            }\n            manifestObject.packageUrl = this._remoteURL;\n            manifestObject.remoteManifestUrl = manifestObject.packageUrl + this.gameId + \"/project.manifest\";\n            manifestObject.remoteVersionUrl = manifestObject.packageUrl + this.gameId + \"/version.manifest\";\n            afterString = JSON.stringify(manifestObject);\n            let isWritten = jsb.fileUtils.writeStringToFile(afterString, this._storagePath + '/project.manifest');\n            if (isWritten) {\n                cc.sys.localStorage.setItem(this._localKey, this._remoteURL);\n            }\n            // Init with empty manifest url for testing custom manifest\n            if (this._am.getState() === jsb.AssetsManager.State.UNINITED) {\n                let manifest = new jsb.Manifest(afterString, this._storagePath);\n                this._am.loadLocalManifest(manifest, this._storagePath);\n                this.log('Successfully load remote manifest');\n            }\n            this.checkUpdate();\n        } catch (error) {\n            this.log(\"Error modify manifest!! See Error -> \" +  error);\n        }\n    },\n    getParamFlutter (param){\n        let value = '';\n        if (cc.sys.os == cc.sys.OS_ANDROID) {\n            value = jsb.reflection.callStaticMethod(\"com/base/getx/base_architecture/game/PlayGameActivity\", param, \"()Ljava/lang/String;\");\n            // value = jsb.reflection.callStaticMethod(\"org/cocos2dx/javascript/AppActivity\", param, \"()Ljava/lang/String;\");\n        }\n        else if (cc.sys.os == cc.sys.OS_IOS) {\n            value = jsb.reflection.callStaticMethod(\"AppController\", param);\n        }\n        return value;\n    },\n\n    formatBytes(bytes) {\n        return (bytes/ 1048576).toFixed(2) + \"MB\";\n    },\n\n    checkUpdate() {\n        this.log(\"checkUpdate\");\n        if (!this._am) {\n            this.log(\"Asset manager not found!\");\n        }\n        if (this._am.getState() === jsb.AssetsManager.State.UNINITED) {\n            // Resolve md5 url\n            this.log('Load local manifest');\n            this._am.loadLocalManifest(this._localManifestPath);\n        }\n        if (!this._am.getLocalManifest() || !this._am.getLocalManifest().isLoaded()) {\n            this.log(\"unable to get manifest\");\n            this.initLocalManifestFailed();\n            return;\n        }\n        this._am.setEventCallback(this.checkCb.bind(this));\n        this._am.checkUpdate();\n        this.updateState(HOTUPDATE_STATUS.CHECK_UPDATE);\n    },\n\n    checkCb (event) {\n        switch (event.getEventCode()) {\n            case jsb.EventAssetsManager.ERROR_NO_LOCAL_MANIFEST:\n                this.getLocalManifestFailed();\n                break;\n            case jsb.EventAssetsManager.ERROR_DOWNLOAD_MANIFEST:\n            case jsb.EventAssetsManager.ERROR_PARSE_MANIFEST:\n                this.downloadManifestFailed();\n                break;\n            case jsb.EventAssetsManager.ALREADY_UP_TO_DATE:\n                this.updateState(HOTUPDATE_STATUS.ALREADY_UP_TO_DATE);\n                break;\n            case jsb.EventAssetsManager.NEW_VERSION_FOUND:\n                this.updateState(HOTUPDATE_STATUS.READY_TO_UPDATE);\n                break;\n            default:\n                return;\n        }\n        this._am.setEventCallback(null);\n    },\n    hotUpdate() {\n        if (this._am) {\n            this._am.setEventCallback(this.updateCb.bind(this));\n            this._am.update();\n            this.updateState(HOTUPDATE_STATUS.UPDATING);   \n            this.network.string = \"\";   \n            this.network.node.active = false;      \n        }\n    },\n\n\n    updateState(stateName){\n        this.log('Current state: ' + stateName);\n        this._state = stateName;\n        this.btnRetry.active = false;\n        this.btnQuit.active = false;\n        switch(this._state){\n            case HOTUPDATE_STATUS.GET_CONFIG : \n                this.info.string = \"Kiểm tra phiên bản\";\n                this.detail.string = \"\\nĐang kiểm tra phiên bản.\";\n                this.detail.node.active = true;\n                break;\n            case HOTUPDATE_STATUS.CHECK_UPDATE :  \n                this.info.string = \"Kiểm tra phiên bản\";\n                this.detail.string = \"\\nĐang kiểm tra phiên bản.\"; \n                this.detail.node.active = true; \n                break;\n            case HOTUPDATE_STATUS.READY_TO_UPDATE :\n            {\n                this.panel.active = true;\n                // this.btnQuit.active = true;\n                const totalSize = this.calculateTotalSize();\n                this.info.string = \"Có phiên bản cập nhật mới\";\n                this.byteProgress.progress = 0;\n                const detailStr = \"Phiên bản cũ: \" + this._oldV + \" | Phiên bản mới: \" + this._newV + \"\\n\" +\n                \"Dung lượng tải: \" + totalSize;\n                this.detail.string = detailStr ;\n                this.detail.node.active = true;\n                this.scheduleOnce(this.hotUpdate, 0.5);\n                break; \n            }\n            case HOTUPDATE_STATUS.UPDATING:   \n                this.info.string = \"Đang cập nhật\";\n                this.detail.string = \"Đang tải bản cập nhật\\nXin chờ trong giây lát\";\n                this.detail.node.active = false;\n                break;\n            case HOTUPDATE_STATUS.UPDATE_FAILED :   \n                if(!this.isConnected()){\n                    this.updateNetworkState(NETWORK_STATUS.DISCONNECTED);\n                    this.reconnectNetwork(()=>{\n                        this.updateNetworkState(NETWORK_STATUS.CONNECTED);\n                        this.updateState(HOTUPDATE_STATUS.UPDATING); \n                        this._am.downloadFailedAssets();\n                        this.btnQuit.active = false;\n                    });\n                } else { \n                    if(this._retryInfo.downloadFailedAssetsCount === 0){\n                        this.downloadFailedAssetsInterval();\n                    } else {\n                        this._retryInfo.downloadFailedAssetsCount++;\n                        if(this._retryInfo.downloadFailedAssetsCount > this._retryInfo.maxOfCount ){\n                            this.btnRetry.active = true;\n                            this.btnQuit.active = true;\n                        }\n                    }\n                }\n                break;\n            case HOTUPDATE_STATUS.ALREADY_UP_TO_DATE :\n                this.onUpdateComplete();\n                break; \n            case HOTUPDATE_STATUS.UPDATE_SUCCESS :\n                this._am.setEventCallback(null);\n                this._updateListener = null;\n                // Prepend the manifest's search path\n                let searchPaths = jsb.fileUtils.getSearchPaths(); // eslint-disable-line\n                let newPaths = this._am.getLocalManifest().getSearchPaths(); // eslint-disable-line\n                // console.log(JSON.stringify(newPaths));\n                Array.prototype.unshift.apply(searchPaths, newPaths);\n                // This value will be retrieved and appended to the default search path during game startup,\n                // please refer to samples/js-tests/main.js for detailed usage.\n                // !!! Re-add the search paths in main.js is very important, otherwise, new scripts won't take effect.\n                cc.sys.localStorage.setItem('HotUpdateSearchPaths', JSON.stringify(searchPaths));\n                jsb.fileUtils.setSearchPaths(searchPaths);\n\n                cc.audioEngine.stopAll();\n                cc.game.restart();\n                break;\n        }\n    },\n    \n\n    updateNetworkState(stateName){\n        this._netWorkState = stateName;\n        switch(this._netWorkState){\n            case NETWORK_STATUS.CONNECTED :  \n                this.network.string = \"\";    \n                this.network.node.active = false;\n                break;\n            case NETWORK_STATUS.DISCONNECTED : \n                this.network.string = \"Không có kết nối...\";    \n                this.network.node.active = true;\n                this.network.node.color = new cc.Color(219, 53, 53, 255);\n                \n                break;\n        }\n    },\n\n    initLocalManifestFailed(){\n        this.log(\"initLocalManifestFailed \" + this._state);\n        this.btnRetry.active = false;\n        this.btnQuit.active = false;\n        this.info.string = \"Kiểm tra phiên bản\";\n        this.detail.string = \"Không có bản cập nhật mới.\";\n        this.detail.node.active = true;\n        setTimeout(() => {\n            this.onUpdateComplete();\n        }, 100);   \n    },\n\n    downloadManifestFailed(){\n        this.btnRetry.active = true;\n        this.btnQuit.active = true;\n        this.detail.string = \"Có lỗi xảy ra, vui lòng thử lại.\";\n        this.detail.node.active = true;\n    },\n\n    reconnectNetwork(callback){\n        clearInterval(this._retryInfo.reConnectInterval);\n        this._retryInfo.reconnectCount = 0;\n        this._retryInfo.reConnectInterval = setInterval(() => {  \n            this._retryInfo.reconnectCount++;\n            if(this.isConnected()){\n                clearInterval(this._retryInfo.reConnectInterval);\n                this._retryInfo.reconnectCount = 0;\n                this.btnQuit.active = false;\n                callback();\n            } else {\n                if(this._retryInfo.reconnectCount > this._retryInfo.maxOfCount ){\n                    this.btnRetry.active = false;\n                    this.btnQuit.active = true;\n                }\n            }\n        }, this._retryInfo.reconnectionDelay);\n    },\n\n    downloadFailedAssetsInterval(){\n        clearInterval(this._retryInfo.downloadFailedAssetsInterval);\n        this._retryInfo.downloadFailedAssetsCount++;\n        this._am.downloadFailedAssets();\n        this._retryInfo.downloadFailedAssetsInterval = setInterval(() => {  \n            if(this._retryInfo.downloadFailedAssetsCount > this._retryInfo.maxOfCount ){\n                clearInterval(this._retryInfo.downloadFailedAssetsInterval);\n                this.btnRetry.active = true;\n                this.btnQuit.active = true;\n            } else {\n                this._am.downloadFailedAssets();\n            }\n        }, this._retryInfo.downloadFailedAssetsDelay);\n    },\n\n    calculateTotalSize(){\n        if(jsb.fileUtils.isFileExist(this._storagePath+ \"_temp/project.manifest.temp\")){\n            let loadManifest = jsb.fileUtils.getStringFromFile(this._storagePath+ \"_temp/project.manifest.temp\");\n            let manifestObject = JSON.parse(loadManifest);\n            let totalSize = 0;\n            for(const key in manifestObject.assets){\n                let obj = manifestObject.assets[key];\n                totalSize += obj.size;\n            }\n            totalSize = this.formatBytes(totalSize);\n            this.log('Total size calculated:' + totalSize);\n            return totalSize;\n        } else {\n            this.log('no temp manifest found');\n            return null;\n        }\n    },\n\n    updateCb (event) {\n        let failed = false;\n        this._failedCount = (this._failedCount) ? this._failedCount : 0;\n        switch (event.getEventCode()) {\n            case jsb.EventAssetsManager.ERROR_NO_LOCAL_MANIFEST:\n                this.updateState(HOTUPDATE_STATUS.GET_LOCAL_MANIFEST_FAILED);\n                failed = true;\n                break;\n            case jsb.EventAssetsManager.UPDATE_PROGRESSION:\n                {  \n                    if(this._retryInfo.downloadFailedAssetsInterval){\n                        clearInterval(this._retryInfo.downloadFailedAssetsInterval);\n                        this._retryInfo.downloadFailedAssetsInterval = null;\n                        this._retryInfo.downloadFailedAssetsCount = 0;\n                        this.updateState(HOTUPDATE_STATUS.UPDATING); \n                    }\n\n                    this.detail.string = \"\";\n                    this.detail.node.active = false;\n                    this.byteProgress.node.active = true;\n                    let downloaded = event.getDownloadedBytes();\n                    let total = event.getTotalBytes();\n                    if (total > 0){\n                        this.byteProgress.progress = downloaded / total;\n                    }\n                    // this.log(\"Total size:\" + this.formatBytes(total));\n                    //this.byteLabel.string = this.formatBytes(downloaded) + \"/\" + this.formatBytes(total);\n                    const percent = Math.floor((downloaded/total)*100);\n                    this.byteLabel.string = percent ? percent + \"%\" : \"0%\";\n                }\n                break;\n            case jsb.EventAssetsManager.ASSET_UPDATED:\n                this._failedCount = 0;\n                this.detail.string = \"\";\n                this.detail.node.active = false;\n                this.btnQuit.active = false;\n                this.updateNetworkState(NETWORK_STATUS.CONNECTED);\n                break;\n            case jsb.EventAssetsManager.ERROR_DOWNLOAD_MANIFEST:\n            case jsb.EventAssetsManager.ERROR_PARSE_MANIFEST:\n                this.downloadManifestFailed();\n                failed = true;\n                break;\n            case jsb.EventAssetsManager.ALREADY_UP_TO_DATE:         \n                this.updateState(HOTUPDATE_STATUS.ALREADY_UP_TO_DATE);\n                break;\n            case jsb.EventAssetsManager.UPDATE_FINISHED:\n                this.updateState(HOTUPDATE_STATUS.UPDATE_SUCCESS);\n                break;\n            case jsb.EventAssetsManager.UPDATE_FAILED:\n                this.updateState(HOTUPDATE_STATUS.UPDATE_FAILED);\n                break;\n            case jsb.EventAssetsManager.ERROR_UPDATING:\n                this._failedCount++;\n                this.log('Asset update error: ' + event.getAssetId() + ', ' + event.getMessage());\n                if(!this.isConnected()){\n                    this.updateNetworkState(NETWORK_STATUS.DISCONNECTED);\n                }\n                if(this._failedCount > 3){\n                    this.detail.node.active = true;\n                    this.detail.string = \"Có lỗi xảy ra!\";\n                    this.btnQuit.active = true;\n                }\n                break;\n            case jsb.EventAssetsManager.ERROR_DECOMPRESS:\n                this.log('Asset decompress failed: ' + event.getAssetId() + ', ' + event.getMessage());\n                break;\n            default:\n                break;\n        }\n\n        if (failed) {\n            this._am.setEventCallback(null);\n            this._updateListener = null;\n        }\n    },\n\n    isConnected(){\n        return cc.sys.getNetworkType() !== cc.sys.NetworkType.NONE;\n    },\n\n    onClickRetry(){\n        this.btnRetry.active = false;\n        this.btnQuit.active = false;\n        switch(this._state){\n            case HOTUPDATE_STATUS.CHECK_UPDATE : \n            case HOTUPDATE_STATUS.UPDATING : \n                this.checkUpdate();\n                this.info.string = \"Kiểm tra phiên bản\";\n                this.detail.string = \"\\nĐang kiểm tra phiên bản.\";\n                this.detail.node.active = true;\n                break;\n            case HOTUPDATE_STATUS.UPDATE_FAILED : \n                this.info.string = 'Đang thử tải lại';\n                this.detail.string = \"\";\n                this.detail.node.active = false;\n                this._am.downloadFailedAssets();\n                break;\n        }\n    },\n    onClickQuit() {\n        this.reset();\n        const {handleCloseGameIframe} = require(\"gameCommonUtils\");\n        handleCloseGameIframe();\n    },\n    log(msg){\n        console.log(\"::HOT UPDATE:: \" + this.gameId + \" - \" + msg);\n    },\n\n    _verifyFileHandle(path, asset) {\n        // When asset is compressed, we don't need to check its md5, because zip file have been deleted.\n        if (asset.compressed) {\n            return true;\n        }\n        let resMD5 = MD5(jsb.fileUtils.getDataFromFile(path));\n        return asset.md5 == resMD5;\n    },\n\n    versionCompareHandle(versionA, versionB) {\n        //this.panel.version.string = \"Current Version: \" + versionA;\n        this._oldV = versionA;\n        this._newV = versionB;\n        this.log(\"Version Compare: version A is \" + versionA + ', version B is ' + versionB);\n        var vA = versionA.split('.');\n        var vB = versionB.split('.');\n        for (var i = 0; i < vA.length; ++i) {\n            var a = parseInt(vA[i]);\n            var b = parseInt(vB[i] || 0);\n            if (a === b) {\n                continue;\n            }\n            else {\n                return a - b;\n            }\n        }\n        if (vB.length > vA.length) {\n            return -1;\n        }\n        else {\n            return 0;\n        }\n    },\n    onUpdateComplete(){\n        this.log(\"onUpdateComplete - \" + this.loadSceneName);\n        cc.director.loadScene(this.loadSceneName);\n    },\n\n    reset(){\n        clearInterval(this._retryInfo.downloadFailedAssetsInterval);\n        clearInterval(this._retryInfo.reConnectInterval);\n        this.byteProgress.progress = 0;\n        this.byteProgress.node.active = false;\n        this.byteLabel.string = \"\";\n        this.detail.string = \"\";\n        this.detail.node.active = false;\n        this.btnRetry.active = false;\n        this.btnQuit.active = false;\n    },\n\n    onDestroy() {\n        if (this._updateListener) {\n            this._am.setEventCallback(null);\n            this._updateListener = null;\n        }\n    }\n\n    \n});"]}