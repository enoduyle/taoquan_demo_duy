{"version":3,"sources":["animateNumberLabel.js"],"names":["require","formatMoney","formatWalletMoney","getUtilConfig","formatCoin","cc","Class","extends","Component","onLoad","node","onUpdateValue","bind","onUpdateWallet","onUpdateWinValue","onUpdateCredit","setDecimalCount","resetValue","currentValue","decimalCount","clearInterval","timer","label","getComponent","Label","string","utilConfig","CURRENCY_CONFIG","stop","tweenMoneyByCurrency","duration","endValue","currentVal","_target","value","tweenMoney","tween","to","progress","start","end","current","ratio","Number","call","animationDuration","acceptRunDown","prefix","suffixes","_tweenMoney","parseInt","range","minTimer","stepTime","Math","abs","floor","max","startTime","Date","getTime","endTime","run","now","remaining","round","setInterval","callbackWin","isSkip","millisecond","timeUpdate","superWinRate","megaWinRate","timeRate","valuePerTimes","valueAccelerator","pow","isSuper","currentBetData","isMega","finalWin","per","enterFrame","runSuperWin","runMegaWin","runFinishBigWin","runFinishWin","_tweenWallet","tweenWalletByCurrency","onDestroy","_tweenCredit","tweenCredit"],"mappings":"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","file":"animateNumberLabel.js","sourceRoot":"../../../../../../../assets/cc-common/cc-share-v1/common/viewComponent","sourcesContent":["\n\nconst {formatMoney, formatWalletMoney, getUtilConfig, formatCoin } = require('utils');\n\ncc.Class({\n    extends: cc.Component,\n    onLoad() {\n        this.node.onUpdateValue = this.onUpdateValue.bind(this);\n        this.node.onUpdateWallet = this.onUpdateWallet.bind(this);\n        this.node.onUpdateWinValue = this.onUpdateWinValue.bind(this);\n        this.node.onUpdateCredit = this.onUpdateCredit.bind(this);\n        this.node.setDecimalCount = this.setDecimalCount.bind(this);\n        this.node.resetValue = this.resetValue.bind(this);\n        this.currentValue = 0;\n        this.decimalCount = null;\n    },\n\n    setDecimalCount(decimalCount = 0) {\n        this.decimalCount = decimalCount;\n    },\n\n    resetValue() {\n        if (!this.node) return;\n        clearInterval(this.timer);\n        const label = this.node.getComponent(cc.Label);\n        label.string = '';\n        this.currentValue = 0;\n\n        const utilConfig = getUtilConfig && getUtilConfig();\n        if (utilConfig && utilConfig.CURRENCY_CONFIG && label[\"_tweenMoney\"]) {\n            label[\"_tweenMoney\"].stop();\n        }\n    },\n\n    tweenMoneyByCurrency(label, duration, endValue) {\n        if (label[\"_tweenMoney\"]) label[\"_tweenMoney\"].stop(); // stop if on tween;\n        \n        let currentVal = this.currentValue || 0;\n        this.currentValue = currentVal;\n        const _target = { value: currentVal };\n        let tweenMoney = cc.tween(_target)\n            .to(duration, { value: endValue}, {\n                progress: (start, end, current, ratio) => {\n                    this.currentValue = current;\n                    label.string = formatMoney(Number(current), this.decimalCount);\n                    return start + (end - start) * ratio;\n                }\n            })\n            .call(() => {\n                this.currentValue = endValue;\n                label.string = formatMoney(endValue, this.decimalCount);\n                label[\"_tweenMoney\"] = null;\n            })\n            .start();\n        label[\"_tweenMoney\"] = tweenMoney;\n        return tweenMoney;\n    },\n\n    onUpdateValue(end = 0, animationDuration = 3000, acceptRunDown = true, prefix = \"\", suffixes = \"\") {\n        clearInterval(this.timer);\n        if (!this.node) return;\n\n        const utilConfig = getUtilConfig && getUtilConfig();\n        if (utilConfig && utilConfig.CURRENCY_CONFIG && end >= 0) {\n            const label = this.node.getComponent(cc.Label);\n            const start = this.currentValue ? this.currentValue : 0;\n            if (!acceptRunDown && end < start) {\n                this.currentValue = end;\n                label.string = formatMoney(this.currentValue, this.decimalCount);\n                return;\n            }\n            this._tweenMoney = this.tweenMoneyByCurrency(label, animationDuration / 1000, end);\n            return;\n        } else {\n            end = parseInt(end);\n        }\n        const label = this.node.getComponent(cc.Label);\n        const start = this.currentValue ? this.currentValue : 0;\n\n        if (!acceptRunDown && end < start)\n        {\n            this.currentValue = end;\n            label.string = prefix + formatMoney(this.currentValue) + suffixes;\n            return;\n        }\n\n        // assumes integer values for start and end\n        const range = end - start;\n        // no timer shorter than 50ms (not really visible any way)\n        const minTimer = 50;\n        // calc step time to show all interediate values\n        let stepTime = Math.abs(Math.floor(animationDuration / range));\n        // never go below minTimer\n        stepTime = Math.max(stepTime, minTimer);\n        // get current time and calculate desired end time\n        const startTime = new Date().getTime();\n        const endTime = startTime + animationDuration;\n        this.timer;\n\n        const run = () => {\n            const now = new Date().getTime();\n            const remaining = Math.max((endTime - now) / animationDuration, 0);\n            const value = Math.round(end - (remaining * range));\n            this.currentValue = value;\n            label.string = prefix + formatMoney(value) + suffixes;\n            if (value == end) {\n                clearInterval(this.timer);\n            }\n        };\n        this.timer = setInterval(run, stepTime);\n        run();\n    },\n\n    onUpdateWinValue(end = 0, animationDuration = 3000, callbackWin = {}, isSkip, millisecond = 1000, timeUpdate = 50, superWinRate = 50, megaWinRate = 30) {\n        clearInterval(this.timer);\n        if (!this.node) return;\n        const label = this.node.getComponent(cc.Label);\n        const timeRate = millisecond / timeUpdate;\n        this.currentValue = this.currentValue || 0;\n        let valuePerTimes = Math.round(end / (animationDuration / millisecond * timeRate));\n        // a = ((s - v0 * t) * 2) / t^2\n        const valueAccelerator = ((end - (valuePerTimes * timeUpdate)) * 2) / Math.pow(timeUpdate, 2); \n        const run = () => {\n            this.currentValue =  Math.round(this.currentValue <= end / 2 ? this.currentValue + valuePerTimes + valueAccelerator : this.currentValue + valuePerTimes - valueAccelerator);\n            let value = this.currentValue;\n            label.string = formatMoney(value >= end ? end : value);\n            \n            const isSuper = end >= callbackWin.currentBetData * superWinRate;\n            const isMega = end >= callbackWin.currentBetData * megaWinRate;\n            let finalWin = isSuper ? 'super' : isMega ? 'mega' : 'big';\n            \n            let per = value / end;\n            per = per > 1 ? 1 : per;\n            callbackWin.enterFrame(per, finalWin);\n\n            if (value >= callbackWin.currentBetData * superWinRate && !isSkip) {\n                callbackWin.runSuperWin();\n            } else if (value >= callbackWin.currentBetData * megaWinRate && !isSkip) {\n                callbackWin.runMegaWin();\n            } else if(value + callbackWin.currentBetData * 2 == end && !isSkip) {\n                callbackWin.runFinishBigWin();\n            }\n            if (value >= end) {\n                callbackWin.runFinishWin();\n                clearInterval(this.timer);\n            }\n        };\n        this.timer = setInterval(run, timeUpdate);\n        run();\n    },\n\n    onUpdateWallet(end, animationDuration = 3000) {\n        clearInterval(this.timer);\n        if (!this.node) return;\n        \n        const utilConfig = getUtilConfig && getUtilConfig();\n        if (utilConfig && utilConfig.CURRENCY_CONFIG) {\n            const label = this.node.getComponent(cc.Label);\n            this._tweenWallet = this.tweenWalletByCurrency(label, animationDuration / 1000, end);\n            return;\n        } else {\n            end = parseInt(end);\n        }\n\n        const label = this.node.getComponent(cc.Label);\n        const start = this.currentValue ? this.currentValue : 0;\n        // assumes integer values for start and end\n        const range = end - start;\n        // no timer shorter than 50ms (not really visible any way)\n        const minTimer = 50;\n        // calc step time to show all interediate values\n        let stepTime = Math.abs(Math.floor(animationDuration / range));\n        // never go below minTimer\n        stepTime = Math.max(stepTime, minTimer);\n        // get current time and calculate desired end time\n        const startTime = new Date().getTime();\n        const endTime = startTime + animationDuration;\n        this.timer;\n\n        const run = () => {\n            const now = new Date().getTime();\n            const remaining = Math.max((endTime - now) / animationDuration, 0);\n            const value = Math.round(end - (remaining * range));\n            this.currentValue = value;\n            label.string = formatWalletMoney(value);\n            if (value == end) {\n                clearInterval(this.timer);\n            }\n        };\n        this.timer = setInterval(run, stepTime);\n        run();\n    },\n\n    tweenWalletByCurrency(label, duration, endValue) {\n        if (label[\"_tweenMoney\"]) label[\"_tweenMoney\"].stop();\n        let currentVal = this.currentValue || 0;\n        this.currentValue = currentVal;\n        const _target = { value: currentVal };\n        let tweenMoney = cc.tween(_target)\n            .to(duration, { value: endValue}, {\n                progress: (start, end, current, ratio) => {\n                    this.currentValue = Number(current);\n                    label.string = formatWalletMoney(Number(this.currentValue));\n                    return start + (end - start) * ratio;\n                }\n            })\n            .call(() => {\n                this.currentValue = endValue;\n                label.string = formatWalletMoney(endValue, this.decimalCount);\n                label[\"_tweenMoney\"] = null;\n            })\n            .start();\n        label[\"_tweenMoney\"] = tweenMoney;\n        return tweenMoney;\n    },\n\n    onDestroy() {\n        this._tweenMoney && this._tweenMoney.stop();\n        this._tweenWallet && this._tweenWallet.stop();\n        this._tweenCredit && this._tweenCredit.stop();\n        clearInterval(this.timer);\n    },\n\n    onUpdateCredit(end = 0, animationDuration = 3000, acceptRunDown = true, prefix = \"\", suffixes = \"\") {\n        if (!this.node) return;\n        const utilConfig = getUtilConfig && getUtilConfig();\n        if (utilConfig && utilConfig.CURRENCY_CONFIG && end >= 0) {\n            const label = this.node.getComponent(cc.Label);\n            const start = this.currentValue ? this.currentValue : 0;\n            if (!acceptRunDown && end < start) {\n                this.currentValue = end;\n                label.string = formatCoin(this.currentValue);\n                return;\n            }\n            this._tweenCredit = this.tweenCredit(label, animationDuration / 1000, end);\n            return;\n        } else {\n            this.onUpdateValue(end, animationDuration, acceptRunDown, prefix, suffixes);\n        }\n    },\n\n    tweenCredit(label, duration, endValue) {\n        if (label[\"_tweenMoney\"]) label[\"_tweenMoney\"].stop(); // stop if on tween;\n        \n        let currentVal = this.currentValue || 0;\n        this.currentValue = currentVal;\n        const _target = { value: currentVal };\n        let tweenMoney = cc.tween(_target)\n            .to(duration, { value: endValue}, {\n                progress: (start, end, current, ratio) => {\n                    label.string = formatCoin(Number(current));\n                    return start + (end - start) * ratio;\n                }\n            })\n            .call(() => {\n                this.currentValue = endValue;\n                label.string = formatCoin(endValue);\n                label[\"_tweenMoney\"] = null;\n            })\n            .start();\n        label[\"_tweenMoney\"] = tweenMoney;\n        return tweenMoney;\n    }\n});\n"]}