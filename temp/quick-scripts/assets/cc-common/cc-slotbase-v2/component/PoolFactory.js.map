{"version":3,"sources":["PoolFactory.js"],"names":["PoolPrefab","cc","Class","name","properties","prefabName","default","objectPrefab","type","Prefab","initialCount","extends","Component","poolPrefabList","onLoad","pools","i","length","compName","aPool","NodePool","j","obj","instantiate","active","put","poolObject","pool","node","poolFactory","getObject","_prefabName","size","get","removeObject","onDestroy","clear"],"mappings":"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","file":"PoolFactory.js","sourceRoot":"../../../../../../assets/cc-common/cc-slotbase-v2/component","sourcesContent":["\n\nconst PoolPrefab = cc.Class({\n    name: 'PoolPrefab',\n    properties:{\n        prefabName: {\n            default: '',\n        },\n\n        objectPrefab: {\n            type: cc.Prefab,\n            default: null,\n        },\n\n        initialCount: 5,\n    }\n});\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        poolPrefabList: {\n            type: PoolPrefab,\n            default: [],\n        }\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        this.pools = [];\n        for(let i = 0; i<this.poolPrefabList.length; i++){\n            let compName = this.poolPrefabList[i].prefabName;\n            const aPool = new cc.NodePool(compName);\n\n            for(let j = 0; j<this.poolPrefabList[i].initialCount; j++){\n                let obj = cc.instantiate(this.poolPrefabList[i].objectPrefab);\n                obj.name = compName;\n                obj.active = false;\n                aPool.put(obj);\n            }\n            const poolObject = {\n                prefabName: this.poolPrefabList[i].prefabName,\n                objectPrefab: this.poolPrefabList[i].objectPrefab,\n                pool: aPool,\n            };\n            this.pools[i] = poolObject;\n        }\n        this.node.poolFactory = this;\n    },\n\n    getObject(_prefabName){\n        let obj = null;\n        for(let i = 0; i<this.pools.length; i++){\n            const {prefabName, objectPrefab, pool} = this.pools[i];\n            if(prefabName == _prefabName){\n                if(pool.size()>0){\n                    obj = pool.get();\n                }else{\n                    obj = cc.instantiate(objectPrefab);\n                    obj.name = prefabName;\n                    obj.active = false;\n                }\n                break;\n            }\n        }\n        return obj;\n    },\n\n    removeObject(node){\n        let name = node.name;\n        for(let i = 0; i<this.pools.length; i++){\n            const {prefabName, pool} = this.pools[i];\n            if(name == prefabName){\n                node.active = false;\n                pool.put(node);\n                break;\n            }\n        }\n    },\n\n    onDestroy(){\n        for(let i = 0; i<this.pools.length; i++){\n            const {pool} = this.pools[i];\n            if(pool){\n                pool.clear();\n            }\n            this.poolPrefabList[i].objectPrefab = null;\n        }\n        this.pools = [];\n        this.pools = null;\n        this.poolPrefabList = [];\n        this.poolPrefabList = null;\n        this.node.poolFactory = null;\n    },\n});\n"]}