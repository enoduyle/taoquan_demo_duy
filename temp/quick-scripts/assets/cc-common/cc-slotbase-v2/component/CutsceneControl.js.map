{"version":3,"sources":["CutsceneControl.js"],"names":["require","convertAssetArrayToObject","cc","Class","extends","Component","properties","cutscenes","type","Node","default","onLoad","cutscenesList","node","on","playCutScene","closeCutScene","skipCutscenes","closeAllNotices","name","contents","callback","emit","i","length","isDisplayDialog","dialogNode","getChildByName","bigWinNode","active","isDisplayCutscene","res","cutscene","opacity","fullDisplay","children","getDisplayCutscene","result"],"mappings":"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","file":"CutsceneControl.js","sourceRoot":"../../../../../../assets/cc-common/cc-slotbase-v2/component","sourcesContent":["\n\nconst {convertAssetArrayToObject} = require('utils');\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        cutscenes: {\n            type: cc.Node,\n            default: []\n        }\n    },\n    onLoad () {\n        this.cutscenesList = convertAssetArrayToObject(this.cutscenes);\n        this.node.on(\"PLAY_CUTSCENE\",this.playCutScene,this);\n        this.node.on(\"CLOSE_CUTSCENE\",this.closeCutScene,this);\n        this.node.on(\"SKIP_CUTSCENES\", this.skipCutscenes, this);\n        this.node.on(\"CLOSE_ALL_NOTICES\", this.closeAllNotices, this);\n    },\n    playCutScene(name, contents, callback) {\n        if (this.cutscenesList[name]) {\n            this.cutscenesList[name].emit(\"PLAY\",contents,() => {\n                if (callback && typeof callback == \"function\") {\n                    callback();\n                }\n            });\n        } else {\n            if (callback && typeof callback == \"function\") {\n                callback();\n            }\n        } \n    },\n\n    closeCutScene(name, callback) {\n        if (this.cutscenesList[name]) {\n            this.cutscenesList[name].emit(\"HIDE\",() => {\n                if (callback && typeof callback == \"function\") {\n                    callback();\n                }\n            });\n        } else {\n            if (callback && typeof callback == \"function\") {\n                callback();\n            }\n        } \n    },\n\n    skipCutscenes(){\n        for(let i = 0; i<this.cutscenes.length; i++){\n            this.cutscenes[i].emit(\"SKIP\");\n        }\n    },\n\n    isDisplayDialog()\n    {\n        let dialogNode = this.node.getChildByName(\"DialogMessage\");\n        let bigWinNode = this.node.getChildByName(\"BigWinEffect\");\n        return (dialogNode && dialogNode.active || bigWinNode && bigWinNode.active); \n    },\n\n    isDisplayCutscene(){\n        let res = false;\n        for(let i = 0; i<this.cutscenes.length; i++){\n            const cutscene = this.cutscenes[i];\n            if(cutscene && cutscene.active && cutscene.opacity === 255 && cutscene.fullDisplay){\n                res = true;\n                break;\n            }\n        }\n        return res;\n    },\n\n    closeAllNotices(){\n        for(let i = 0; i < this.node.children.length; i++){\n            const cutscene = this.node.children[i];\n            cutscene.emit(\"CLOSE_NOTICE\");\n        }\n    },\n\n    getDisplayCutscene() {\n        let result = '';\n        for(let i = 0; i<this.cutscenes.length; i++){\n            const cutscene = this.cutscenes[i];\n            if(cutscene && cutscene.active && cutscene.opacity === 255){\n                result = cutscene.name;\n                break;\n            }\n        }\n        return result;\n    }\n});\n"]}