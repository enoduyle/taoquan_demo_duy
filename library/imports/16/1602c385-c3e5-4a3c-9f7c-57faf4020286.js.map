{"version":3,"sources":["../../../../../../../assets/cc-common/cc-share-v1/History/Scripts/assets/cc-common/cc-share-v1/History/Scripts/BetCellHistory.js"],"names":["require","formatMoney","cc","Class","extends","properties","session","Node","betDenom","betLines","totalbet","detailBtn","featureGroup","freeCircle","bonusCircle","topUpCircle","jackpotCircle","positionCircles","onLoad","_super","node","config","PAY_LINE_ALLWAYS","JSON","stringify","TABLE_FORMAT","totalLineCount","active","updateData","data","playSessionId","sessionId","getComponent","Label","string","substring","length","time","formatTimeStamp","parseInt","Number","totalBetAmount","winAmount","totalWinAmount","bettingLines","match","dataDetail","freeGameTotal","totalBonusWinAmount","addCircle","onClickDetail","opacity","clickItemEvent","Event","EventCustom","setUserData","summaryData","dispatchEvent","soundPlayer","playSFXClick","listMode","totalJpWinAmount","push","forEach","item","index","position","setPosition"],"mappings":"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","file":"BetCellHistory.js","sourceRoot":"../../../../../../../assets/cc-common/cc-share-v1/History/Scripts","sourcesContent":["const { formatMoney } = require('utils');\n\ncc.Class({\n    extends: require(\"BaseCellHistory\"),\n\n    properties: {\n        session: cc.Node,\n        betDenom: cc.Node,\n        betLines: cc.Node,\n        totalbet: cc.Node,\n        detailBtn: cc.Node,\n        featureGroup: cc.Node,\n        \n        freeCircle: cc.Node,        //yellow\n        bonusCircle: cc.Node,       //blue\n        topUpCircle: cc.Node,       //green \n        jackpotCircle: cc.Node,     //red\n        positionCircles: [cc.Node],\n    },\n\n    onLoad() {\n        this._super();\n        if (this.node.config.PAY_LINE_ALLWAYS) {\n            if (JSON.stringify(this.node.config.TABLE_FORMAT) === \"[3,3,3,3,3]\")\n                this.totalLineCount = '243';\n            else\n                this.totalLineCount = 'All ways';\n        }\n        if (this.freeCircle) this.freeCircle.active = false;\n        if (this.bonusCircle) this.bonusCircle.active = false;\n        if (this.topUpCircle) this.topUpCircle.active = false;\n        if (this.jackpotCircle) this.jackpotCircle.active = false;\n    },\n\n    updateData(data) {\n        this.detailBtn.active = false;\n\n        if (!data) return;\n        this.playSessionId = data.sessionId;\n        this.session.getComponent(cc.Label).string = \"#\" + data.sessionId.substring(data.sessionId.length-8, data.sessionId.length);\n        this.time.getComponent(cc.Label).string = this.formatTimeStamp(parseInt(data.time));\n        if(this.betDenom)this.betDenom.getComponent(cc.Label).string = Number(data.betDenom);\n        this.totalbet.getComponent(cc.Label).string = formatMoney(Number(data.totalBetAmount));\n        this.winAmount.getComponent(cc.Label).string = formatMoney(data.totalWinAmount);\n\n        if (this.node.config.PAY_LINE_ALLWAYS)\n            this.betLines.getComponent(cc.Label).string = this.totalLineCount;\n        else\n        {\n            this.betLines.getComponent(cc.Label).string = (data.bettingLines.match(/,/g) || []).length + 1;\n        }\n\n        this.detailBtn.active = true;\n\n        this.dataDetail = data;\n        if(this.featureGroup){\n            this.freeCircle.active = data.freeGameTotal > 0;\n            this.bonusCircle.active = data.totalBonusWinAmount > 0;\n        }\n        this.addCircle(data);\n    },\n\n    onClickDetail() {\n        if (this.node.opacity < 255) return; \n        this.clickItemEvent = new cc.Event.EventCustom('OPEN_BET_DETAIL', true);\n        this.clickItemEvent.setUserData({\n            sessionId: this.playSessionId,\n            summaryData: this.dataDetail,\n        });\n        this.node.dispatchEvent(this.clickItemEvent);\n        if (this.node.soundPlayer) this.node.soundPlayer.playSFXClick();\n    },\n\n    addCircle(data) {\n        if (!data) return;\n        let listMode = [];\n        if (this.freeCircle) this.freeCircle.active = false;\n        if (this.bonusCircle) this.bonusCircle.active = false;\n        if (this.topUpCircle) this.topUpCircle.active = false;\n        if (this.jackpotCircle) this.jackpotCircle.active = false;\n\n        const { freeGameTotal, totalJpWinAmount, totalBonusWinAmount } = data;\n\n        if (totalJpWinAmount && totalJpWinAmount > 0 && this.jackpotCircle) {\n            this.jackpotCircle.active = true;\n            listMode.push(this.jackpotCircle);\n        }\n        if (totalBonusWinAmount && totalBonusWinAmount > 0 && this.bonusCircle) {\n            this.bonusCircle.active = true;\n            listMode.push(this.bonusCircle);\n        }\n\n        if (freeGameTotal && this.freeCircle) {\n            this.freeCircle.active = true;\n            listMode.push(this.freeCircle);\n        }\n\n        if (listMode.length > 0 && this.positionCircles.length > 0) {\n            listMode.forEach((item, index) => {\n                const position = this.positionCircles[index].position;\n                item.setPosition(position);\n            });\n        }\n    }\n});\n\n"]}