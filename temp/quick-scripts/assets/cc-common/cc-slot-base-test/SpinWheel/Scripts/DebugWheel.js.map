{"version":3,"sources":["DebugWheel.js"],"names":["require","GUI","NETWORK_STATE","NORMAL","SLOW","cc","Class","extends","Component","properties","spinWheel","resultLabel","Label","start","_config","getConfig","wheelOptions","maxSpeed","endSpeed","delayStop","speedUpTime","slowDownTime","bufferStop","_exportConfig","_createGui","networkState","gui","domElement","parentElement","style","zIndex","wheelGui","addFolder","key","control","add","onChange","value","_updateConfig","_showResultLabel","open","setResult","init","label","string","result","resultItem","node","parent","active","angle","totalItem","dataStr","JSON","stringify","dataUri","encodeURIComponent","exportFileDefaultName","linkElement","document","createElement","setAttribute","click","testSpin","emit","tweenStart","tween","delay","call"],"mappings":"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","file":"DebugWheel.js","sourceRoot":"../../../../../../../assets/cc-common/cc-slot-base-test/SpinWheel/Scripts","sourcesContent":["const { GUI } = require('dat.gui');\nconst NETWORK_STATE = {\n    NORMAL: 0, \n    SLOW: 1\n}\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        spinWheel: require(\"SpinWheel\"),\n        resultLabel: cc.Label\n    },\n    start() {\n        this._config = this.spinWheel.getConfig();\n        this.wheelOptions = {\n            \"maxSpeed\": this._config.maxSpeed,\n            \"endSpeed\": this._config.endSpeed,\n            \"delayStop\": this._config.delayStop,\n            \"speedUpTime\": this._config.speedUpTime,\n            \"slowDownTime\": this._config.slowDownTime,\n            \"bufferStop\": this._config.bufferStop,\n            // rotate a bit more before stop with endSpeed\n            \"totalItem\": 12,\n            \"result\": 0,\n            \"Export Config\": () => { this._exportConfig() }\n        }\n        this._createGui();\n        this.networkState = NETWORK_STATE.NORMAL;\n    },\n    _createGui() {\n        const gui = new GUI();\n        gui.domElement.parentElement.style.zIndex = 1000;\n        this.wheelGui = gui.addFolder(\"Wheel Config\")\n        for (let key in this.wheelOptions) {\n            let control = this.wheelGui.add(this.wheelOptions, key);\n            if (typeof this.wheelOptions[key] === \"function\") continue;\n            control.onChange((value) => {\n                this.wheelOptions[key] = value;\n                this._updateConfig(key, value);\n            })\n        }\n        this._showResultLabel();\n        this.wheelGui.open();\n    },\n    _updateConfig(key, value) {\n        if (key === \"result\") {\n            this.spinWheel.setResult(value);\n            this._showResultLabel();\n        } else {\n            this._config[key] = value;\n        }\n        this.spinWheel.init(this._config);\n    },\n    _showResultLabel() {\n        const label = this.resultLabel;\n        label.string = this.wheelOptions.result;\n        const resultItem = label.node.parent;\n        resultItem.active = true;\n        resultItem.angle = 360 / this._config.totalItem * this.wheelOptions.result;\n    },\n    _exportConfig() {\n        let dataStr = JSON.stringify(this._config);\n        let dataUri = 'data:application/json;charset=utf-8,' + encodeURIComponent(dataStr);\n        let exportFileDefaultName = 'wheelConfig.json';\n        let linkElement = document.createElement('a');\n        linkElement.setAttribute('href', dataUri);\n        linkElement.setAttribute('download', exportFileDefaultName);\n        linkElement.click();\n    },\n    testSpin() {\n        this.spinWheel.node.emit(\"START_SPIN\")\n        this.tweenStart = cc.tween(this);\n        const { delayStop } =  this.wheelOptions;\n        switch (this.networkState) {\n            case NETWORK_STATE.NORMAL:\n                this.tweenStart\n                    .delay(0.2)\n                    .call(() => {\n                        this.spinWheel.setResult(this.wheelOptions.result);\n                    })\n                    .delay(this._config.speedUpTime + delayStop)\n                    .call(() => {\n                        this.spinWheel.node.emit(\"STOP_SPIN\")\n                    });\n                break;\n            case NETWORK_STATE.SLOW:\n                this.tweenStart\n                    .delay(this._config.speedUpTime + delayStop)\n                    .call(() => {\n                        this.spinWheel.setResult(this.wheelOptions.result);\n                        this.spinWheel.node.emit(\"STOP_SPIN\");\n                    });\n                break;\n        }\n        this.tweenStart.start();\n    },\n});\n"]}