{"version":3,"sources":["FreeSpinOptionCutscene.js"],"names":["InfoScreen","require","cc","Class","extends","properties","overlayNode","Node","contentNode","mainDirector","options","type","default","displayDuration","introFreeGame","waitingTimeToAutoSelect","onLoadExtended","_buttons","i","length","button","getComponent","Button","push","enter","log","enableAllButtons","off","on","selectOption","node","soundPlayer","playMainBGM","_isOptionSelected","_autoSelectOption","target","stopAction","gSlotDataStore","isTrialMode","sequence","delayTime","callFunc","runAction","opacity","scale","show","_super","isEnable","exceptionIndex","interactable","optionIndex","stopAllAudio","playSoundFreeSpinOptionClick","gameStateManager","triggerFreeSpinOption","resetNode","instantly","fadeOut","onDestroy"],"mappings":"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","file":"FreeSpinOptionCutscene.js","sourceRoot":"../../../../../../assets/cc-common/cc-slotbase-v2/component","sourcesContent":["\n\nconst InfoScreen = require('InfoScreen');\ncc.Class({\n    extends: InfoScreen,\n\n    properties: {\n        overlayNode: cc.Node,\n        contentNode: cc.Node,\n        mainDirector: cc.Node,\n        options: {\n            type: cc.Node,\n            default: []\n        },\n        displayDuration: 1,\n        introFreeGame: cc.Node,\n        waitingTimeToAutoSelect: 20,\n    },\n\n    onLoadExtended() {\n        this._buttons = [];\n        for (let i = 0; i < this.options.length; i++) {\n            const button = this.options[i].getComponent(cc.Button);\n            if (button) {\n                this._buttons.push(button);\n            }\n        }\n    },\n\n    enter() {\n        cc.log(`Enter Free Spin Option Cutscene`);\n        this.enableAllButtons(true);\n        for (let i = 0; i < this.options.length; i++) {\n            this.options[i].off(\"click\");\n            this.options[i].on(\"click\", () => {\n                this.selectOption(i + 1);\n            });\n        }\n        if (this.node.soundPlayer){\n            this.node.soundPlayer.playMainBGM(\"freeSpinOption\");\n        }\n        this._isOptionSelected = false;\n\n        if(this._autoSelectOption!=null && this._autoSelectOption.target!=null){\n            this.node.stopAction(this._autoSelectOption);\n        }\n\n        if(this.node.gSlotDataStore.isTrialMode == true){\n            this._autoSelectOption = cc.sequence(cc.delayTime(0.2), cc.callFunc(()=>{\n                this.selectOption(1);\n            }));\n        }else{\n            this._autoSelectOption = cc.sequence(cc.delayTime(this.waitingTimeToAutoSelect), cc.callFunc(()=>{\n                this.selectOption(2);\n            }));\n        }\n\n        this.node.runAction(this._autoSelectOption);\n\n        this.contentNode.opacity = 0;\n        this.contentNode.scale = 0.01;\n        this.overlayNode.opacity = 0;\n    },\n\n    show(){\n        this._super();\n        this.contentNode.opacity = 255;\n        this.contentNode.scale = 1;\n        this.overlayNode.opacity = 180;\n    },\n\n    enableAllButtons(isEnable, exceptionIndex = -1) {\n        for (let i = 0; i < this._buttons.length; i++) {\n            if (i != exceptionIndex) {\n                this._buttons[i].interactable = isEnable;\n            }\n            this._buttons[i].node.scale = 1;\n        }\n    },\n\n    selectOption(optionIndex) {\n        if (this._isOptionSelected == false) {\n            if (this.node.soundPlayer) {\n                this.node.soundPlayer.stopAllAudio();\n                this.node.soundPlayer.playSoundFreeSpinOptionClick();\n            }\n            this.node.runAction(cc.sequence(\n                cc.delayTime(0.5),\n                cc.callFunc(() => {\n                    cc.log(`Send Free Spin Option Index: ${optionIndex}`);\n                    this.mainDirector.getComponent('Director').gameStateManager.triggerFreeSpinOption(optionIndex);\n                    for (let i = 0; i < this.options.length; i++) {\n                        this.options[i].off(\"click\");\n                    }\n                })));\n            this._isOptionSelected = true;\n            this.enableAllButtons(false, optionIndex - 1);\n            if(this._autoSelectOption!=null && this._autoSelectOption.target!=null){\n                this.node.stopAction(this._autoSelectOption);\n            }\n        }\n    },\n\n    resetNode() {\n        if(this.instantly==true){\n            this.contentNode.opacity = 0;\n            this.overlayNode.opacity = 0;\n        }else{\n            this.contentNode.runAction(cc.fadeOut(0.5));\n            this.overlayNode.runAction(cc.fadeOut(0.5));\n        }\n\n        this._isOptionSelected = false;\n    },\n\n    onDestroy() {\n        this._buttons = [];\n        if(this._autoSelectOption!=null && this._autoSelectOption.target!=null){\n            this.node.stopAction(this._autoSelectOption);\n        }\n        this._autoSelectOption = null;\n    },\n});\n"]}