{"version":3,"sources":["SlotTableHistory9983.js"],"names":["cc","Class","extends","require","properties","normalSymbolNode","Node","freeSymbolNode234","freeSymbolNode15","normalMultiplyNode","freeMultiplyNode","wildOptionNode","onLoad","_super","highCostSymbols","lowCostSymbols","isShowFree","listSymbol","hideAllSymbolNode","freeGame","active","normalGame","renderResult","data","matrixResult","slice","mode","splice","clearTable","betDenom","currentMode","subSymGrandNormal","subSymMajorNormal","subSymGrandFree","subSymMajorFree","result","extraData","i","length","gameMode","martrixFormat","node","config","TABLE_FORMAT","opacity","renderGameTable","renderExtendData","TABLE_FORMAT_FREE","selectedOption","emit","paylines","replace","stringArr","split","gSlotDataStore","convertPayLine","paylineIndex","showingPayline","metaData","wildFreeMulplier","wildNormalMulplier","getMultiplier","mul","Number","wildMultiplier","matrix","format","fgOption","symbolWidth","SYMBOL_WIDTH","symbolHeight","SYMBOL_HEIGHT","count","changeToSymbol","j","symbol","getSymbol","startX","startY","parent","setPosition","removeSubSymbol","symbolName","col","row","val","indexOf","zIndex","push","forEach","subSymbol","showSmallSubSymbol","clearSymbol","symbolNode","pool","symbolPool","children","put"],"mappings":"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","file":"SlotTableHistory9983.js","sourceRoot":"../../../../../../assets/cc-taoquan-9983/scripts/history","sourcesContent":["\ncc.Class({\n    extends: require(\"SlotTableHistory\"),\n\n    properties: {\n        normalSymbolNode: cc.Node,\n        freeSymbolNode234: cc.Node,\n        freeSymbolNode15: cc.Node,\n\n        normalMultiplyNode: cc.Node,\n        freeMultiplyNode: cc.Node,\n\n        wildOptionNode: cc.Node,\n    },\n\n    onLoad() {\n        this._super();\n\n        this.highCostSymbols = [\"2\", \"3\", \"4\", \"5\", \"6\"];\n        this.lowCostSymbols = [\"7\", \"8\", \"9\", \"10\", \"J\", \"Q\"];\n\n        this.isShowFree = false;\n        this.listSymbol = [];\n    },\n\n    hideAllSymbolNode() {\n        this.freeGame.active = false;\n        this.normalGame.active = false;\n    },\n\n    renderResult(data) {\n        let matrixResult = data.matrixResult.slice();\n        if (data.mode == \"free\") {\n            matrixResult.splice(15, 0, \"1\");\n            matrixResult.splice(0, 0, \"1\");\n        }\n\n        this.hideAllSymbolNode();\n        this.clearTable();\n        this.betDenom = data.betDenom;\n        this.currentMode = data.mode;\n\n        this.subSymGrandNormal = [];\n        this.subSymMajorNormal = [];\n        this.subSymGrandFree = [];\n        this.subSymMajorFree = [];\n        const { result } = data;\n\n\n        if (result && result.extraData) {\n            if (result.extraData.subSymGrandNormal) {\n                this.subSymGrandNormal = [...result.extraData.subSymGrandNormal];\n            }\n            if (result.extraData.subSymMajorNormal) {\n                this.subSymMajorNormal = [...result.extraData.subSymMajorNormal];\n            }\n            if (result.extraData.subSymGrandFree) {\n                this.subSymGrandFree = [...result.extraData.subSymGrandFree];\n                for (let i = 0; i < this.subSymGrandFree.length; i++) {\n                    if (this.subSymGrandFree[i] >= 15) {\n                        this.subSymGrandFree[i] += 2;\n                    } else {\n                        this.subSymGrandFree[i] += 1;\n                    }\n                }\n            }\n            if (result.extraData.subSymMajorFree) {\n                this.subSymMajorFree = [...result.extraData.subSymMajorFree];\n                for (let i = 0; i < this.subSymMajorFree.length; i++) {\n                    if (this.subSymMajorFree[i] >= 15) {\n                        this.subSymMajorFree[i] += 2;\n                    } else {\n                        this.subSymMajorFree[i] += 1;\n                    }\n                }\n            }\n        }\n\n\n        this.gameMode = data.mode;\n\n        switch (data.mode) {\n            case \"normal\":\n                this.martrixFormat = this.node.config.TABLE_FORMAT;\n                this.normalSymbolNode.active = true;\n                this.freeSymbolNode234.active = false;\n                this.freeSymbolNode15.active = false;\n                this.isShowFree = false;\n                this.normalGame.active = true;\n                this.normalGame.opacity = 255;\n\n                this.renderGameTable(matrixResult, this.martrixFormat);\n                this.renderExtendData(data);\n\n                break;\n            case \"free\":\n                this.martrixFormat = this.node.config.TABLE_FORMAT_FREE;\n                this.normalSymbolNode.active = false;\n                this.freeSymbolNode234.active = true;\n                this.freeSymbolNode15.active = true;\n                this.isShowFree = true;\n                this.freeGame.active = true;\n                this.freeGame.opacity = 255;\n\n                this.renderGameTable(matrixResult, this.martrixFormat, data.selectedOption);\n                this.renderExtendData(data);\n\n                break;\n        }\n\n        this.normalMultiplyNode.emit(\"HIDE_FAST\");\n        this.freeMultiplyNode.emit(\"HIDE_FAST\");\n        if (data.paylines) {\n            data.paylines = data.paylines.replace(/\\s+/g, \"\");\n            let stringArr = data.paylines\n                .slice(1, data.paylines.length - 1)\n                .split(\",\");\n            this.paylines = this.node.gSlotDataStore.convertPayLine(stringArr);\n            this.paylineIndex = 0;\n            this.showingPayline = true;\n            \n            if (result && result['metaData']) {\n                const { metaData } = result;\n                if (metaData) {\n                    const { wildFreeMulplier, wildNormalMulplier } = metaData;\n\n                    if (wildNormalMulplier && wildNormalMulplier > 1) {\n                        this.normalMultiplyNode.emit(\"ACTIVE_FAST\", wildNormalMulplier, 7);\n                    }\n                    if (wildFreeMulplier && wildFreeMulplier > 1) {\n                        this.freeMultiplyNode.emit(\"ACTIVE_FAST\", wildFreeMulplier, data.selectedOption);\n                    }\n                }\n            }\n        }\n    },\n\n    getMultiplier(paylines) {\n        let mul = 1;\n        for (let i = 0; i < paylines.length; i++) {\n            if (mul < Number(paylines[i].wildMultiplier)) {\n                mul = Number(paylines[i].wildMultiplier);\n            }\n        }\n        return mul;\n    },\n\n    renderGameTable(matrix, format, fgOption = 0) {\n        let symbolWidth = this.node.config.SYMBOL_WIDTH;\n        let symbolHeight = this.node.config.SYMBOL_HEIGHT;\n\n\n        let count = 0;\n        if (fgOption > 0) {\n            this.wildOptionNode.changeToSymbol(fgOption);\n        }\n        this.listSymbol = [];\n        for (let i = 0; i < format.length; i++) {\n            for (let j = 0; j < format[i]; j++) {\n                let symbol = this.getSymbol(this.currentMode);\n                if (this.gameMode == \"normal\") {\n                    let startX = (-format.length / 2 + 0.5) * (symbolWidth - 10);\n                    let startY = (format[i] / 2 - 0.5) * (symbolHeight);\n\n                    symbol.parent = this.normalSymbolNode;\n                    symbol.setPosition(startX + i * (symbolWidth - 10), startY - j * (symbolHeight));\n                } else {\n                    let startX = (-format.length / 2 + 0.5) * (symbolWidth - 5);\n                    let startY = (format[i] / 2 - 0.5) * (symbolHeight - 10);\n\n                    if (i == 0 || i == 4) {\n                        // 1 5\n                        symbol.parent = this.freeSymbolNode15;\n                    } else {\n                        // 2 3 4\n                        symbol.parent = this.freeSymbolNode234;\n                    }\n                    symbol.setPosition(startX + i * (symbolWidth - 5), startY - j * (symbolHeight - 10));\n                }\n                symbol.removeSubSymbol();\n                let symbolName = matrix[count];\n                if (symbolName === 'K' && this.gameMode == \"free\" && fgOption) {\n                    symbolName = `${symbolName}${fgOption}`;\n                }\n                symbol.changeToSymbol(symbolName);\n\n                symbol.col = i;\n                symbol.row = j;\n                symbol.val = symbolName;\n\n                if (this.highCostSymbols.indexOf(symbolName) > -1) {\n                    symbol.zIndex = 3;\n                } else if (this.lowCostSymbols.indexOf(symbolName) > -1) {\n                    symbol.zIndex = 2;\n                } else if (symbolName == \"A\") {\n                    symbol.zIndex = 1;\n                } else {\n                    symbol.zIndex = 0;\n                }\n                this.listSymbol.push(symbol);\n                count++;\n            }\n        }\n\n        // add sub symbol\n        if (this.gameMode == \"normal\") {\n            if (this.subSymGrandNormal) {\n                this.subSymGrandNormal.forEach(subSymbol => {\n                    let symbol = this.listSymbol[subSymbol];\n                    symbol.showSmallSubSymbol('s1');\n                });\n            }\n            if (this.subSymMajorNormal) {\n                this.subSymMajorNormal.forEach(subSymbol => {\n                    let symbol = this.listSymbol[subSymbol];\n                    symbol.showSmallSubSymbol('s2');\n                });\n            }\n        }\n        else {\n            if (this.subSymGrandFree) {\n                this.subSymGrandFree.forEach(subSymbol => {\n                    let symbol = this.listSymbol[subSymbol];\n                    symbol.showSmallSubSymbol('s1');\n                });\n            }\n            if (this.subSymMajorFree) {\n                this.subSymMajorFree.forEach(subSymbol => {\n                    let symbol = this.listSymbol[subSymbol];\n                    symbol.showSmallSubSymbol('s2');\n                });\n            }\n        }\n\n    },\n\n    clearTable() {\n        for (let i = 0; i < this.listSymbol.length; i++) {\n            //   this.listSymbol[i].recoverSubSymbol();\n        }\n        this.clearSymbol(this.normalSymbolNode);\n        this.clearSymbol(this.freeSymbolNode234);\n        this.clearSymbol(this.freeSymbolNode15);\n\n    },\n\n    clearSymbol(symbolNode) {\n        let pool = this.symbolPool;\n        while (symbolNode.children.length > 0) {\n            pool.put(symbolNode.children[0]);\n        }\n    },\n});\n"]}