{"version":3,"sources":["BonusGameDirector.js"],"names":["baseDirector","require","TurnBaseFSM","cc","Class","extends","onExtendedLoad","node","on","stateUpdate","enter","init","fsm","extendInit","gameStart","onGameEnter","exit","gameEnd","can","resultReceive","onGameUpdate","gameRestart","sendBonusGameToNetwork","event","data","actionTrigger","mainDirector","gameStateManager","triggerMiniGame","onGameAction"],"mappings":";;;;;;AAEA,IAAMA,eAAeC,QAAQ,gBAAR,CAArB;AACA,IAAMC,cAAcD,QAAQ,aAAR,CAApB;;AAEAE,GAAGC,KAAH,CAAS;AACLC,aAASL,YADJ;;AAGLM,kBAHK,4BAGY;AACb,aAAKC,IAAL,CAAUC,EAAV,CAAa,aAAb,EAA2B,KAAKC,WAAhC,EAA4C,IAA5C;AACA,aAAKF,IAAL,CAAUC,EAAV,CAAa,YAAb,EAA0B,KAAKE,KAA/B,EAAqC,IAArC;AACA,aAAKH,IAAL,CAAUC,EAAV,CAAa,WAAb,EAAyB,KAAKG,IAA9B,EAAmC,IAAnC;AACH,KAPI;AASLA,QATK,kBASE;AACH,aAAKC,GAAL,GAAW,IAAIV,WAAJ,EAAX;AACA,aAAKW,UAAL;AACH,KAZI;AAaLA,cAbK,wBAaO;AACR;AACH,KAfI;AAgBLH,SAhBK,mBAgBG;AACJ,aAAKE,GAAL,CAASE,SAAT;AACA,aAAKC,WAAL;AACH,KAnBI;AAoBLC,QApBK,kBAoBE;AACH,aAAKJ,GAAL,CAASK,OAAT;AACA,aAAKV,IAAL,CAAUS,IAAV;AACH,KAvBI;AAwBLP,eAxBK,yBAwBS;AACV,YAAI,CAAC,KAAKG,GAAL,CAASM,GAAT,CAAa,eAAb,CAAL,EAAoC;AACpC,aAAKN,GAAL,CAASO,aAAT;AACA,aAAKC,YAAL;AACA,aAAKR,GAAL,CAASS,WAAT;AACH,KA7BI;AA8BLC,0BA9BK,kCA8BkBC,KA9BlB,EA8ByBC,IA9BzB,EA8B+B;AAChC,YAAI,CAAC,KAAKZ,GAAL,CAASM,GAAT,CAAa,eAAb,CAAL,EAAoC;AACpC,aAAKN,GAAL,CAASa,aAAT;AACA,aAAKlB,IAAL,CAAUmB,YAAV,CAAuBC,gBAAvB,CAAwCC,eAAxC,CAAwDJ,IAAxD;AACA,aAAKK,YAAL;AACH,KAnCI;;;AAqCL;AACAd,eAtCK,yBAsCS,CAAE,CAtCX;AAuCLK,gBAvCK,0BAuCU,CAAE,CAvCZ;AAwCLS,gBAxCK,0BAwCU,CAAE;AAxCZ,CAAT","file":"BonusGameDirector.js","sourceRoot":"../../../../../../assets/cc-common/cc-slotbase-v2/slotGame","sourcesContent":["\n\nconst baseDirector = require('BaseDirectorV2');\nconst TurnBaseFSM = require('turnBaseFSM');\n\ncc.Class({\n    extends: baseDirector,\n\n    onExtendedLoad() {\n        this.node.on(\"GAME_UPDATE\",this.stateUpdate,this);\n        this.node.on(\"GAME_ENTER\",this.enter,this);\n        this.node.on(\"GAME_INIT\",this.init,this);\n    },\n\n    init() {\n        this.fsm = new TurnBaseFSM();\n        this.extendInit();\n    },\n    extendInit(){\n        //Add your overwrite code here!\n    },\n    enter() {\n        this.fsm.gameStart();\n        this.onGameEnter();\n    },\n    exit() {\n        this.fsm.gameEnd();\n        this.node.exit();\n    },\n    stateUpdate() {\n        if (!this.fsm.can('resultReceive')) return;\n        this.fsm.resultReceive();\n        this.onGameUpdate();\n        this.fsm.gameRestart();\n    },\n    sendBonusGameToNetwork(event, data) {\n        if (!this.fsm.can('actionTrigger')) return;\n        this.fsm.actionTrigger();\n        this.node.mainDirector.gameStateManager.triggerMiniGame(data);\n        this.onGameAction();\n    },\n\n    //Update these functions when extend from this\n    onGameEnter() {},\n    onGameUpdate() {},\n    onGameAction() {},\n});\n"]}