{"version":3,"sources":["../../../../../../../assets/cc-common/cc-slotbase-v2/slotGame/BetHistory/assets/cc-common/cc-slotbase-v2/slotGame/BetHistory/SlotHistorySummaryImages.js"],"names":["require","formatMoney","arrayTypeJackpot","cc","Class","extends","Component","properties","scrollView","ScrollView","sessionLabel","Label","totalWinLabel","totalWinNormal","Node","totalJackpotAllModes","totalWinFree","totalWinTopUp","totalWinFreeAllModes","onLoad","node","on","updateData","resetLabelTotalDetail","scrollToTop","string","getWinMoney","emit","active","money","data","opacity","console","warn","JSON","stringify","sessionId","totalWinAmount","freeSummary","totalFreeWinAmount","totalJpWinAmount","jpInfo","initAllJackpot","substring","length","normalWin","jackpotBonus","updateWinJackpot","amt","jackpotNormal","forEach","it","selectOption","winAmount","jackpotFreeList","i","scheduleOnce","mode","push","getTypeJackpot","jackpotId","index","jp","includes"],"mappings":"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","file":"SlotHistorySummaryImages.js","sourceRoot":"../../../../../../../assets/cc-common/cc-slotbase-v2/slotGame/BetHistory","sourcesContent":["const {formatMoney} = require('utils');\nconst arrayTypeJackpot = [\"MINI\",\"MINOR\",\"MAJOR\",\"GRAND\"];\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        scrollView : cc.ScrollView,\n        sessionLabel : cc.Label,\n        totalWinLabel: cc.Label,\n        totalWinNormal: cc.Node,\n        totalJackpotAllModes: cc.Node,\n        totalWinFree: cc.Node,\n        totalWinTopUp: cc.Node,\n        totalWinFreeAllModes : cc.Node\n    },\n\n    onLoad () {\n        this.node.on('DISPLAY_DATA', this.updateData, this);\n        this.node.on('CLEAR_TOTAL_DETAIL_DATA', this.resetLabelTotalDetail, this);\n    },\n\n    resetLabelTotalDetail() {\n        this.scrollView.scrollToTop();\n        this.totalWinLabel.string  = this.getWinMoney(0);\n        this.totalWinNormal.emit(\"RESET_DATA\");\n        this.totalJackpotAllModes.emit(\"RESET_DATA\");\n        this.totalWinFree.emit(\"RESET_DATA\");\n        this.totalWinTopUp.emit(\"RESET_DATA\");\n        this.totalWinFreeAllModes.emit(\"RESET_DATA\");\n        \n        this.totalWinFree.active = false;\n        this.totalWinTopUp.active = false;\n        this.totalWinFreeAllModes.active = true;\n        this.totalJackpotAllModes.active = true;\n    },\n\n    getWinMoney(money = 0){\n        return formatMoney(money);\n    },\n\n    updateData(data) {\n        this.node.opacity = 0;\n        this.resetLabelTotalDetail();\n        console.warn(\"response summary \" + JSON.stringify(data));\n        let { sessionId, totalWinAmount, freeSummary,\n            totalFreeWinAmount, totalJpWinAmount, jpInfo } = data;\n\n        this.initAllJackpot(jpInfo);\n\n        sessionId = data.sessionId.substring(data.sessionId.length - 8, data.sessionId.length);\n\n        let normalWin = totalWinAmount - (totalFreeWinAmount || 0) - (totalJpWinAmount || 0);\n        \n        this.totalWinLabel.string = this.getWinMoney(totalWinAmount);\n\n        this.sessionLabel.node.active = true;\n        this.sessionLabel.string = `#${sessionId}`;\n     \n        this.totalWinNormal.emit(\"UPDATE_WIN\", normalWin);\n\n        if (this.jackpotBonus) {\n            this.updateWinJackpot(this.jackpotBonus.amt);\n        }\n\n        if (this.jackpotNormal){\n            this.updateWinJackpot(this.jackpotNormal.amt);\n        }\n\n        if (freeSummary && freeSummary.length > 0) {\n            this.totalWinFreeAllModes.active = false;\n            freeSummary.forEach(it=>{\n                if(it.selectOption == 1) {\n                    this.totalWinFree.emit(\"UPDATE_WIN\", it.winAmount);\n                    this.totalWinFree.active = it.winAmount > 0;\n                } else if (it.selectOption == 2){\n                    this.totalWinTopUp.emit(\"UPDATE_WIN\", it.winAmount);\n                    this.totalWinTopUp.active = it.winAmount > 0;\n                }\n            });\n        }\n\n        if (this.jackpotFreeList && this.jackpotFreeList.length > 0) {\n            for (let i = 0; i < this.jackpotFreeList.length; i++) {\n                this.updateWinJackpot(this.jackpotFreeList[i].amt);\n            }\n        }\n\n        this.node.opacity = 1;\n        this.scheduleOnce(() =>{\n            this.node.opacity = 255;\n        }, 0.02);\n    },\n\n    updateWinJackpot(winAmount = 0){\n        this.totalJackpotAllModes.active = true;\n        this.totalJackpotAllModes.emit(\"UPDATE_WIN\", winAmount);\n    },\n\n    initAllJackpot(jpInfo) {\n        this.jackpotNormal = null;\n        this.jackpotBonus = null;\n        this.jackpotFreeList = [];\n\n        if (jpInfo) {\n            for (let i = 0; i < jpInfo.length; i++) {\n                if (jpInfo[i].mode == \"bonus\") {\n                    this.jackpotBonus = jpInfo[i];\n                } else if (jpInfo[i].mode == \"normal\") {\n                    this.jackpotNormal = jpInfo[i];\n                } else {\n                    this.jackpotFreeList.push(jpInfo[i]);\n                }\n            }\n        }\n    },\n\n    getTypeJackpot(jackpotId) {\n        for (let index = 0; index < arrayTypeJackpot.length; index++) {\n            const jp = arrayTypeJackpot[index];\n            if (jackpotId.includes(jp)) {\n                return (index);\n            }\n        }\n        return -1;\n    },\n});\n"]}