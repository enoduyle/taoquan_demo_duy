{"version":3,"sources":["baseAssetsManager.js"],"names":["cc","Class","properties","onCheckAllResource","resourcePrefix","callbackProgress","callbackLoaded","loaded","loadSpine","loadSound","loadPrefab","loadSharePrefab","loadSprite","loadParticle","prefabData","spriteData","spineData","particleData","soundData","total","loader","loadResDir","SpriteFrame","checkResourceProgress","err","assets","i","length","_name","checkResourceFinish","Particle","urls","symbolText","replace","split","AudioClip","Prefab","sp","SkeletonData","percent","Math","floor"],"mappings":"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","file":"baseAssetsManager.js","sourceRoot":"../../../../../../../assets/cc-common/cc-share-v1/common/baseComponent","sourcesContent":["\n\ncc.Class({\n\n    properties: {},\n\n    onCheckAllResource(resourcePrefix, callbackProgress, callbackLoaded) {\n        this.loaded = false;\n        this.loadSpine = 0;\n        this.loadSound = 0;\n        this.loadPrefab = 0;\n        this.loadSharePrefab = 0;\n        this.loadSprite = 0;\n        this.loadParticle = 0;\n        this.prefabData = {};\n        this.spriteData = {};\n        this.spineData = {};\n        this.particleData = {};\n        this.soundData = {};\n\n        this.total = 6;\n\n        cc.loader.loadResDir(resourcePrefix + \"/Sprite\", cc.SpriteFrame, (loaded,total) => {\n            this.loadSprite = total ? loaded/total : 1;\n            this.checkResourceProgress(callbackProgress);\n        }, (err, assets) => {\n            \n            for (let i = 0; i < assets.length; i++) {\n                this.spriteData[assets[i]._name] = assets[i];\n            }\n            this.loadSprite = 1;\n            this.checkResourceFinish(callbackLoaded);\n        });\n\n        cc.loader.loadResDir(resourcePrefix + \"/Particle\", cc.Particle, (loaded,total) => {\n            this.loadParticle = total ? loaded/total : 1;\n            this.checkResourceProgress(callbackProgress);\n        }, (err, assets, urls) => {\n            for (let i = 0; i < assets.length; i++) {\n                const symbolText = urls[i].replace(resourcePrefix + '/Particle/', '').split('/');\n                if (!this.particleData[symbolText[0]]) {\n                    this.particleData[symbolText[0]] = {};\n                }\n                this.particleData[symbolText[0]][symbolText[1]] = assets[i];\n            }\n            this.loadParticle = 1;\n            this.checkResourceFinish(callbackLoaded);\n        });\n\n\n        cc.loader.loadResDir(resourcePrefix + \"/SFX\", cc.AudioClip, (loaded,total) => {\n            this.loadSound = total ? loaded/total : 1;\n            this.checkResourceProgress(callbackProgress);\n        }, (err, assets) => {\n            for (let i = 0; i < assets.length; i++) {\n                this.soundData[assets[i]._name] = assets[i];\n            }\n            this.loadSound = 1;\n            this.checkResourceFinish(callbackLoaded);\n        });\n\n        cc.loader.loadResDir(resourcePrefix + \"/Prefab\", cc.Prefab, (loaded,total) => {\n            this.loadPrefab = total ? loaded/total : 1;\n            this.checkResourceProgress(callbackProgress);\n        }, (err, assets) => {\n            for (let i = 0; i < assets.length; i++) {\n                this.prefabData[assets[i]._name] = assets[i];\n            }\n            this.loadPrefab = 1;\n            this.checkResourceFinish(callbackLoaded);\n        });\n\n        cc.loader.loadResDir(\"share/Prefab\", cc.Prefab, (loaded,total) => {\n            this.loadSharePrefab = total ? loaded/total : 1;\n            this.checkResourceProgress(callbackProgress);\n        }, (err, assets) => {\n            for (let i = 0; i < assets.length; i++) {\n                this.prefabData[assets[i]._name] = assets[i];\n            }\n            this.loadSharePrefab = 1;\n            this.checkResourceFinish(callbackLoaded);\n        });\n\n        cc.loader.loadResDir(resourcePrefix + \"/Spine\", sp.SkeletonData, (loaded,total) => {\n            this.loadSpine = total ? loaded/total : 1;\n            this.checkResourceProgress(callbackProgress);\n        }, (err, assets, urls) => {\n            for (let i = 0; i < assets.length; i++) {\n                const symbolText = urls[i].replace(resourcePrefix + '/Spine/', '').replace('/skeleton', '');\n                this.spineData[symbolText] = assets[i];\n            }\n            this.loadSpine = 1;\n            this.checkResourceFinish(callbackLoaded);\n        });\n    },\n\n    checkResourceProgress(callbackProgress) {\n        let percent = (this.loadSprite + this.loadSpine + this.loadSound + this.loadPrefab + this.loadSharePrefab + this.loadParticle)/this.total*100;\n        callbackProgress(Math.floor(percent));\n    },\n    checkResourceFinish(callbackLoaded) {\n        if (this.loaded) return;\n        if (this.loadSprite + this.loadSpine + this.loadSound + this.loadPrefab + this.loadSharePrefab + this.loadParticle == this.total) {\n            this.loaded = true;\n            callbackLoaded();\n        }\n    }\n});\n"]}