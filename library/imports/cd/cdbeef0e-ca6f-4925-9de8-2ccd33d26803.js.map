{"version":3,"sources":["../../../../../../../assets/cc-common/cc-slotbase-v2/slotGame/table/assets/cc-common/cc-slotbase-v2/slotGame/table/SlotTablePaylineInfo.js"],"names":["require","convertAssetArrayToObject","formatMoney","cc","Class","extends","Component","properties","smallSymbolPrefix","smallSymbols","type","SpriteFrame","default","lbLeft","Label","lbRight","imgSymbol","Sprite","onLoad","assets","node","config","PAY_LINE_ALLWAYS","showPaylineInfo","showPaylineInfoAllways","showPaylineInfoLine","start","on","hidePaylineInfo","localizeText","winText","lineText","MESSAGE_DIALOG","LINE","WIN","toLowerCase","WIN_TEXT_1","line","payLineID","payLineWinNumbers","payLineWinAmount","payLineSymbol","string","getComponent","spriteFrame","active","symbolId","totalWinAmount","symbolCount","combination","payableSymbol","betDenom","calculateBetDenom","Number","symbolPayTableString","combinationString","calculateDenom","winAmount","steps","gSlotDataStore","slotBetDataStore","data","TOTAL_BET_CREDIT","betIds","playSession","betId","betIndex","Object","keys","find","key"],"mappings":"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","file":"SlotTablePaylineInfo.js","sourceRoot":"../../../../../../../assets/cc-common/cc-slotbase-v2/slotGame/table","sourcesContent":["\n\nconst {convertAssetArrayToObject} = require('utils');\nconst {formatMoney} = require('utils');\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        smallSymbolPrefix: \"symbol_small_\",\n        smallSymbols: {\n            type: cc.SpriteFrame,\n            default: [],\n        },\n        lbLeft:{\n            type: cc.Label,\n            default: null\n        },\n        lbRight:{\n            type: cc.Label,\n            default: null\n        },\n        imgSymbol:{\n            type: cc.Sprite,\n            default: null\n        }\n    },\n    onLoad () {\n        this.assets = convertAssetArrayToObject(this.smallSymbols);\n        if (this.node.config && this.node.config.PAY_LINE_ALLWAYS)\n            this.showPaylineInfo = this.showPaylineInfoAllways;\n        else if (!this.showPaylineInfo) {\n            this.showPaylineInfo = this.showPaylineInfoLine;\n        }\n    },\n    start() {\n        this.node.on(\"SHOW_PAYLINE\",this.showPaylineInfo,this);\n        this.node.on(\"HIDE_PAYLINE\",this.hidePaylineInfo,this);\n        this.hidePaylineInfo();\n        this.localizeText();\n    },\n    localizeText() {\n        this.winText = `thắng`;\n        this.lineText = 'Line';\n        if (!this.node.config) return;\n\n        const { MESSAGE_DIALOG, PAY_LINE_ALLWAYS } = this.node.config;\n\n        this.lineText = this.node.config.MESSAGE_DIALOG.LINE;\n        if (PAY_LINE_ALLWAYS) {\n            this.winText = MESSAGE_DIALOG.WIN.toLowerCase();\n        } else {\n            this.winText = MESSAGE_DIALOG.WIN_TEXT_1.toLowerCase();\n        }\n    },\n    showPaylineInfoLine({line}){\n        const {payLineID, payLineWinNumbers, payLineWinAmount, payLineSymbol} = line;\n        \n        this.lbLeft.string = `${this.lineText} ${payLineID} ${this.winText} ` + payLineWinNumbers + \" x\";\n        this.lbRight.string = \" = \" + formatMoney(payLineWinAmount) + \"\";\n        this.imgSymbol.getComponent(cc.Sprite).spriteFrame = this.assets[this.smallSymbolPrefix + payLineSymbol];\n        this.node.active = true;\n    },\n    showPaylineInfoAllways({line}){\n        const {symbolId, totalWinAmount, symbolCount, combination, payableSymbol} = line;\n        const betDenom = this.calculateBetDenom();\n        \n        this.lbLeft.string = Number(symbolCount);\n        this.imgSymbol.getComponent(cc.Sprite).spriteFrame = this.assets[this.smallSymbolPrefix + symbolId];\n\n        const symbolPayTableString = `${this.winText} ` + payableSymbol;\n        const combinationString = combination > 1 ? ' (x' + combination + ')' : '';\n        const calculateDenom = ' = ' + formatMoney((payableSymbol * combination))+ ' xu x ' + formatMoney(betDenom) + ' = ';\n        const winAmount = formatMoney(totalWinAmount) + 'đ';\n        this.lbRight.string = symbolPayTableString + combinationString + calculateDenom + winAmount;\n        this.node.active = true;\n    },\n    calculateBetDenom() {\n        const {steps} = this.node.gSlotDataStore.slotBetDataStore.data;\n        const {TOTAL_BET_CREDIT} = this.node.config;\n        const betIds = this.node.gSlotDataStore.playSession.betId;\n        const betIndex = Object.keys(steps).find(key => key == betIds[0]);\n        return Number(steps[betIndex]) / TOTAL_BET_CREDIT;\n    },\n    hidePaylineInfo(){\n        this.node.active = false;\n    }\n});\n"]}