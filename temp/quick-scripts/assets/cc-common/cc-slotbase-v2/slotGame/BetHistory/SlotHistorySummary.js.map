{"version":3,"sources":["SlotHistorySummary.js"],"names":["require","formatMoney","arrayTypeJackpot","cc","Class","extends","Component","properties","sessionLabel","Label","totalBetLabel","totalWinLabel","detailTotalBetLabel","summaryLabel","normalSummaryLabel","detailNormalSummaryLabel","bonusSummaryLabel","detailBonusSummaryLabel","freeSummaryLabel","detailFreeSummaryLabel","onLoad","node","on","updateData","resetLabelTotalDetail","string","active","data","opacity","sessionId","totalBetAmount","betDenom","totalWinAmount","freeGameTotal","totalBonusWinAmount","totalFreeWinAmount","selectedOption","totalJpWinAmount","aAmt","jpInfo","initAllJackpot","substring","length","mBetAmount","normalWin","bonusWin","jackpotBonus","indexTypeJP","getTypeJackpot","id","freeWinTotal","freeWin","amtA1","amtA2","amtA","totalScatterWinAmount","jackpotFreeList","i","amt","scheduleOnce","jackpotNormal","mode","push","jackpotId","index","jp","includes"],"mappings":"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","file":"SlotHistorySummary.js","sourceRoot":"../../../../../../../assets/cc-common/cc-slotbase-v2/slotGame/BetHistory","sourcesContent":["const {formatMoney} = require('utils');\nconst arrayTypeJackpot = [\"MINI\",\"MINOR\",\"MAJOR\",\"GRAND\"];\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        sessionLabel: cc.Label,\n        totalBetLabel: cc.Label,\n        totalWinLabel: cc.Label,\n        // left pannel\n        detailTotalBetLabel: cc.Label,\n\n        // right pannel\n        summaryLabel: cc.Label,\n        normalSummaryLabel: cc.Label,\n        detailNormalSummaryLabel: cc.Label,\n        bonusSummaryLabel: cc.Label,\n        detailBonusSummaryLabel: cc.Label,\n        freeSummaryLabel: cc.Label,\n        detailFreeSummaryLabel: cc.Label,\n    },\n\n    onLoad () {\n        this.node.on('DISPLAY_DATA', this.updateData, this);\n        this.node.on('CLEAR_TOTAL_DETAIL_DATA', this.resetLabelTotalDetail, this);\n    },\n\n    resetLabelTotalDetail() {\n        // left pannel\n        this.sessionLabel.string = \"\";\n        this.totalBetLabel.string = \"\";\n        this.detailTotalBetLabel.string = \"\";\n        this.totalWinLabel.string = \"\";\n        // right pannel\n        this.summaryLabel.string = \"\";\n        this.normalSummaryLabel.string = \"\";\n        this.detailNormalSummaryLabel.string = \"\";\n        this.bonusSummaryLabel.string = \"\";\n        this.detailBonusSummaryLabel.string = \"\";\n        this.freeSummaryLabel.string = \"\";\n        this.detailFreeSummaryLabel.string = \"\";\n\n        this.totalBetLabel.node.active = false;\n        this.detailTotalBetLabel.node.active = false;\n        this.totalWinLabel.node.active = false;\n\n        this.summaryLabel.node.active = false;\n        this.normalSummaryLabel.node.active = false;\n        this.detailNormalSummaryLabel.node.active = false;\n        this.bonusSummaryLabel.node.active = false;\n        this.detailBonusSummaryLabel.node.active = false;\n        this.freeSummaryLabel.node.active = false;\n        this.detailFreeSummaryLabel.node.active = false;\n    },\n\n    updateData(data) {\n        this.node.opacity = 0;\n        this.resetLabelTotalDetail();\n\n        let { sessionId, totalBetAmount, betDenom, totalWinAmount, freeGameTotal,\n            totalBonusWinAmount, totalFreeWinAmount, selectedOption, totalJpWinAmount, aAmt, jpInfo } = data;\n\n        this.initAllJackpot(jpInfo);\n\n        sessionId = data.sessionId.substring(data.sessionId.length - 8, data.sessionId.length);\n\n        let mBetAmount = formatMoney(totalBetAmount / betDenom);\n        let normalWin = formatMoney(totalWinAmount - (totalFreeWinAmount || 0) - (totalJpWinAmount || 0));\n        \n        totalBetAmount = formatMoney(totalBetAmount);\n        totalWinAmount = formatMoney(totalWinAmount);\n\n        this.sessionLabel.node.active = true;\n        this.sessionLabel.string = `Phiên #${sessionId}`;\n        // left pannel\n        this.totalBetLabel.node.active = true;\n        this.totalBetLabel.string = `- Tổng cược: ${totalBetAmount}`;\n\n        this.detailTotalBetLabel.node.active = true;\n        this.detailTotalBetLabel.string = `+ Mua: ${mBetAmount}`;\n        this.detailTotalBetLabel.string += \"\\n\" + `+ Cược: x${betDenom}`;\n\n        this.totalWinLabel.node.active = true;\n        this.totalWinLabel.string = `- Tổng thắng: ${totalWinAmount}`;\n\n        // right pannel\n        this.summaryLabel.node.active = true;\n        this.summaryLabel.string = \"Chi tiết:\";\n\n        this.normalSummaryLabel.node.active = true;\n        this.normalSummaryLabel.string = `- Quay thường: ${normalWin}`;\n\n        let bonusWin = totalBonusWinAmount || 0;\n        if (bonusWin > 0) {\n            if (this.jackpotBonus) {\n                let indexTypeJP = this.getTypeJackpot(this.jackpotBonus.id);\n                this.bonusSummaryLabel.node.active = true;\n                this.bonusSummaryLabel.string = `- Chọn hũ: ${arrayTypeJackpot[indexTypeJP]}`;\n                this.bonusSummaryLabel.string += \" \" + formatMoney(bonusWin);\n            }\n        }\n\n        if (totalFreeWinAmount) {\n            let freeWinTotal = totalFreeWinAmount || 0;\n            \n            this.freeSummaryLabel.node.active = true;\n            this.detailFreeSummaryLabel.node.active = true;\n\n            this.freeSummaryLabel.string = \"- Quay miễn phí: \";\n\n            // detail free\n            if (selectedOption && selectedOption == 1) {\n                //FREE 8\n                this.detailFreeSummaryLabel.string += \"+ Chọn FreeGame \\n\";\n                this.detailFreeSummaryLabel.string += \"+ Số lần quay: \" + freeGameTotal + \"\\n\";\n            } else if (selectedOption && selectedOption == 2) {\n                //TOPUP\n                this.detailFreeSummaryLabel.string += \"+ Chọn Topup \\n\";\n                this.detailFreeSummaryLabel.string += \"+ Số lần quay: \" + freeGameTotal + \"\\n\";\n            }\n\n            //scatter win\n            \n            let freeWin = freeWinTotal;\n            if (aAmt) {\n                let {amtA1, amtA2, amtA} = aAmt;\n                let totalScatterWinAmount = (amtA1 || 0) + (amtA2 || 0) + (amtA || 0);\n                this.detailFreeSummaryLabel.string += \"+ Thắng ngọc: \" + formatMoney(totalScatterWinAmount) + \"\\n\";\n                freeWin = freeWinTotal - totalScatterWinAmount;\n            }\n\n            if (selectedOption && selectedOption == 1) {\n                this.detailFreeSummaryLabel.string += \"+ Thắng Free: \"+ formatMoney(freeWin) + \"\\n\";\n            }\n            if (this.jackpotFreeList && this.jackpotFreeList.length > 0) {\n                for (let i =0; i < this.jackpotFreeList.length; i++) {\n                    let indexTypeJP = this.getTypeJackpot(this.jackpotFreeList[i].id);\n                    if (indexTypeJP >= 0) {\n                        this.detailFreeSummaryLabel.string += \"+ Thắng hũ: \" + arrayTypeJackpot[indexTypeJP] + \" \" +\n                            formatMoney(this.jackpotFreeList[i].amt) + \"\\n\";\n                    }\n                }\n            }\n        }\n        this.node.opacity = 1;\n        this.scheduleOnce(() =>{\n            this.node.opacity = 255;\n        }, 0.02);\n    },\n\n    initAllJackpot(jpInfo) {\n        this.jackpotNormal = null;\n        this.jackpotBonus = null;\n        this.jackpotFreeList = [];\n\n        if (jpInfo) {\n            for (let i = 0; i < jpInfo.length; i++) {\n                if (jpInfo[i].mode == \"bonus\") {\n                    this.jackpotBonus = jpInfo[i];\n                } else if (jpInfo[i].mode == \"normal\") {\n                    this.jackpotNormal = jpInfo[i];\n                } else {\n                    this.jackpotFreeList.push(jpInfo[i]);\n                }\n            }\n        }\n    },\n\n    getTypeJackpot(jackpotId) {\n        for (let index = 0; index < arrayTypeJackpot.length; index++) {\n            const jp = arrayTypeJackpot[index];\n            if (jackpotId.includes(jp)) {\n                return (index);\n            }\n        }\n        return -1;\n    },\n});\n"]}