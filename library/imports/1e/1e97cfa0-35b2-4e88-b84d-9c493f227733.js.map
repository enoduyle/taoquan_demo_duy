{"version":3,"sources":["../../../../../../assets/cc-taoquan-9983/scripts/cutScene/assets/cc-taoquan-9983/scripts/cutScene/WildTransition9983.js"],"names":["cc","Class","extends","require","properties","particleNode","Node","tableNormal","destPosNormal","tableFree","destPosFree","enter","content","matrix","isNormal","tableFormat","node","config","TABLE_FORMAT","table","active","destPos","TABLE_FORMAT_FREE","parList","scatCoorList","i","length","j","push","v2","playAnim","isShowing","arrCoor","soundPlayer","playParticleMultiplier","particle","instantiate","parent","x","getXPosition","y","SYMBOL_HEIGHT","tween","to","call","exit","start","skip","isForce","callback","stopAllActions","removeFromParent","destroy","index","width","SYMBOL_WIDTH","SYMBOL_MARGIN_RIGHT"],"mappings":"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","file":"WildTransition9983.js","sourceRoot":"../../../../../../assets/cc-taoquan-9983/scripts/cutScene","sourcesContent":["\ncc.Class({\n    extends: require('CutsceneMode'),\n\n    properties: {\n        particleNode: cc.Node,\n        tableNormal: cc.Node,\n        destPosNormal: cc.Node,\n        tableFree: cc.Node,\n        destPosFree: cc.Node,\n    },\n    enter() {\n        const {matrix,isNormal} = this.content;\n        this.isNormal = isNormal;\n        this.tableFormat = this.node.config.TABLE_FORMAT;\n        this.table = this.tableNormal;\n        this.tableFree.active = false;\n        this.tableNormal.active = true;\n        this.destPos = this.destPosNormal;\n        if(!isNormal) {\n            this.tableFormat = this.node.config.TABLE_FORMAT_FREE;\n            this.table = this.tableFree;\n            this.destPos = this.destPosFree;\n            this.tableFree.active = true;\n            this.tableNormal.active = false;\n        }\n        this.parList = [];\n        let scatCoorList = [];\n        for(let i = 0; i < matrix.length; ++i){\n            for(let j = 0 ; j < matrix[i].length; ++j){\n                if(matrix[i][j] === 'K'){\n                    scatCoorList.push(cc.v2(i,j));\n                }\n            }\n        }\n        this.playAnim(scatCoorList);\n        this.isShowing = true;\n    },\n\n    playAnim(arrCoor){\n        if (this.node.soundPlayer) this.node.soundPlayer.playParticleMultiplier();\n        for(let i = 0; i < arrCoor.length; ++i){\n            let particle = cc.instantiate(this.particleNode);\n            particle.parent = this.table;\n            particle.active = true;\n            particle.x = this.getXPosition(arrCoor[i].x);\n            particle.y =  (this.tableFormat[arrCoor[i].x]  - arrCoor[i].y)*this.node.config.SYMBOL_HEIGHT - this.node.config.SYMBOL_HEIGHT/2;\n            this.parList.push(particle);\n            cc.tween(particle)\n                .to(0.5, {x: this.destPos.x, y: this.destPos.y})\n                .call(()=>{\n                    this.exit();\n                })\n                .start();\n        }\n    },\n\n    skip() {\n        if (!this.isShowing) return;\n        this.exit(true);\n    },\n  \n    exit(isForce = false) {\n        this.callback && this.callback(isForce);\n        this.isShowing = false;\n        for(let i = 0; i < this.parList.length; ++i){\n            this.parList[i].stopAllActions();\n            this.parList[i].removeFromParent(true);\n            this.parList[i].destroy();\n        }\n        this.node.active = false;\n    },\n    getXPosition(index) {\n        let width = this.node.config.SYMBOL_WIDTH;\n        return (width + this.node.config.SYMBOL_MARGIN_RIGHT) * index + width/2;\n    },\n});\n"]}