{"version":3,"sources":["../../../../../../assets/cc-common/cc-slot-base-test/TestSpine/assets/cc-common/cc-slot-base-test/TestSpine/TestSpine.js"],"names":["getAnimationsName","spine","Object","keys","skeletonData","_skeletonJson","animations","getSkinsName","skins","cc","Class","extends","Component","properties","panel","Node","isShowAddAnim","onLoad","_spines","node","getComponentsInChildren","sp","Skeleton","forEach","loop","on","EventType","MOUSE_DOWN","focus","log","_isLoop","removeAllChildren","addButtonReset","_creatButton","Color","ORANGE","showAnimListToSet","showSkin","showAnimListToAdd","buttonOn","color","RED","active","buttonOff","GRAY","buttonLoop","BLUE","getComponent","Label","string","anim","animation","setAnimation","i","animName","btn","currentTime","Date","now","setCompleteListener","_animationQueue","length","JSON","stringify","skinName","setSkin","alert","addAnimation","buttonName","BLACK","name","addChild","label","addComponent"],"mappings":"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","file":"TestSpine.js","sourceRoot":"../../../../../../assets/cc-common/cc-slot-base-test/TestSpine","sourcesContent":["function getAnimationsName(spine) {\n    return Object.keys(spine.skeletonData._skeletonJson.animations);\n}\nfunction getSkinsName(spine) {\n    return Object.keys(spine.skeletonData._skeletonJson.skins);\n}\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        panel: cc.Node,\n        isShowAddAnim: false,\n    },\n\n    onLoad() {\n        this._spines = this.node.getComponentsInChildren(sp.Skeleton);\n        this._spines.forEach(spine => {\n            spine.loop = false;\n            spine.node.on(cc.Node.EventType.MOUSE_DOWN, () => {\n                this.focus(spine);\n            });\n        });\n    },\n    focus(spine) {\n        cc.log(\"%c SPINE\", \"color: red;\", spine);\n        this._isLoop = false;\n        this.panel.removeAllChildren();\n        this.addButtonReset(spine);\n        this._creatButton(`__ setAnimation __`, cc.Color.ORANGE);\n        this.showAnimListToSet(spine);\n        this.showSkin(spine);\n        if (this.isShowAddAnim) {\n            this._creatButton(`__ addAnimation __`, cc.Color.ORANGE);\n            this.showAnimListToAdd(spine);\n        }\n    },\n    addButtonReset(spine) {\n        const buttonOn = this._creatButton(\"ACTIVE\");\n        buttonOn.color = cc.Color.RED;\n        buttonOn.on(cc.Node.EventType.MOUSE_DOWN, () => {\n            spine.node.active = true;\n        });\n\n        const buttonOff = this._creatButton(\"DEACTIVATE\");\n        buttonOff.color = cc.Color.GRAY;\n        buttonOff.on(cc.Node.EventType.MOUSE_DOWN, () => {\n            spine.node.active = false;\n        });\n\n        const buttonLoop = this._creatButton(this._isLoop ? \"UNLOOP\" : \"LOOP\");\n        buttonLoop.color = cc.Color.BLUE;\n        buttonLoop.on(cc.Node.EventType.MOUSE_DOWN, () => {\n            this._isLoop = !this._isLoop;\n            buttonLoop.getComponent(cc.Label).string = this._isLoop ? \"UNLOOP\" : \"LOOP\";\n            const anim = spine.animation;\n            spine.setAnimation(0, anim, this._isLoop);\n        });\n    },\n    showAnimListToSet(spine) {\n        const animations = getAnimationsName(spine);\n        for (let i = 0; i < animations.length; i++) {\n            const animName = animations[i];\n            const btn = this._creatButton(animName);\n            btn.on(cc.Node.EventType.MOUSE_DOWN, () => {\n                let currentTime = Date.now();\n                spine.setAnimation(0, animName, this._isLoop);\n                spine.setCompleteListener(() => {\n                    cc.log(\"%c anims queue: \" + spine._animationQueue.length, \"color: red;\", JSON.stringify(spine._animationQueue, null, '\\t'));\n                    cc.log('duration', (Date.now() - currentTime));\n                });\n            });\n        }\n    },\n    showSkin(spine) {\n        const skins = getSkinsName(spine);\n        cc.log(\"%c skins: \", \"color:red\", skins);\n        if (!skins || skins.length === 0) return;\n        this._creatButton(`__ setSkin __`, cc.Color.ORANGE);\n        for (let i = 0; i < skins.length; i++) {\n            const skinName = skins[i];\n            const btn = this._creatButton(skinName);\n            btn.on(cc.Node.EventType.MOUSE_DOWN, () => {\n                spine.setSkin(skinName);\n            });\n        }\n    },\n    showAnimListToAdd(spine) {\n        const animations = getAnimationsName(spine);\n        for (let i = 0; i < animations.length; i++) {\n            const animName = animations[i];\n            const btn = this._creatButton(animName);\n            btn.on(cc.Node.EventType.MOUSE_DOWN, () => {\n                if (this._isLoop) {\n                    alert(\"can not add animation when spine is looping\");\n                }\n                spine.addAnimation(0, animName, false);\n                cc.log(\"animation queue: \", spine._animationQueue);\n            });\n        }\n    },\n    _creatButton(buttonName = \"\", color = cc.Color.BLACK) {\n        const btn = new cc.Node();\n        btn.name = \"btn \" + buttonName;\n        btn.color = color;\n        this.panel.addChild(btn);\n        const label = btn.addComponent(cc.Label);\n        label.string = buttonName;\n        return btn;\n    }\n});\n"]}