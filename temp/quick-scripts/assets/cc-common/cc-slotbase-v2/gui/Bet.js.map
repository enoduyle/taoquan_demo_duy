{"version":3,"sources":["Bet.js"],"names":["require","formatMoney","formatWalletMoney","findKeyByValue","convertObjectToArrayKey","convertObjectToArray","getBetValueWithGame","setBetValueWithGame","cc","Class","extends","Component","properties","bg","Node","bgBetNormal","default","type","SpriteFrame","bgBetMin","bgBetMax","betSFX","AudioClip","decreaseSFX","increaseSFX","betDenomLabel","isCircular","increaseButton","Button","decreaseButton","onLoad","node","on","updateBet","loadBet","enableBetBtn","disableBetBtn","updateBetValue","isTrial","trialMode","increaseBetEvent","Event","EventCustom","setUserData","trigger","checkColorChange","gSlotDataStore","slotBetDataStore","data","currentBetData","steps","minBet","maxBet","Array","isArray","length","newSteps","getComponent","Sprite","spriteFrame","gameId","defaultBet","betId","updateCurrentBet","emit","reduceBet","stepIndex","arrayBetIndex","newBet","indexOf","soundPlayer","playSFX","increaseBet","unuse","reuse","dispatchEvent","interactable","checkDisableButtons","current","max","min","value","config","PAY_LINE_LENGTH","Label","string","Number","formatFunc","decimalCount","IS_SUPPORT_MULTI_CURRENCY","currencyConfig","CURRENCY_CONFIG","currencyCode","betFormat","BET_FORMAT","IS_SHORT_FORMAT","DECIMAL_COUNT"],"mappings":"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","file":"Bet.js","sourceRoot":"../../../../../../assets/cc-common/cc-slotbase-v2/gui","sourcesContent":["\n\nconst {formatMoney, formatWalletMoney, findKeyByValue, convertObjectToArrayKey, convertObjectToArray} = require('utils');\nconst {getBetValueWithGame, setBetValueWithGame} = require('gameCommonUtils');\n\ncc.Class({\n    extends: cc.Component,\n    properties: {\n        bg: cc.Node,\n        bgBetNormal: {\n            default: null,\n            type: cc.SpriteFrame,\n        },\n        bgBetMin: {\n            default: null,\n            type: cc.SpriteFrame,\n        },\n        bgBetMax: {\n            default: null,\n            type: cc.SpriteFrame,\n        },\n        betSFX: {\n            default: null,\n            type: cc.AudioClip,\n        },\n        decreaseSFX: {\n            default: null,\n            type: cc.AudioClip,\n        },\n        increaseSFX: {\n            default: null,\n            type: cc.AudioClip,\n        },\n        betDenomLabel: cc.Node,\n        isCircular: true,\n        increaseButton: cc.Button,\n        decreaseButton: cc.Button,\n    },\n\n    onLoad() {\n        this.node.on(\"UPDATE_BET\", this.updateBet, this);\n        this.node.on(\"LOAD_BET\", this.loadBet, this);\n        this.node.on('ENABLE_BET', this.enableBetBtn, this);\n        this.node.on('DISABLE_BET', this.disableBetBtn, this);\n        this.node.on('UPDATE_BET_VALUE', this.updateBetValue, this);\n        this.node.on('SWITCH_MODE', (isTrial)=>{\n            this.trialMode = isTrial;\n        });\n        this.increaseBetEvent = new cc.Event.EventCustom(\"INGAME_EVENT_RAISED\", true);\n        this.increaseBetEvent.setUserData({trigger:\"BET_INCREASE\"});\n    },\n    checkColorChange() {\n        const {currentBetData, steps} = this.node.gSlotDataStore.slotBetDataStore.data;\n        let minBet = 0;\n        let maxBet = 0;\n        if(Array.isArray(steps)){\n            minBet = steps[0];\n            maxBet = steps[steps.length - 1];\n        }else{\n            const newSteps = convertObjectToArray(steps);\n            minBet = newSteps[0]; \n            maxBet = newSteps[newSteps.length - 1];\n        }\n        if (this.bg) {\n            if (currentBetData === minBet) {\n                this.bg.getComponent(cc.Sprite).spriteFrame = this.bgBetMin;\n            } else if (currentBetData === maxBet) {\n                this.bg.getComponent(cc.Sprite).spriteFrame = this.bgBetMax;\n            } else {\n                this.bg.getComponent(cc.Sprite).spriteFrame = this.bgBetNormal;\n            }\n        }\n    },\n\n    loadBet({gameId}) {\n        const {steps, currentBetData} = this.node.gSlotDataStore.slotBetDataStore.data;\n        if (gameId) {\n            this.gameId = gameId;\n        }\n        let defaultBet = getBetValueWithGame(gameId, steps) || currentBetData;\n\n        this.updateBet(defaultBet);\n    },\n\n    updateBet(betId) {\n        const {steps} = this.node.gSlotDataStore.slotBetDataStore.data;\n        if (!findKeyByValue(steps, betId)) {\n            return;\n        }\n        if (!this.trialMode)\n            setBetValueWithGame(this.gameId, betId);\n        this.node.gSlotDataStore.slotBetDataStore.updateCurrentBet(betId);\n        this.updateBetValue(betId);\n        this.checkColorChange();\n        this.node.emit('BET_CHANGE', betId);\n\n        // if (!this.isCircular) this.checkDisableButtons(currentBetData, maxBet, minBet);\n    },\n    reduceBet() {\n        const {currentBetData, steps} = this.node.gSlotDataStore.slotBetDataStore.data;\n        let stepIndex = findKeyByValue(steps, currentBetData);\n        if (!stepIndex) {\n            return;\n        }\n        const arrayBetIndex = convertObjectToArrayKey(steps);\n        const minBet = steps[arrayBetIndex[0]];\n        const maxBet = steps[arrayBetIndex[arrayBetIndex.length - 1]];\n        let newBet = maxBet;\n        if (currentBetData > minBet) {\n            newBet = steps[arrayBetIndex[arrayBetIndex.indexOf(stepIndex) - 1]];\n        }\n        this.updateBet(newBet);\n\n        // if (!this.isCircular) this.checkDisableButtons(newBet, maxBet, minBet);\n        if (this.node.soundPlayer) this.node.soundPlayer.playSFX(this.decreaseSFX || this.betSFX);\n    },\n    increaseBet() {\n        const {currentBetData, steps} = this.node.gSlotDataStore.slotBetDataStore.data;\n        let stepIndex = findKeyByValue(steps, currentBetData);\n        if (!stepIndex) {\n            return;\n        }\n        const arrayBetIndex = convertObjectToArrayKey(steps);\n        const minBet = steps[arrayBetIndex[0]];\n        const maxBet = steps[arrayBetIndex[arrayBetIndex.length - 1]];\n        let newBet = minBet;\n        if (currentBetData < maxBet) {\n            newBet = steps[arrayBetIndex[arrayBetIndex.indexOf(stepIndex) + 1]];\n        }\n        this.updateBet(newBet);\n        // if (!this.isCircular) this.checkDisableButtons(newBet, maxBet, minBet);\n        if (this.node.soundPlayer) this.node.soundPlayer.playSFX(this.increaseSFX || this.betSFX);\n        this.increaseBetEvent.unuse();\n        this.increaseBetEvent.reuse(\"INGAME_EVENT_RAISED\", true);\n        this.node.dispatchEvent(this.increaseBetEvent);\n    },\n\n    disableBetBtn() {\n        if (this.increaseButton) {\n            this.increaseButton.interactable = false;\n        }\n        if (this.decreaseButton) {\n            this.decreaseButton.interactable = false;\n        }\n    },\n\n    enableBetBtn() {\n        if (this.increaseButton) {\n            this.increaseButton.interactable = true;\n        }\n        if (this.decreaseButton) {\n            this.decreaseButton.interactable = true;\n        }\n    },\n\n    checkDisableButtons(current, max, min) {\n        this.increaseButton.interactable = true;\n        this.decreaseButton.interactable = true;\n\n        if (current == max)\n            this.increaseButton.interactable = false;\n\n        if (current == min)\n            this.decreaseButton.interactable = false;\n    },\n\n    updateBetValue(value) {\n        if (this.betDenomLabel && this.node.config) {\n            const {PAY_LINE_LENGTH} = this.node.config;\n            this.betDenomLabel.getComponent(cc.Label).string = `${formatWalletMoney(Number(value) / Number(PAY_LINE_LENGTH))}`;\n            let formatFunc = formatWalletMoney;\n            let decimalCount;\n            if (this.node.config.IS_SUPPORT_MULTI_CURRENCY) {\n                let currencyConfig = this.node.config.CURRENCY_CONFIG[this.node.gSlotDataStore.currencyCode];\n                let betFormat = currencyConfig && currencyConfig.BET_FORMAT;\n                formatFunc = (betFormat && betFormat.IS_SHORT_FORMAT) ? formatWalletMoney : formatMoney;\n                decimalCount = betFormat ? betFormat.DECIMAL_COUNT : decimalCount;\n            }\n            this.node.emit(\"UPDATE_STRING\", {value: formatFunc(value, decimalCount)});\n        } else {\n            this.node.emit(\"UPDATE_STRING\", {value: formatMoney(value)});\n        }\n    }\n});\n"]}