{"version":3,"sources":["../../../../../../assets/cc-common/cc-slotbase-v2/slotGame/assets/cc-common/cc-slotbase-v2/slotGame/SlotGameDirector.js"],"names":["baseDirector","require","TurnBaseFSM","lodash","cc","Class","extends","properties","winAmount","Node","buttons","table","spinTimes","isAlwaysAutoSpin","autoSpin","get","_autoSpin","set","value","visible","beginToExit","_beginToExit","onExtendedLoad","node","on","stateUpdate","stateResume","ready","init","switchToTrial","switchToReal","enableButtonInteraction","disableSpin","enableSpin","runContinueScript","forceToExit","updateTextWin","freeSpinOptionTrigger","forceResetGameMode","_resetStoreScript","fsm","GAME_MODE","name","writer","mainDirector","gui","getWinAmount","emit","payline","runAction","extendInit","isStopRunning","spinClick","onSpacePressed","fastToResultClick","multiSpin1Click","multiSpin2Click","multiSpin3Click","multiSpin4Click","stopAutoSpinClick","checkAutoSpinFlag","onTouchStartSpinButton","onTouchCancelSpinButton","_showTrialButtons","disableBet","_callBackEnableButtons","unschedule","gSlotDataStore","playSession","isFinished","enableBet","scheduleOnce","callback","callbackStateUpdate","gameResume","MAX_BET","config","currentBetData","slotBetDataStore","data","_realBetData","Number","updateCurrentBet","bet","forceStopSpinning","promotion","promotionRemain","promotionTotal","currentGameMode","isUpdateWinAmount","_callBackAutoSpin","resetPlaysessionDataLastSpin","resultReceive","_gameRestart","DELAY_FORCE_STOP_SPINNING","winAmountPS","forceSpinning","actionTrigger","_updateJackpot","script","updateJackpot","executeNextScript","runCallbackStateUpdate","matrix","onIngameEvent","checkStatusRunning","undefined","_resetSpinButton","isDisplayDialog","isDisplayCutscene","director","can","readyToPlay","skipAllEffects","active","opacity","setGameSpeedMode","showTrialButtons","_super","isWin","getComponent","updateBgToWin","updateBgToLastWin","runPromotionSpin","promotionBetId","isRunPromotion","getTotalBetValue","_updatePromotionRemain","number","_resetPromotionButtons","updatePromotionData","betId","DEFAULT_BET","steps","betValue","String","split","_exitPromotionMode","_showPromotionPopup","showPromotionPopup","_showCurrencyErrorPopup","showCurrencyErrorPopup","_sendSpinToNetwork","sendSpinToNetwork","_newGameMode","resetGameSpeed","newGameMode","error","_resumeGameMode","hasTable","resumeGameMode","_gameStart","gameStart","hasPayline","_gameFinish","timerAFK","_gameEnd","isSkip","gameRestart","isAutoSpin","GAME_SPEED","isF2R","gameSpeed","INSTANTLY","_gameExit","forceToExitMode","freeGameRemain","bonusGameRemain","lastEvent","exit","_setTurboMode","modeTurbo","_setMode","mode","_updateMatrix","rowOffset","_resumeSpinTime","_updateSpinTimes","_updateLastWin","_updateWinningAmount","time","_addWinningAmount","_updateBet","updateBet","_runAutoSpin","_spinClick","_resultReceive","trialMode","_showResult","isFTR","countingFastToResult","_triggerWinEffect","_triggerSmallWinEffect","_setUpPaylines","payLines","_showNormalSymbolPayLine","_showNormalPayline","_showFreePayline","_blinkAllPaylines","_blinkAllPaylines_2","_showBonusPayLine","_showScatterPayLine","_showJackpotPayLine","_showWildPayLine","_clearPaylines","_forceToClearPaylines","_delayTimeScript","sequence","delayTime","callFunc","_showJackpotCutscene","content","showCutscene","_showCutscene","_showCutscene_2","_showUnskippedCutscene","_hideCutscene","cutscene","_openInfo","_openInfo_2","_content","Object","assign","instantly","_clearWinAmount","update","gameStateManager","wallet","getCurrentWallet","isNumber","isNaN","joinGameSuccess","_updateWallet","updateWallet","_updateWalletOnTrialSpinClick","updateWalletOnTrialSpinClick","_updateTrialWallet","updateTrialWallet","isOn","isNormalGame","turnOn","CAN_BACK_TO_REAL_MODE","_showMessageNoMoney","isUserLogout","loadConfigAsync","getConfig","LOGIN_IFRAME","MESSAGE_DIALOG","NO_MONEY","DEPOSIT_MONEY","message","ingameDeposit","strText","actionBtnOK","actionCancel","log","storeNextScripts","storeCurrentScripts","_checkPauseTutorial","flag","checkPauseTutorial","isPauseAutoSpin","_pauseUpdateJP","pauseJackpot","_resumeUpdateJP","resumeJackpot","_disableBet","_enableBet","_stopAutoSpin","_enableSkipTutorial","isTutorialShowing","tutorialMgr","enableSkipBtn","_sendFreeSpinToNetwork","triggerFreeSpinRequest","optionIndex","triggerFreeSpinOption","_updateWinningAmountSync","rate","isSessionEnded","timeShow","_canFastUpdateWinAmount","_winValue","runScript","playSoundWin","stopSoundWin","_showAnimIntro","showAnimIntro","_hideAnimIntro","hideAnimIntro","gameMode","isSkipAllScrips","forceStopAutoSpining","forceResetTable","forceResetBonusGame","forceResetFreeGame","forceResetNormalGame","forceResetExtend","forceResetEffect","reboot","resetCallbackWhenHide"],"mappings":"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","file":"SlotGameDirector.js","sourceRoot":"../../../../../../assets/cc-common/cc-slotbase-v2/slotGame","sourcesContent":["/* global ingameDeposit */\n\nconst baseDirector = require('BaseDirectorV2');\nconst TurnBaseFSM = require('turnBaseFSM');\nconst lodash = require('lodash');\n\ncc.Class({\n    extends: baseDirector,\n\n    properties: {\n        winAmount: cc.Node,\n        buttons: cc.Node,\n        table: cc.Node,\n        spinTimes: cc.Node,\n        isAlwaysAutoSpin: false,\n        autoSpin:{\n            get(){\n                return this._autoSpin;\n            },\n            set(value){\n                this._autoSpin = value;\n            },\n\n            visible: false,\n        },\n\n        beginToExit:{\n            get(){\n                return this._beginToExit;\n            },\n            set(value){\n                this._beginToExit = value;\n            },\n\n            visible: false,\n        },\n    },\n    onExtendedLoad() {\n        this.node.on(\"GAME_UPDATE\",this.stateUpdate,this);\n        this.node.on(\"GAME_RESUME\",this.stateResume,this);\n        this.node.on(\"GAME_ENTER\",this.ready,this);\n        this.node.on(\"GAME_INIT\",this.init,this);\n        this.node.on(\"SWITCH_TO_TRIAL\",this.switchToTrial,this);\n        this.node.on(\"SWITCH_TO_REAL\",this.switchToReal,this);\n        this.node.on(\"ENABLE_BUTTON_INTERACTION\",this.enableButtonInteraction,this);\n        this.node.on(\"SPIN_DISABLE\", this.disableSpin, this);\n        this.node.on(\"SPIN_ENABLE\", this.enableSpin, this);\n        this.node.on(\"RUN_CONTINUE_SCRIPT\",this.runContinueScript,this);\n        this.node.on(\"FORCE_TO_EXIT\", this.forceToExit, this);\n        this.node.on(\"UPDATE_TEXT_WIN\", this.updateTextWin, this);\n        this.node.on(\"TRIGGER_FREE_SPIN_OPTION\", this.freeSpinOptionTrigger, this);\n        this.node.on(\"FORCE_RESET_GAME_MODE\", this.forceResetGameMode, this);\n        this._resetStoreScript();\n    },\n\n    init() {\n        this.fsm = new TurnBaseFSM();\n        this.fsm.GAME_MODE = this.node.name; // for debug state-machine\n        this.writer = this.node.writer;\n\n        if (!this.spinTimes) this.spinTimes = this.node;\n        if (!this.winAmount) this.winAmount = this.node.mainDirector.gui.getWinAmount();\n\n        if (!this.table) this.table = this.node;\n        this.table.emit(\"INIT\");\n\n        if (!this.payline) this.payline = this.node;\n\n        //We are ready\n        this.runAction('GameStart');\n        this.extendInit();\n\n        this._autoSpin = false;\n        this._beginToExit = false;\n        this.isStopRunning = true;\n    },\n    extendInit(){\n        //Add your overwrite code here!\n    },\n\n    enableButtonInteraction(){\n        if (!this.buttons) this.buttons = this.node;\n        this.buttons.on(\"SPIN_CLICK\",this.spinClick,this);\n        this.buttons.on(\"SPACE_PRESSED\", this.onSpacePressed, this);\n        this.buttons.on(\"FAST_TO_RESULT_CLICK\",this.fastToResultClick,this);\n        this.buttons.on(\"MULTI_SPIN_1_CLICK\",this.multiSpin1Click,this);\n        this.buttons.on(\"MULTI_SPIN_2_CLICK\",this.multiSpin2Click,this);\n        this.buttons.on(\"MULTI_SPIN_3_CLICK\",this.multiSpin3Click,this);\n        this.buttons.on(\"MULTI_SPIN_4_CLICK\",this.multiSpin4Click,this);\n        this.buttons.on(\"STOP_AUTO_SPIN_CLICK\",this.stopAutoSpinClick,this);\n        this.buttons.on(\"CHECK_AUTO_SPIN_FLAG\",this.checkAutoSpinFlag,this);\n        this.buttons.on(\"ON_TOUCH_START\",this.onTouchStartSpinButton,this);\n        this.buttons.on(\"ON_TOUCH_CANCEL\",this.onTouchCancelSpinButton,this);\n    },\n    onTouchStartSpinButton(){\n        this._showTrialButtons(null, false);\n        this.node.mainDirector.disableBet();\n        if(this._callBackEnableButtons){\n            this.unschedule(this._callBackEnableButtons);\n        }\n    },\n\n    onTouchCancelSpinButton(){\n        if(this._callBackEnableButtons){\n            this.unschedule(this._callBackEnableButtons);\n        }\n        this._callBackEnableButtons = ()=>{\n            if(this.node.gSlotDataStore.playSession.isFinished !== false && this.isStopRunning) {\n                this.node.mainDirector.enableBet();\n                this._showTrialButtons(null, true);\n            }\n            this._callBackEnableButtons = null;\n        };\n        this.scheduleOnce(this._callBackEnableButtons, 0.2);\n    },\n\n    stateUpdate(callback) {\n        this.callbackStateUpdate = callback;\n        this.runAction('ResultReceive');\n    },\n    stateResume() {\n        this.fsm.gameResume();\n        this.runAction('Resume');\n    },\n    switchToTrial(){\n        const {MAX_BET} = this.node.config;\n        const {currentBetData} = this.node.gSlotDataStore.slotBetDataStore.data;\n        this._realBetData = Number(currentBetData);\n        this.node.gSlotDataStore.slotBetDataStore.updateCurrentBet(MAX_BET);\n        this.node.mainDirector.bet.emit(\"UPDATE_BET_VALUE\", MAX_BET);\n\n        this.runAction(\"SwitchMode\");\n    },\n    switchToReal(){\n        this.node.gSlotDataStore.slotBetDataStore.updateCurrentBet(this._realBetData);\n        this.node.mainDirector.bet.emit(\"UPDATE_BET_VALUE\", this._realBetData);\n        this.runAction(\"SwitchMode\");\n    },\n\n    forceStopSpinning() {\n        this.stopAutoSpinClick();\n\n        const { promotion, promotionRemain, promotionTotal } = this.node.gSlotDataStore;\n        if (promotionTotal && promotion && this.node.gSlotDataStore.currentGameMode == \"normalGame\") {\n            let spinTimes = promotionTotal == promotionRemain ? Number(promotionTotal) : (Number(promotionRemain || 0) + 1);\n            this.spinTimes.emit(\"UPDATE_SPINTIMES\", spinTimes);\n            this.node.gSlotDataStore.promotionRemain = spinTimes;\n        }\n        this.node.gSlotDataStore.isUpdateWinAmount = false;\n\n        if(this._callBackAutoSpin) {\n            this.unschedule(this._callBackAutoSpin);\n        }\n        this.resetPlaysessionDataLastSpin();\n        this.table.emit('STOP_REEL_WITH_RANDOM_MATRIX', () => {\n            this.isStopRunning = true;\n        });\n        this.fsm.resultReceive();\n        this.fastToResultClick();\n        this.runAction('GameFinish');\n        this.scheduleOnce(() => {\n            this._gameRestart();\n        }, this.node.config.DELAY_FORCE_STOP_SPINNING ? this.node.config.DELAY_FORCE_STOP_SPINNING : 0.6);\n    },\n\n    resetPlaysessionDataLastSpin() {\n        // Reset data last spin here\n        if (!this.node.gSlotDataStore.playSession) return;\n        if (this.node.gSlotDataStore.playSession.winAmount) {\n            this.node.gSlotDataStore.playSession.winAmount = 0;\n        }\n        if (this.node.gSlotDataStore.playSession.winAmountPS) {\n            this.node.gSlotDataStore.playSession.winAmountPS = 0;\n        }\n    },\n\n    forceSpinning() {\n        this.fsm.actionTrigger();\n        this.node.mainDirector.disableBet();\n        this.table.emit('START_SPINNING');\n    },\n\n    _updateJackpot(script) {\n        this.node.mainDirector.updateJackpot();\n        this.executeNextScript(script);\n    },\n    //This to ensure next script was tirgger after game mode state update\n    runCallbackStateUpdate() {\n        if (this.callbackStateUpdate && typeof this.callbackStateUpdate == \"function\") {\n            this.callbackStateUpdate();\n            this.callbackStateUpdate = null;\n        }\n    },\n    ready(matrix) {\n        if (matrix) {\n            this.table.emit(\"CHANGE_MATRIX\",{matrix});\n            this.table.emit(\"CLEAR_PAYLINES\");\n        }\n        // this.runAction('GameStart');\n        //NEED TO CHECK WHEN RESUME??? OR RENAME IT TO INIT SETUP\n        this.buttons.emit('SPIN_SHOW');\n        this.buttons.emit('SPIN_ENABLE');\n        this.buttons.emit('STOP_AUTO_SPIN_HIDE');\n\n        //Turn on when enter\n        if (this.isAlwaysAutoSpin) {\n            this.runAction('SpinByTimes', 999999);  \n        } else {\n            this.buttons.emit('FAST_TO_RESULT_HIDE');\n        }\n        this.node.mainDirector.onIngameEvent(\"ENTER_GAME_MODE\");\n    },\n\n    checkStatusRunning() {\n        return this.isStopRunning;\n    },\n\n    //Binding methods that called from controller\n    stopAutoSpinClick() {\n        this.buttons.emit('STOP_AUTO_SPIN_HIDE');\n        this.runAction('DisableAutoSpin');\n        this._autoSpin = false;\n        this.spinTimes.emit(\"RESET_SPINTIMES\");\n        if(this._callBackAutoSpin){\n            this.unschedule(this._callBackAutoSpin);\n            const {isFinished} = this.node.gSlotDataStore.playSession;\n            if(isFinished === undefined || isFinished === true){\n                this._resetSpinButton();\n                this._showTrialButtons(null, true);\n                this.node.mainDirector.enableBet();\n            }\n        }\n    },\n    onSpacePressed()\n    {\n        if (!this.node.mainDirector.isDisplayDialog() && !this.node.mainDirector.isDisplayCutscene())\n            this.spinClick();\n    },\n    spinClick() {\n        if (!this.node || !this.node.director || !this.node.director.fsm ||\n            !this.node.director.fsm.can('actionTrigger') || !this.node.mainDirector.readyToPlay) return;\n        this.skipAllEffects();\n        this.node.mainDirector.gui.emit(\"HIDE_INTRO\");\n        this.table.emit(\"HIDE_ANIM_INTRO\");\n        this.runAction('SpinClick');\n    },\n    fastToResultClick() {\n        if (!this.node.active || this.node.opacity == 0) return;\n        this.setGameSpeedMode(\"INSTANTLY\");\n        this.table.emit(\"FAST_TO_RESULT\");\n    },\n    multiSpin1Click() {\n        this.node.mainDirector && this.node.mainDirector.onIngameEvent(\"AUTO_SPIN_CLICK\");\n        this.runAction('SpinByTimes', 10);\n        this._autoSpin = true;\n    },\n    multiSpin2Click() {\n        this.node.mainDirector && this.node.mainDirector.onIngameEvent(\"AUTO_SPIN_CLICK\");\n        this.runAction('SpinByTimes', 25);\n        this._autoSpin = true;\n    },\n    multiSpin3Click() {\n        this.node.mainDirector && this.node.mainDirector.onIngameEvent(\"AUTO_SPIN_CLICK\");\n        this.runAction('SpinByTimes', 50);\n        this._autoSpin = true;\n    },\n    multiSpin4Click() {\n        this.node.mainDirector.showTrialButtons(false);\n        this.node.mainDirector && this.node.mainDirector.onIngameEvent(\"AUTO_SPIN_CLICK\");\n        this.runAction('SpinByTimes', 999999);\n        this._autoSpin = true;\n    },\n\n    forceToExit(script){\n        this._super(script);\n        this.fsm.actionTrigger();\n        this.fsm.resultReceive();\n    },\n\n    updateTextWin(isWin)\n    {\n        if (this.winAmount)\n        {\n            if (isWin) \n                this.winAmount.getComponent('WinAmount').updateBgToWin();\n            else \n                this.winAmount.getComponent('WinAmount').updateBgToLastWin();\n        }\n    },\n\n    runPromotionSpin() {\n        const {promotionBetId, promotionRemain} = this.node.gSlotDataStore;\n        this.buttons.emit('SHOW_ALL_PROMOTION_BUTTONS');\n        this.spinTimes.emit(\"UPDATE_SPINTIMES\",promotionRemain);\n        this.spinTimes.opacity = 0;\n        this.isRunPromotion = true;\n\n        // set Bet id with promotionBetId\n        this.runAction('SetUpBet', this.getTotalBetValue(promotionBetId));\n    },\n\n    _updatePromotionRemain(script, number) {\n        this.node.gSlotDataStore.promotionRemain = number;\n        this.buttons.emit('PROMOTION_STOP_SPIN_SHOW');\n        this.buttons.emit('PROMOTION_SPIN_HIDE');\n        this.buttons.emit('HIDE_PROMOTION_SPIN_EFFECT');\n        this.executeNextScript(script);\n    },\n\n    _resetPromotionButtons(script) {\n        this.buttons.emit('PROMOTION_SPIN_SHOW');\n        this.buttons.emit('PROMOTION_STOP_SPIN_HIDE');\n        this.buttons.emit('SHOW_PROMOTION_SPIN_EFFECT', 2);\n        this.executeNextScript(script);\n    },\n\n    updatePromotionData(data) {\n        const {betId, promotionRemain, promotionTotal} = data;\n        this.node.gSlotDataStore.promotion = true;\n        this.node.gSlotDataStore.promotionRemain = promotionRemain;\n        this.node.gSlotDataStore.promotionBetId = betId;\n        this.node.gSlotDataStore.promotionTotal = promotionTotal;\n    },\n\n    getTotalBetValue(betId) {\n        const { DEFAULT_BET} = this.node.config;\n        const {steps} = this.node.gSlotDataStore.slotBetDataStore.data;\n        const betValue = String(betId).split('');\n        return steps[betValue[0]] || DEFAULT_BET;\n    },\n\n    _exitPromotionMode(script) {\n        if (this.isRunPromotion) {\n            this.isRunPromotion = false;\n            this.buttons.emit('HIDE_ALL_PROMOTION_BUTTONS');\n            this.spinTimes.emit(\"RESET_SPINTIMES\");\n            this.node.gSlotDataStore.promotion = false;\n            this.spinTimes.opacity = 255;\n            this.executeNextScript(script);\n        } else {\n            this.executeNextScript(script);\n        }\n        \n    },\n\n    _showPromotionPopup(script) {\n        this.node.mainDirector.showPromotionPopup();\n        this.executeNextScript(script);\n    },\n\n    _showCurrencyErrorPopup(script) {\n        this.node.mainDirector.showCurrencyErrorPopup();\n        this.executeNextScript(script);\n    },\n\n    //Send data to network\n    _sendSpinToNetwork(script, {currentBetData}) {\n        this.node.mainDirector.sendSpinToNetwork(currentBetData);\n        this.node.mainDirector.gui.emit(\"HIDE_INTRO\");\n        this.table.emit(\"HIDE_ANIM_INTRO\");\n        this.executeNextScript(script);\n    },\n\n    //Trigger other mode\n    _newGameMode(script, {name, data}) {\n        this.resetGameSpeed();\n        if (this.node.mainDirector) {\n            this.node.mainDirector.newGameMode({name, data}, () =>  {\n                this.executeNextScript(script);\n            });\n        } else {\n            cc.error('There is no main Director to new game mode');\n            this.executeNextScript(script);\n        }\n    },\n    _resumeGameMode(script, {name, data}) {\n        this.resetGameSpeed();\n        if(!this.hasTable){\n            this.hasTable = true;\n        }\n        if (this.node.mainDirector) {\n            this.node.mainDirector.resumeGameMode({name, data}, () =>  {\n                this.executeNextScript(script);\n            });\n        } else {\n            cc.error('There is no main Director to resume game mode');\n            this.executeNextScript(script);\n        }\n\n        if(!this._autoSpin){\n            this.buttons.emit('SPIN_SHOW');\n            this.buttons.emit('SPIN_ENABLE');\n            this.buttons.emit('FAST_TO_RESULT_HIDE');\n            this.buttons.emit('STOP_AUTO_SPIN_HIDE', true);\n        }\n    },\n\n    //Game flow methods\n    _gameStart(script) {\n        if (!this.fsm.can('gameStart')) return;\n        this.fsm.gameStart();\n        this.hasTable = false;\n        this.hasPayline = false;\n        if ((this.table && this.table.active === true)) {\n            this.hasTable = true;\n        }\n        if ((this.table && this.table.hasPayline === true)) {\n            this.hasPayline = true;\n        }\n        this.executeNextScript(script);\n    },\n    _gameFinish(script) {\n        //Finish will show big win animation\n        this.node.mainDirector.onIngameEvent(\"GAME_RESET_SESSION\");\n        this.node.gSlotDataStore.timerAFK = 0;\n        this.runAction('GameFinish');\n        this.executeNextScript(script);\n    },\n    _gameEnd(script) {\n        this.runAction('GameEnd');\n        this.executeNextScript(script);\n    },\n    _gameRestart(script, isSkip = false) {\n        if (this.node.gSlotDataStore.currentGameMode == 'normalGame') {\n            this.node.mainDirector.onIngameEvent(\"NORMAL_GAME_RESTART\");\n        }\n        if (!this.fsm.can('gameRestart')) return;\n        this.fsm.gameRestart();\n        if (!this.node.gSlotDataStore.isAutoSpin) {\n            this.buttons.emit('SPIN_SHOW');\n            this.buttons.emit('SPIN_ENABLE');\n        }\n        \n        if (!this.isAlwaysAutoSpin) {\n            this.buttons.emit('FAST_TO_RESULT_HIDE');\n        }\n        this.runAction('GameRestart');\n        const { GAME_SPEED } = this.node.config;\n        const isF2R = GAME_SPEED && this.node.gSlotDataStore.gameSpeed === GAME_SPEED.INSTANTLY;\n        if (!isSkip && !isF2R) {\n            this.resetGameSpeed();\n        }\n\n        this.executeNextScript(script);\n    },\n    _gameExit(script) {\n        if (!this.fsm.can('gameRestart')) return;\n        this.fsm.gameRestart();\n        this.buttons.emit('SPIN_SHOW');\n        this.buttons.emit('SPIN_ENABLE');\n\n        if(this.forceToExitMode){\n            this.node.gSlotDataStore.playSession.freeGameRemain = 0;    \n            this.node.gSlotDataStore.playSession.bonusGameRemain = 0;\n            this.node.gSlotDataStore.lastEvent = {};   \n            this.node.gSlotDataStore.isAutoSpin = false;\n            this.forceToExitMode = false;  \n        }\n\n        //Turn off before swicth mode, because 2 mode use same code, hehe\n        if (this.isAlwaysAutoSpin) {\n            this.runAction('DisableAutoSpin');\n        } else {\n            this.buttons.emit('FAST_TO_RESULT_HIDE');\n        }\n\n        this.table.emit(\"GAME_EXIT\");\n\n        this.node.exit(() => {\n            this.executeNextScript(script);\n        });\n        this._beginToExit = false;\n    },\n    \n\n    //Update game settings\n    _setTurboMode() {\n        if (this.node.gSlotDataStore.modeTurbo) {\n            this._setMode('TURBO');\n        } else {\n            this._setMode('FAST');\n        }\n    },\n\n    _setMode(mode) {\n        this.table.emit(\"SET_MODE\",mode);\n    },\n    _updateMatrix(script, {matrix, rowOffset}) {\n        this.table.emit(\"CHANGE_MATRIX\",{matrix, rowOffset});\n        this.executeNextScript(script);\n    },\n    _resumeSpinTime(script, spinTimes) {\n        if(this._autoSpin == true){\n            this.node.gSlotDataStore.isAutoSpin = true;\n            this.node.gSlotDataStore.spinTimes = spinTimes;\n        }\n        this.executeNextScript(script);\n    },\n    _updateSpinTimes(script, spinTimes) {\n        this.spinTimes.emit(\"UPDATE_SPINTIMES\",spinTimes);\n        this.executeNextScript(script);\n    },\n    _updateLastWin(script, data) {\n        if (data) {\n            this.winAmount.emit(\"CHANGE_TO_LAST_WIN\");\n        } else {\n            this.winAmount.emit(\"CHANGE_TO_WIN\");\n        }\n        this.executeNextScript(script);\n    },\n    _updateWinningAmount(script, {winAmount, time}) {\n        this.winAmount.emit(\"UPDATE_WIN_AMOUNT\",{value: winAmount, time});\n        this.executeNextScript(script);\n    },\n\n    //TODO remove it\n    _addWinningAmount(script, {winAmount, time}) {\n        this.winAmount.emit(\"UPDATE_WIN_AMOUNT\",{value: winAmount, time});\n        this.executeNextScript(script);\n    },\n    //Only when resume\n    _updateBet(script, betValue) {\n        if (this.node.mainDirector) {\n            this.node.mainDirector.updateBet({betId: betValue});\n        } else {\n            cc.error('There is no main Director to update bet');\n        }\n        this.executeNextScript(script);\n    },\n\n    //NORMAL SPIN FLOW\n    _runAutoSpin(script) {\n        if (!this.isAlwaysAutoSpin /*normal*/ && this.node.gSlotDataStore.isAutoSpin) {\n            this.buttons.emit('STOP_AUTO_SPIN_SHOW');\n        }\n        this.node.mainDirector.gui.emit(\"HIDE_INTRO\");\n        this.table.emit(\"HIDE_ANIM_INTRO\");\n        this.skipAllEffects();\n        this.buttons.emit('SPIN_DISABLE');\n        this._showTrialButtons(null, false);\n        this._callBackAutoSpin = () => {\n            this.runAction('SpinClick');\n            this.executeNextScript(script);\n            this._callBackAutoSpin = null;\n        };\n        this.scheduleOnce(this._callBackAutoSpin, 0.5);\n    },\n    _spinClick(script) {\n        if (!this.fsm.can('actionTrigger')) return;\n        this.fsm.actionTrigger();\n        this._setTurboMode();\n        this.resetGameSpeed();\n        this._showTrialButtons(null, false);\n        this.buttons.emit('SPIN_DISABLE');\n        this.buttons.emit('SPIN_HIDE');\n        this.buttons.emit('FAST_TO_RESULT_DISABLE');\n        this.buttons.emit('DISABLE_PROMOTION_STOP_SPIN');\n        this.buttons.emit('FAST_TO_RESULT_SHOW');\n\n        if (!this.hasTable) {\n            this.executeNextScript(script);\n            return;\n        }\n        this.isStopRunning = false;\n        this.table.emit(\"START_SPINNING\");\n        this.node.mainDirector.onIngameEvent(\"SPIN_CLICK\");\n        this.executeNextScript(script);\n    },\n    _resultReceive(script,data) {\n        if (!this.fsm.can('resultReceive')) return;\n        this.fsm.resultReceive();\n        this.buttons.emit('FAST_TO_RESULT_ENABLE');\n        this.buttons.emit('ENABLE_PROMOTION_STOP_SPIN');\n        if(this.node.mainDirector.trialMode && this.node.gSlotDataStore.currentGameMode !== \"normalGame\"){\n            this._showTrialButtons(null, true);\n        }\n        //Check if we have table to show or not.... or should we use base interface????\n        //Anyways,... I can decoupling table from game mode, thats good enough for v2\n        if (!this.hasTable) {\n            this.executeNextScript(script);\n            return;\n        }\n        this.table.emit(\"STOP_SPINNING\",data,() => {\n            this.node.mainDirector.onIngameEvent(\"SPIN_STOPPED\");\n            this.isStopRunning = true;\n            this.executeNextScript(script);\n        });\n    },\n    _showResult(script) {\n        const isFTR = this.node.gSlotDataStore.gameSpeed === this.node.config.GAME_SPEED.INSTANTLY;\n        if (isFTR) this.node.mainDirector.countingFastToResult();\n        this.runAction('ShowResults');\n        this.executeNextScript(script);\n    },\n\n    _triggerWinEffect(script) {\n        this.executeNextScript(script);\n    },\n    _triggerSmallWinEffect(script) {\n        this.executeNextScript(script);\n    },\n\n    //PAYLINES\n    _setUpPaylines(script, {matrix, payLines}) {\n        this.hasPayline = true;\n        this.table.emit(\"SETUP_PAYLINES\",matrix, payLines);\n        this.executeNextScript(script);\n    },\n    \n    _showNormalSymbolPayLine(script,payLines) {\n        if (!this.hasPayline) {\n            this.executeNextScript(script);\n            return;\n        }\n        this.table.emit(\"BLINK_ALL_NORMAL_PAYLINES\",() => {\n            this.table.emit(\"SHOW_ALL_NORMAL_PAYLINES\",payLines);\n            this.executeNextScript(script);\n        });\n    },\n    _showNormalPayline(script)\n    {\n        if (!this.hasPayline) {\n            this.executeNextScript(script);\n            return;\n        }\n        this.table.emit(\"SHOW_ALL_NORMAL_PAYLINES\", ()=>{\n            this.executeNextScript(script);\n        });\n    },\n    _showFreePayline(script) {\n        if (!this.hasPayline) {\n            this.executeNextScript(script);\n            return;\n        }\n        this.table.emit(\"SHOW_ALL_FREE_PAYLINES\", () => {\n            this.executeNextScript(script);\n        });\n    },\n    _blinkAllPaylines(script) {\n        if (!this.hasPayline) {\n            this.executeNextScript(script);\n            return;\n        }\n        this.table.emit(\"BLINK_ALL_NORMAL_PAYLINES\", () => {\n            this.executeNextScript(script);\n        });\n    },\n    _blinkAllPaylines_2(script) {\n        this.executeNextScript(script);\n    },\n    _showBonusPayLine(script) {\n        if (!this.hasPayline) {\n            this.executeNextScript(script);\n            return;\n        }\n        this.table.emit(\"SHOW_BONUS_PAYLINE\",() => {\n            this.node.mainDirector.onIngameEvent(\"ON_FINISH_BONUS_PAYLINE\");\n            this.executeNextScript(script);\n        });\n    },\n    _showScatterPayLine(script) {\n        if (!this.hasPayline) {\n            this.executeNextScript(script);\n            return;\n        }\n        this.table.emit(\"SHOW_SCATTER_PAYLINE\",() => {\n            this.node.mainDirector.onIngameEvent(\"ON_FINISH_SCATTER_PAYLINE\");\n            this.executeNextScript(script);\n        });\n    },\n    _showJackpotPayLine(script) {\n        if (!this.hasPayline) {\n            this.executeNextScript(script);\n            return;\n        }\n        this.table.emit(\"SHOW_JACKPOT_PAYLINE\",() => {\n            this.node.mainDirector.onIngameEvent(\"ON_FINISH_JACKPOT_PAYLINE\");\n            this.executeNextScript(script);\n        });\n    },\n    _showWildPayLine(script) {\n        if (!this.hasPayline) {\n            this.executeNextScript(script);\n            return;\n        }\n        this.table.emit(\"SHOW_WILD_PAYLINE\",() => {\n            this.executeNextScript(script);\n        });\n    },\n    _clearPaylines(script) {\n        if (!this.hasPayline) {\n            this.executeNextScript(script);\n            return;\n        }\n        this.hasPayline = false;\n        this.table.emit(\"CLEAR_PAYLINES\");\n        this.executeNextScript(script);\n    },\n\n    _forceToClearPaylines(script){\n        this.table.emit(\"CLEAR_PAYLINES\");\n        this.hasPayline = false;\n        this.executeNextScript(script);\n    },\n\n    _delayTimeScript(script, time) {\n        if (this.node.mainDirector.node) {\n            this.node.mainDirector.node.runAction(cc.sequence(\n                cc.delayTime(time),\n                cc.callFunc(() => {\n                    this.executeNextScript(script);\n                }),\n            ));\n        } else {\n            this.executeNextScript(script);\n        }\n    },\n\n    _showJackpotCutscene(script,{name,content}){\n        if (this.node.mainDirector) {\n            this.node.mainDirector.showCutscene(name,content,() => {\n                this.executeNextScript(script);\n            });\n        } else {\n            cc.error('There is no main Director to play cutscenes');\n            this.executeNextScript(script);\n        }\n    },\n\n    //Cutscenes\n    _showCutscene(script,{name,content}){\n        if (this.node.mainDirector) {\n            this.node.mainDirector.showCutscene(name,content,() => {\n                this.executeNextScript(script);\n            });\n        } else {\n            cc.error('There is no main Director to play cutscenes');\n            this.executeNextScript(script);\n        }\n    },\n\n    _showCutscene_2(script){\n        this.executeNextScript(script);\n    },\n\n    _showUnskippedCutscene(script, {name,content}){\n        if (this.node.mainDirector) {\n            this.node.mainDirector.showCutscene(name,content,() => {\n                this.executeNextScript(script);\n            });\n        } else {\n            cc.error('There is no main Director to play cutscenes');\n            this.executeNextScript(script);\n        }\n    },\n\n    _hideCutscene(script, {name}){\n        if (this.node.mainDirector) {\n            this.node.mainDirector.cutscene.emit(\"CLOSE_CUTSCENE\", name);\n        } else {\n            cc.error('There is no main Director to play cutscenes');\n        }\n    },\n\n    _openInfo(script,{name,content}){\n        if (this.node.mainDirector) {\n            this.node.mainDirector.showCutscene(name,content,() => {\n                this.executeNextScript(script);\n            });\n        } else {\n            cc.error('There is no main Director to play cutscenes');\n            this.executeNextScript(script);\n        }\n    },\n\n    _openInfo_2(script,{name,content}){\n        if (this.node.mainDirector) {\n            let _content = Object.assign({}, content);\n            _content.instantly = true;\n            this.node.mainDirector.showCutscene(name,_content,() => {\n                this.executeNextScript(script);\n            });\n        } else {\n            cc.error('There is no main Director to play cutscenes');\n            this.executeNextScript(script);\n        }\n    },\n\n    _clearWinAmount(script) {\n        this.winAmount.emit(\"RESET_NUMBER\");\n        this.executeNextScript(script);\n    },\n\n    update() {\n        if (!this.node.mainDirector || !this.node.mainDirector.gameStateManager) return;\n\n        const wallet = this.node.mainDirector.gameStateManager.getCurrentWallet();\n        if (!lodash.isNumber(wallet) || lodash.isNaN(wallet)) return;\n\n        if (this.node.director.fsm.can('actionTrigger') && this.node.mainDirector.joinGameSuccess) {\n            this.runAction('UpdateWalletData', wallet);\n        }\n    },\n\n    _updateWallet(script) {\n        if (this.node.mainDirector) {\n            this.node.mainDirector.updateWallet();  \n            this.executeNextScript(script);\n        } else {\n            cc.error('There is no main Director to play cutscenes');\n            this.executeNextScript(script);\n        }\n    },\n\n    _updateWalletOnTrialSpinClick(script) {\n        if (this.node.mainDirector) {\n            this.node.mainDirector.updateWalletOnTrialSpinClick();\n            this.executeNextScript(script);\n        } else {\n            cc.error('There is no main Director to play cutscenes');\n            this.executeNextScript(script);\n        }\n    },\n\n    _updateTrialWallet(script, data) {\n        if (this.node.mainDirector) {\n            this.node.mainDirector.updateTrialWallet(data);\n            this.executeNextScript(script);\n        } else {\n            cc.error('There is no main Director to play cutscenes');\n            this.executeNextScript(script);\n        }\n    },\n\n    _showTrialButtons(script, isOn) {\n        let isAutoSpin = this.node.gSlotDataStore.isAutoSpin;\n        let isNormalGame = this.node.gSlotDataStore.currentGameMode === \"normalGame\";\n        if (this.node.mainDirector) {\n            const { trialMode } = this.node.mainDirector;\n            if (trialMode && !isNormalGame && !this.forceToExitMode) {\n                this.node.mainDirector.showTrialButtons(isOn);\n            } else {\n                const turnOn = isOn && !isAutoSpin && this.isStopRunning;\n                this.node.mainDirector.showTrialButtons(turnOn);\n            }\n        }\n        if (this.node.mainDirector.trialMode && this.node.config.CAN_BACK_TO_REAL_MODE) {\n            this.node.mainDirector.showTrialButtons(true);\n        }\n        this.executeNextScript(script);\n    },\n\n    _showMessageNoMoney(script, data)\n    {\n        if (this.node.mainDirector.isUserLogout()) return;\n        const loadConfigAsync = require('loadConfigAsync');\n        const {LOGIN_IFRAME} = loadConfigAsync.getConfig();\n        const {MESSAGE_DIALOG: {NO_MONEY, DEPOSIT_MONEY}} = this.node.config;\n\n        let message = {\n            name: \"DialogMessage\",\n        };\n\n        if (LOGIN_IFRAME && typeof(ingameDeposit) === 'function')\n        {\n            message.content = {strText: DEPOSIT_MONEY, actionBtnOK: ()=>{ingameDeposit();}, actionCancel: ()=>{}};\n            cc.log(\"Show Deposit\");\n        }\n        else\n        {\n            message.content = {strText: NO_MONEY, actionBtnOK: () => {data && data.callback && data.callback();}};\n            cc.log(\"Show No Money\");\n        }\n        this._showCutscene(script, message);\n    },\n\n    _resetSpinButton(script){\n        this.buttons.emit('SPIN_SHOW');\n        this.buttons.emit('SPIN_ENABLE');\n        this.buttons.emit('STOP_AUTO_SPIN_HIDE');\n        this.buttons.emit('FAST_TO_RESULT_HIDE');\n        const {promotion} = this.node.gSlotDataStore;\n        if (!promotion) {\n            this.spinTimes.emit(\"RESET_SPINTIMES\");\n        }\n        this._autoSpin = false;\n        this.executeNextScript(script);\n    },\n    \n    disableSpin()\n    {\n        this.buttons.emit(\"SPIN_DISABLE\");\n    },\n\n    enableSpin()\n    {\n        this.buttons.emit(\"SPIN_ENABLE\");\n    },\n\n    runContinueScript() {\n        const {data, script} = this.storeNextScripts;\n        this[this.storeCurrentScripts] && this[this.storeCurrentScripts](script, data);\n        this._resetStoreScript();\n    },\n\n    _resetStoreScript() {\n        this.storeCurrentScripts = '';\n        this.storeNextScripts = {\n            script: [],\n            data: {}\n        };\n    },\n\n    _checkPauseTutorial(flag) {\n        const {mainDirector} = this.node;\n        return mainDirector && mainDirector.checkPauseTutorial(flag);\n    },\n\n    checkAutoSpinFlag(flag) {\n        const isPauseAutoSpin = this._checkPauseTutorial(flag);\n        this.buttons.emit('PAUSE_AUTO_SPIN', isPauseAutoSpin);\n    },\n\n    _pauseUpdateJP(script){\n        this.node.mainDirector.pauseJackpot();\n        this.executeNextScript(script);\n    },\n    _resumeUpdateJP(script){\n        this.node.mainDirector.resumeJackpot();\n        this.executeNextScript(script);\n    },\n    _disableBet(script) {\n        this.node.mainDirector.disableBet();\n        this.executeNextScript(script);\n    },\n    _enableBet(script) {\n        this.node.mainDirector.enableBet();\n        this.executeNextScript(script);\n    },\n\n    _stopAutoSpin(script) {\n        this.stopAutoSpinClick();\n        this.executeNextScript(script);\n    },\n\n    _enableSkipTutorial(script, isOn) {\n        if (this.node.mainDirector.isTutorialShowing()) {\n            this.node.mainDirector.tutorialMgr.enableSkipBtn(isOn);\n        }\n        this.executeNextScript(script);\n    },\n\n    _sendFreeSpinToNetwork(script) {\n        this.node.mainDirector.gameStateManager.triggerFreeSpinRequest();\n        this.executeNextScript(script);\n    },\n\n    freeSpinOptionTrigger(optionIndex){\n        if(this.node.mainDirector){\n            this.node.mainDirector.gameStateManager.triggerFreeSpinOption(optionIndex);\n            this.fsm.gameRestart();\n            this.hasTable = false;\n            this.fsm.actionTrigger();\n        }\n    },\n\n    skipAllEffects(){\n        if (this.node.mainDirector) {\n            this.node.mainDirector.cutscene.emit(\"SKIP_CUTSCENES\");\n        } else {\n            cc.error('There is no main Director to skip cutscenes');\n        }\n    },\n\n    _updateWinningAmountSync(script, {winAmount, time, rate, isSessionEnded}){\n        const {isAutoSpin, gameSpeed} = this.node.gSlotDataStore;\n        const isFTR = gameSpeed === this.node.config.GAME_SPEED.INSTANTLY;\n        const timeShow = isFTR ? 20 : time;\n        this._canFastUpdateWinAmount = true;\n        this._winValue = winAmount;\n        let runScript = false;\n        if (!isFTR) {\n            this.playSoundWin(rate);\n        }\n        this.winAmount.emit(\"UPDATE_WIN_AMOUNT\",{value: winAmount, time: timeShow}, ()=>{\n            this._canFastUpdateWinAmount = false;\n            this._winValue = 0;\n            this.stopSoundWin();\n            (!isSessionEnded || !runScript) && this.executeNextScript(script);\n        });\n        if (isSessionEnded && !isAutoSpin) {\n            runScript = true;\n            this.executeNextScript(script);\n        }\n    },\n\n    playSoundWin(){\n        /**@override to play sound */\n        // if (this.node.soundPlayer) this.node.soundPlayer.playSoundWinLine(rate);\n    },\n\n    stopSoundWin(){\n        /**@override to stop sound */\n        // if (this.node.soundPlayer) this.node.soundPlayer.stopSoundWinLine();\n    },\n\n    _showAnimIntro(script){\n        this.showAnimIntro();\n        this.executeNextScript(script);\n    },\n\n    _hideAnimIntro(script){\n        this.hideAnimIntro();\n        this.executeNextScript(script);\n    },\n\n    showAnimIntro(){\n        this.table.emit(\"SHOW_ANIM_INTRO\");\n    },\n\n    hideAnimIntro(){\n        this.node.mainDirector.gui.emit(\"HIDE_INTRO\");\n        this.table.emit(\"HIDE_ANIM_INTRO\");\n    },\n\n\n    // handle back to real mode or force reset game mode\n    forceResetGameMode(gameMode) {\n        this.isSkipAllScrips = true;\n        \n        this.forceStopAutoSpining();\n        this.forceResetTable();\n\n        if (gameMode === 'bonusGame') {\n            this.forceResetBonusGame();\n        }\n        if (gameMode === 'freeGame') {\n            this.forceResetFreeGame();\n        }\n        if (gameMode === 'normalGame') {\n            this.forceResetNormalGame();\n        }\n        this.forceResetExtend();\n        this.forceResetEffect();\n    },\n\n    forceStopAutoSpining() {\n        if (this.buttons) this.buttons.emit('STOP_AUTO_SPIN_HIDE');\n        if (this.spinTimes) this.spinTimes.emit(\"RESET_SPINTIMES\");\n        this._autoSpin = false;\n        if (this._callBackAutoSpin) {\n            this.unschedule(this._callBackAutoSpin);\n        }\n    },\n\n    forceResetTable() {\n        if (!this.table) return;\n        if (!this.isStopRunning) {\n            this.table.emit('STOP_REEL_WITH_RANDOM_MATRIX', () => {\n                this.isStopRunning = true;\n            });\n        }\n        this.table.emit('FORCE_RESET_TABLE_EFFECT');\n        this.fsm.resultReceive();\n        this.fastToResultClick();\n    },\n\n    forceResetNormalGame() {\n        this.scheduleOnce(() => {\n            this.fsm.reboot();\n            this.fsm.gameStart();\n            this.isSkipAllScrips = false;\n            this._resetSpinButton();\n            this._showTrialButtons(null, true);\n            this.node.mainDirector.enableBet();\n        }, 1);\n    },\n\n    forceResetFreeGame() {\n        this.node.resetCallbackWhenHide();\n        this.scheduleOnce(() => {\n            this.isSkipAllScrips = false;\n            this.table.emit(\"GAME_EXIT\");\n            this.fsm.reboot();\n            this.fsm.gameStart();\n            this.node.exit(() => {});\n        }, 1);\n    },\n\n    forceResetBonusGame() {\n        this.node.resetCallbackWhenHide();\n        this.scheduleOnce(() => {\n            this.fsm.reboot();\n            this.fsm.gameStart();\n            this.isSkipAllScrips = false;\n            this.node.exit(() => {});\n        }, 1);\n    },\n\n    forceResetExtend() {\n        // reset topup, gamble, etc...\n    },\n\n    forceResetEffect() {\n        // override it to stop action, tween, schedule or cutscenes\n    },\n});\n"]}