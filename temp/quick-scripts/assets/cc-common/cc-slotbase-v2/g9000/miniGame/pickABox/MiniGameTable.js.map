{"version":3,"sources":["MiniGameTable.js"],"names":["require","showScoreOnScreen","convertAssetArrayToObject","cc","Class","extends","Component","properties","itemPrefab","Prefab","scorePrefab","treasures","default","type","SpriteFrame","onLoad","node","mainComponent","assets","createMiniGame","data","callbackMiniGame","removeAllNode","i","length","row","j","dataClick","col","x","y","newItems","instantiate","parent","init","itemValue","setPosition","opacity","runAction","fadeIn","itemTreasure","initLoopingAnimation","getCurrentNode","rewriteSprite","callback","bonus","count","spriteFrame","replaceSpriteFrame","score","currentSymbol","showScore","removeAllChildren","itemNode","delay","dur","miniGameLayout","moneyFrame","getChildByName","rate","startX","startY","endX","width","endY"],"mappings":"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","file":"MiniGameTable.js","sourceRoot":"../../../../../../../../assets/cc-common/cc-slotbase-v2/g9000/miniGame/pickABox","sourcesContent":["\n\nconst { showScoreOnScreen } = require('globalAnimationLibrary');\nconst {convertAssetArrayToObject} = require('utils');\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        itemPrefab: cc.Prefab,\n        scorePrefab: cc.Prefab,\n        treasures: {\n            default: [],\n            type: cc.SpriteFrame,\n        }\n    },\n    onLoad() {\n        this.node.mainComponent = this;\n        this.assets = convertAssetArrayToObject(this.treasures);\n    },\n\n    createMiniGame(data, callbackMiniGame) {\n        this.removeAllNode();\n        \n        for (let i = 0; i < data.length; i++) {\n            const row = data[i];\n            for (let j = 0; j < row.length; j++) {\n                const dataClick = {row: i + 1, col: j + 1};\n                // const x = j * 270 - 680 + j * 17;\n                // const y = 140 - 250 * i;\n                const x = j * 336;\n                const y = i * (-240);\n                \n                const newItems = cc.instantiate(this.itemPrefab);\n                newItems.parent = this.node;\n                newItems.mainComponent.init({\n                    data: dataClick,\n                    callbackMiniGame,\n                    itemValue: row[j]\n                });\n                newItems.setPosition(x, y);\n                newItems.opacity = 0;\n                newItems.runAction(cc.fadeIn(0.2));\n                this.itemTreasure[(i + 1) + '' + (j + 1)] = newItems;\n                newItems.mainComponent.initLoopingAnimation();\n            }\n        }\n    },\n    getCurrentNode(data) {\n        const {row, col} = data.node;\n        return this.itemTreasure[row + '' + col];\n    },\n\n    rewriteSprite(data, callback) {\n        const {node: {row, col}, bonus, count} = data;\n        const spriteFrame = this.assets['treasure' + bonus];\n        this.itemTreasure[row + '' + col].mainComponent.replaceSpriteFrame(spriteFrame, bonus, this.assets, count, (score, currentSymbol) => { \n            this.showScore(score, currentSymbol, 0, .7, callback);\n        });\n    },\n    removeAllNode() {\n        this.itemTreasure = {};\n        this.node.removeAllChildren();\n    },\n    showScore(score, itemNode, delay, dur, callback) {\n        const miniGameLayout = this.node.parent;\n        const moneyFrame = miniGameLayout.getChildByName(\"MoneyFrame\");\n        const rate = miniGameLayout.getChildByName(\"MoneyFrame\").getChildByName(\"Rate\");\n        const bonus = itemNode.currentSymbol.getChildByName(\"Bonus\");\n\n        const startX = this.node.x + itemNode.x + bonus.x;\n        const startY = this.node.y + itemNode.y + bonus.y + 25;\n        const endX = moneyFrame.x + rate.x + rate.width / 2;\n        const endY = moneyFrame.y + rate.y;\n\n        showScoreOnScreen(miniGameLayout, this.scorePrefab, { \"delay\": delay, \"dur\": dur, \"score\": score, \"startX\": startX, \"startY\": startY, \"endX\": endX, \"endY\": endY });\n    \n        if (callback && typeof callback == \"function\") {\n            callback();\n        }\n    }\n});\n"]}