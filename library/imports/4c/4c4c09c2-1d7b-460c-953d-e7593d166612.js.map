{"version":3,"sources":["../../../../../../../assets/cc-common/cc-share-v1/common/viewComponent/assets/cc-common/cc-share-v1/common/viewComponent/dragAndDrop.js"],"names":["TouchDragger","cc","Class","extends","Component","setEventClick","callback","setEventMoveOpen","callbackMoveOpen","setEventMoveClose","callbackMoveClose","noDraggableToNode","onLoad","initDNR","node","beforMove","x","y","on","Node","EventType","TOUCH_START","TOUCH_MOVE","event","delta","touch","getDelta","getComponent","propagate","stopPropagation","TOUCH_END","Math","sqrt","pow","checkTwoRectanglesOverlap","moveTo","v2","runAction","rectangle1","rectangle2","inside","top_left","height","bottom_left","top_right","width","bottom_right","checkPointInsideRectangle","point","rectangle"],"mappings":"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","file":"dragAndDrop.js","sourceRoot":"../../../../../../../assets/cc-common/cc-share-v1/common/viewComponent","sourcesContent":["\n\nconst TouchDragger = cc.Class({\n    extends: cc.Component,\n\n    setEventClick(callback) {\n        this.callback = callback;\n    },\n\n    setEventMoveOpen(callbackMoveOpen) {\n        this.callbackMoveOpen = callbackMoveOpen;\n    },\n\n    setEventMoveClose(callbackMoveClose) {\n        this.callbackMoveClose = callbackMoveClose;\n    },\n    noDraggableToNode(noDraggableToNode){\n        this.noDraggableToNode = noDraggableToNode;  \n    },\n    onLoad() {\n        this.initDNR();\n    },\n\n    initDNR() {\n        const node = this.node;\n        node.beforMove = {x: node.x , y: node.y};\n\n        node.on(cc.Node.EventType.TOUCH_START, () => {\n            node.beforMove = {x: node.x , y: node.y};\n        });\n        node.on(cc.Node.EventType.TOUCH_MOVE, (event) => {\n            const delta = event.touch.getDelta();\n            node.x += delta.x;\n            node.y += delta.y;\n            if (node.getComponent(TouchDragger).propagate)\n                event.stopPropagation();\n            node.propagate = true;\n            if (this.callbackMoveOpen) this.callbackMoveOpen();\n            if (this.callbackMoveClose) this.callbackMoveClose();\n        });\n\n        node.on(cc.Node.EventType.TOUCH_END, () => {\n            if (Math.sqrt((Math.pow(node.x-node.beforMove.x,2))+(Math.pow(node.y-node.beforMove.y,2))) < 3){\n                node.propagate = false;\n                \n            }\n            if (node.propagate) {\n                if(this.noDraggableToNode){\n                    if(checkTwoRectanglesOverlap(this.noDraggableToNode,node)){\n                        const moveTo = cc.moveTo(0.3, cc.v2(node.beforMove.x, node.beforMove.y));\n                        node.runAction(moveTo);\n                    }\n                }\n                node.propagate = !node.propagate;\n            } else  if (this.callback) this.callback();\n               \n           \n        });\n\n        function checkTwoRectanglesOverlap(rectangle1, rectangle2 ){\n            let inside = false;\n            const top_left = {x: rectangle2.x, y: rectangle2.y + rectangle2.height};\n            const bottom_left = {x: rectangle2.x, y: rectangle2.y};\n            const top_right = {x: rectangle2.x + rectangle2.width , y: rectangle2.y + rectangle2.height};\n            const bottom_right = {x: rectangle2.x + rectangle2.width, y: rectangle2.y};\n            if( checkPointInsideRectangle(top_left,rectangle1)||\n                checkPointInsideRectangle(bottom_left,rectangle1)||\n                checkPointInsideRectangle(top_right,rectangle1)||\n                checkPointInsideRectangle(bottom_right,rectangle1)){\n                inside = true;\n            }\n            return inside;\n        }\n\n        function checkPointInsideRectangle(point, rectangle ){\n            let inside = false;\n            if ((point.x - rectangle.x) >=0 && \n                (point.y - rectangle.y) >=0 && \n                point.x <= (rectangle.x + rectangle.width) &&\n                point.y <= (rectangle.y + rectangle.height)) {\n                inside = true;\n            }\n            return inside;\n        }\n    }\n});"]}