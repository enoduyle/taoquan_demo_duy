{"version":3,"sources":["../../../../../../assets/cc-taoquan-9983/scripts/common/assets/cc-taoquan-9983/scripts/common/FishFlyingAnimation9983.js"],"names":["FLYING_DIRECTION","cc","Class","extends","Component","properties","fishFlyingHolder","Node","vfxWaterLight","fishFlyingPrefab","Prefab","onLoad","node","on","playFishFlyingEffect","speedUpFishFlyingEffect","stopFishFlyingEffect","playSoundFishFlyingEnd","window","fishFlying","allFishFlyingData","Array","fill","fishFlyingData","getAnimationInfo","animationName","delayTime","timeScaleRate","skinName","fishSpine","getFishFlyingSkeleton","fishSkeleton","getComponent","sp","Skeleton","opacity","col","runAction","sequence","callFunc","Animation","play","playSoundFishFlying","isPlayingAnim","timeScale","setSkin","setAnimation","setCompleteListener","removeChild","isGoldFish","isTurbo","lastWildColumn","soundPlayer","playSfxFishFlying","isWinWild","isMultiple","multipleValue","playSfxGoldFishWin","playSfxSilverFishWin","children","length","listFishFlying","slice","forEach","isSpeedUp","stopAllActions","instantiate","parent","timeStop","row","randomIndex","Math","floor","random","fishFlyingTime","fishFlyingMissTime","animationTime","fadeOut","calculateAllAnimationTime","animationDataStore","listAnimations","skeletonData","skeletonJson","animations","push","playAnimation","count","log","startTime","Date","getTime","endTime","changeTime"],"mappings":";;;;;;AAAA,IAAMA,mBAAmB,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAzB;AACAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,0BAAkBL,GAAGM,IADb;AAERC,uBAAeP,GAAGM,IAFV;AAGRE,0BAAkBR,GAAGS;AAHb,KAHP;;AASLC,UATK,oBASI;AACL,aAAKC,IAAL,CAAUC,EAAV,CAAa,yBAAb,EAAwC,KAAKC,oBAA7C,EAAmE,IAAnE;AACA,aAAKF,IAAL,CAAUC,EAAV,CAAa,6BAAb,EAA4C,KAAKE,uBAAjD,EAA0E,IAA1E;AACA,aAAKH,IAAL,CAAUC,EAAV,CAAa,yBAAb,EAAwC,KAAKG,oBAA7C,EAAmE,IAAnE;AACA,aAAKJ,IAAL,CAAUC,EAAV,CAAa,4BAAb,EAA2C,KAAKI,sBAAhD,EAAwE,IAAxE;AACAC,eAAOC,UAAP,GAAoB,IAApB;AACA,aAAKC,iBAAL,GAAyB,IAAIC,KAAJ,CAAU,CAAV,EAAaC,IAAb,CAAkB,IAAlB,CAAzB;AACA;AACH,KAjBI;AAmBLR,wBAnBK,gCAmBgBS,cAnBhB,EAmBgC;AAAA;;AAAA,gCAC+B,KAAKC,gBAAL,CAAsBD,cAAtB,CAD/B;AAAA,YACzBE,aADyB,qBACzBA,aADyB;AAAA,YACVC,SADU,qBACVA,SADU;AAAA,YACCC,aADD,qBACCA,aADD;AAAA,YACgBC,QADhB,qBACgBA,QADhB;;AAEjC,YAAMC,YAAY,KAAKC,qBAAL,EAAlB;AACA,YAAMC,eAAeF,UAAUG,YAAV,CAAuBC,GAAGC,QAA1B,CAArB;AACAL,kBAAUM,OAAV,GAAoB,CAApB;AACA,aAAKf,iBAAL,CAAuBG,eAAea,GAAtC,IAA6Cb,cAA7C;AACAM,kBAAUO,GAAV,GAAgBb,eAAea,GAA/B;AACAP,kBAAUQ,SAAV,CAAoBpC,GAAGqC,QAAH,CAChBrC,GAAGyB,SAAH,CAAaA,SAAb,CADgB,EAEhBzB,GAAGsC,QAAH,CAAY,YAAM;AACd,gBAAI,MAAK/B,aAAL,CAAmB2B,OAAnB,KAA+B,CAAnC,EAAsC;AAClC,sBAAK3B,aAAL,CAAmB2B,OAAnB,GAA6B,GAA7B;AACA,sBAAK3B,aAAL,CAAmBwB,YAAnB,CAAgC/B,GAAGuC,SAAnC,EAA8CC,IAA9C;AACH;AACD,kBAAKC,mBAAL,CAAyBnB,cAAzB,EAAyCK,aAAa,MAAtD;AACAC,sBAAUc,aAAV,GAA0B,IAA1B;AACAd,sBAAUM,OAAV,GAAoB,GAApB;AACAJ,yBAAaa,SAAb,GAAyBjB,aAAzB;AACAI,yBAAac,OAAb,CAAqBjB,QAArB;AACAG,yBAAae,YAAb,CAA0B,CAA1B,EAA6BrB,aAA7B,EAA4C,KAA5C;AACAM,yBAAagB,mBAAb,CAAiC,YAAM;AACnC,sBAAKzC,gBAAL,CAAsB0C,WAAtB,CAAkCnB,SAAlC;AACH,aAFD;AAGH,SAdD,CAFgB,CAApB;AAkBH,KA5CI;AA8CLa,uBA9CK,+BA8CenB,cA9Cf,EA8CmD;AAAA,YAApB0B,UAAoB,uEAAP,KAAO;AAAA,YAC5CC,OAD4C,GACX3B,cADW,CAC5C2B,OAD4C;AAAA,YACnCC,cADmC,GACX5B,cADW,CACnC4B,cADmC;AAAA,YACnBf,GADmB,GACXb,cADW,CACnBa,GADmB;;AAEpD,YAAIc,OAAJ,EAAa;AACT,gBAAIC,mBAAmBf,GAAvB,EAA4B;AACxB,qBAAKxB,IAAL,CAAUwC,WAAV,CAAsBC,iBAAtB,CAAwCJ,UAAxC;AACH;AACJ,SAJD,MAIO;AACH,iBAAKrC,IAAL,CAAUwC,WAAV,CAAsBC,iBAAtB,CAAwCJ,UAAxC;AACH;AACJ,KAvDI;AAyDLhC,0BAzDK,kCAyDkBmB,GAzDlB,EAyDuB;AACxB,YAAI,CAAC,KAAKhB,iBAAL,CAAuBgB,GAAvB,CAAL,EAAkC;AADV,oCAEyB,KAAKhB,iBAAL,CAAuBgB,GAAvB,CAFzB;AAAA,YAEhBkB,SAFgB,yBAEhBA,SAFgB;AAAA,YAELC,UAFK,yBAELA,UAFK;AAAA,YAEOC,aAFP,yBAEOA,aAFP;;AAGxB,YAAID,cAAcC,gBAAgB,CAAlC,EAAqC;AACjC,iBAAK5C,IAAL,CAAUwC,WAAV,CAAsBK,kBAAtB;AACH,SAFD,MAEO,IAAIH,SAAJ,EAAe;AAClB,iBAAK1C,IAAL,CAAUwC,WAAV,CAAsBM,oBAAtB;AACH;AACJ,KAjEI;AAmEL3C,2BAnEK,mCAmEmBQ,cAnEnB,EAmEmC;AAAA;;AAAA,iCACe,KAAKC,gBAAL,CAAsBD,cAAtB,CADf;AAAA,YAC5BE,aAD4B,sBAC5BA,aAD4B;AAAA,YACbE,aADa,sBACbA,aADa;AAAA,YACEC,QADF,sBACEA,QADF;;AAEpC,YAAI,KAAKtB,gBAAL,CAAsBqD,QAAtB,IAAkC,KAAKrD,gBAAL,CAAsBqD,QAAtB,CAA+BC,MAArE,EAA6E;AACzE,gBAAMC,iBAAiB,KAAKvD,gBAAL,CAAsBqD,QAAtB,CAA+BG,KAA/B,EAAvB;AACAD,2BAAeE,OAAf,CAAuB,qBAAa;AAChC,oBAAI,CAAClC,UAAUmC,SAAX,IAAwBnC,UAAUO,GAAV,KAAkBb,eAAea,GAA7D,EAAkE;AAC9DP,8BAAUoC,cAAV;AACApC,8BAAUM,OAAV,GAAoB,GAApB;AACAN,8BAAUmC,SAAV,GAAsB,IAAtB;AACA,wBAAMjC,eAAeF,UAAUG,YAAV,CAAuBC,GAAGC,QAA1B,CAArB;AACAH,iCAAagB,mBAAb,CAAiC,YAAM,CAAE,CAAzC;AACA,wBAAI,CAAClB,UAAUc,aAAf,EAA8B;AAC1Bd,kCAAUc,aAAV,GAA0B,IAA1B;AACAZ,qCAAac,OAAb,CAAqBjB,QAArB;AACAG,qCAAae,YAAb,CAA0B,CAA1B,EAA6BrB,aAA7B,EAA4C,KAA5C;AACAM,qCAAagB,mBAAb,CAAiC,YAAM;AACnC,mCAAKzC,gBAAL,CAAsB0C,WAAtB,CAAkCnB,SAAlC;AACH,yBAFD;AAGH;AACDE,iCAAaa,SAAb,GAAyBjB,aAAzB;AACH;AACJ,aAjBD;AAkBH;AACJ,KA1FI;AA4FLG,yBA5FK,mCA4FmB;AACpB,YAAMD,YAAY5B,GAAGiE,WAAH,CAAe,KAAKzD,gBAApB,CAAlB;AACAoB,kBAAUsC,MAAV,GAAmB,KAAK7D,gBAAxB;AACA,eAAOuB,SAAP;AACH,KAhGI;AAkGLL,oBAlGK,kCAkGwE;AAAA,YAA3D4C,QAA2D,QAA3DA,QAA2D;AAAA,YAAjDC,GAAiD,QAAjDA,GAAiD;AAAA,YAA5CjC,GAA4C,QAA5CA,GAA4C;AAAA,YAAvCkB,SAAuC,QAAvCA,SAAuC;AAAA,YAA5BC,UAA4B,QAA5BA,UAA4B;AAAA,YAAhBC,aAAgB,QAAhBA,aAAgB;;AACzE,YAAMc,cAAcC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgBzE,iBAAiB4D,MAA5C,CAApB;AACA,YAAInC,yBAAsB4C,MAAM,CAA5B,cAAoCjC,MAAM,CAA1C,UAA+CpC,iBAAiBsE,WAAjB,CAAnD;AACA,YAAI1C,WAAW2B,cAAcC,gBAAgB,CAA9B,GAAkC,MAAlC,GAA2C,QAA1D;AACA;AACA;AACA;AACA;AACA,YAAMkB,iBAAiB,IAAvB;AACA,YAAMC,qBAAqB,GAA3B;AACA,YAAMC,gBAAgBtB,YAAYoB,cAAZ,GAA6BC,kBAAnD;AACA,YAAIjD,YAAY,CAAhB;AACA,YAAIC,gBAAgB,CAApB;AACA,YAAIyC,YAAYQ,aAAhB,EAA+B;AAC3BlD,wBAAY0C,WAAWQ,aAAvB;AACH,SAFD,MAEO;AACHjD,4BAAgBiD,gBAAgBR,QAAhC;AACH;AACD,eAAO,EAAE3C,4BAAF,EAAiBC,oBAAjB,EAA4BC,4BAA5B,EAA2CC,kBAA3C,EAAqDgD,4BAArD,EAAP;AACH,KArHI;AAuHL5D,wBAvHK,kCAuHkB;AACnB,aAAKI,iBAAL,GAAyB,IAAIC,KAAJ,CAAU,CAAV,EAAaC,IAAb,CAAkB,IAAlB,CAAzB;AACA,aAAKd,aAAL,CAAmB6B,SAAnB,CAA6BpC,GAAG4E,OAAH,CAAW,GAAX,CAA7B;AACH,KA1HI;AA4HLC,6BA5HK,uCA4HuB;AACxB,aAAKC,kBAAL,GAA0B,EAA1B;AACA,aAAKC,cAAL,GAAsB,EAAtB;AACA,aAAK,IAAMvD,aAAX,IAA4B,KAAKM,YAAL,CAAkBkD,YAAlB,CAA+BC,YAA/B,CAA4CC,UAAxE,EAAoF;AAChF,iBAAKH,cAAL,CAAoBI,IAApB,CAAyB3D,aAAzB;AACH;AACD,aAAK4D,aAAL,CAAmB,CAAnB;AACH,KAnII;AAqILA,iBArIK,yBAqISC,KArIT,EAqIgB;AAAA;;AACjB,YAAI,CAAC,KAAKN,cAAL,CAAoBM,KAApB,CAAL,EAAiC;AAC7BrF,eAAGsF,GAAH,CAAO,KAAKR,kBAAZ,EAAgC,qCAAhC;AACA;AACH;AACD,aAAKhD,YAAL,CAAkBe,YAAlB,CAA+B,CAA/B,EAAkC,KAAKkC,cAAL,CAAoBM,KAApB,CAAlC,EAA8D,KAA9D;AACA,YAAME,YAAY,IAAIC,IAAJ,GAAWC,OAAX,EAAlB;AACA,aAAK3D,YAAL,CAAkBgB,mBAAlB,CAAsC,YAAM;AACxC,gBAAM4C,UAAU,IAAIF,IAAJ,GAAWC,OAAX,EAAhB;AACA,gBAAME,aAAa,CAACD,UAAUH,SAAX,IAAwB,IAA3C;AACA,mBAAKT,kBAAL,CAAwB,OAAKC,cAAL,CAAoBM,KAApB,CAAxB,IAAsDM,UAAtD;AACA,mBAAK7D,YAAL,CAAkBgB,mBAAlB,CAAsC,YAAM,CAAG,CAA/C;AACA,mBAAKsC,aAAL,CAAmBC,QAAQ,CAA3B;AACH,SAND;AAOH;AAnJI,CAAT","file":"FishFlyingAnimation9983.js","sourceRoot":"../../../../../../assets/cc-taoquan-9983/scripts/common","sourcesContent":["const FLYING_DIRECTION = ['L', 'R', 'M'];\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        fishFlyingHolder: cc.Node,\n        vfxWaterLight: cc.Node,\n        fishFlyingPrefab: cc.Prefab,\n    },\n\n    onLoad() {\n        this.node.on(\"PLAY_FISH_FLYING_EFFECT\", this.playFishFlyingEffect, this);\n        this.node.on(\"SPEED_UP_FISH_FLYING_EFFECT\", this.speedUpFishFlyingEffect, this);\n        this.node.on(\"STOP_FISH_FLYING_EFFECT\", this.stopFishFlyingEffect, this);\n        this.node.on(\"PLAY_SOUND_FISH_FLYING_END\", this.playSoundFishFlyingEnd, this);\n        window.fishFlying = this;\n        this.allFishFlyingData = new Array(5).fill(null);\n        // this.calculateAllAnimationTime();\n    },\n\n    playFishFlyingEffect(fishFlyingData) {\n        const { animationName, delayTime, timeScaleRate, skinName,  } = this.getAnimationInfo(fishFlyingData);\n        const fishSpine = this.getFishFlyingSkeleton();\n        const fishSkeleton = fishSpine.getComponent(sp.Skeleton);\n        fishSpine.opacity = 0;\n        this.allFishFlyingData[fishFlyingData.col] = fishFlyingData;\n        fishSpine.col = fishFlyingData.col;\n        fishSpine.runAction(cc.sequence(\n            cc.delayTime(delayTime),\n            cc.callFunc(() => {\n                if (this.vfxWaterLight.opacity === 0) {\n                    this.vfxWaterLight.opacity = 255;\n                    this.vfxWaterLight.getComponent(cc.Animation).play();\n                }\n                this.playSoundFishFlying(fishFlyingData, skinName === 'Gold');\n                fishSpine.isPlayingAnim = true;\n                fishSpine.opacity = 255;\n                fishSkeleton.timeScale = timeScaleRate;\n                fishSkeleton.setSkin(skinName);\n                fishSkeleton.setAnimation(0, animationName, false);\n                fishSkeleton.setCompleteListener(() => {\n                    this.fishFlyingHolder.removeChild(fishSpine);\n                });\n            }),\n        ));\n    },\n\n    playSoundFishFlying(fishFlyingData, isGoldFish = false) {\n        const { isTurbo, lastWildColumn, col } = fishFlyingData;\n        if (isTurbo) {\n            if (lastWildColumn === col) {\n                this.node.soundPlayer.playSfxFishFlying(isGoldFish);\n            }\n        } else {\n            this.node.soundPlayer.playSfxFishFlying(isGoldFish);\n        }\n    },\n\n    playSoundFishFlyingEnd(col) {\n        if (!this.allFishFlyingData[col]) return;\n        const { isWinWild, isMultiple, multipleValue } = this.allFishFlyingData[col];\n        if (isMultiple && multipleValue > 5) {\n            this.node.soundPlayer.playSfxGoldFishWin();\n        } else if (isWinWild) {\n            this.node.soundPlayer.playSfxSilverFishWin();\n        }\n    },\n\n    speedUpFishFlyingEffect(fishFlyingData) {\n        const { animationName, timeScaleRate, skinName } = this.getAnimationInfo(fishFlyingData);\n        if (this.fishFlyingHolder.children && this.fishFlyingHolder.children.length) {\n            const listFishFlying = this.fishFlyingHolder.children.slice();\n            listFishFlying.forEach(fishSpine => {\n                if (!fishSpine.isSpeedUp && fishSpine.col === fishFlyingData.col) {\n                    fishSpine.stopAllActions();\n                    fishSpine.opacity = 255;\n                    fishSpine.isSpeedUp = true;\n                    const fishSkeleton = fishSpine.getComponent(sp.Skeleton);\n                    fishSkeleton.setCompleteListener(() => {});\n                    if (!fishSpine.isPlayingAnim) {\n                        fishSpine.isPlayingAnim = true;\n                        fishSkeleton.setSkin(skinName);\n                        fishSkeleton.setAnimation(0, animationName, false);\n                        fishSkeleton.setCompleteListener(() => {\n                            this.fishFlyingHolder.removeChild(fishSpine);\n                        });\n                    }\n                    fishSkeleton.timeScale = timeScaleRate;\n                }\n            });\n        }\n    },\n\n    getFishFlyingSkeleton() {\n        const fishSpine = cc.instantiate(this.fishFlyingPrefab);\n        fishSpine.parent = this.fishFlyingHolder;\n        return fishSpine;\n    },\n\n    getAnimationInfo({timeStop, row, col, isWinWild, isMultiple, multipleValue}) {\n        const randomIndex = Math.floor(Math.random() * FLYING_DIRECTION.length);\n        let animationName = `row${row + 1}_col${col + 1}_${FLYING_DIRECTION[randomIndex]}`;\n        let skinName = isMultiple && multipleValue > 5 ? 'Gold' : 'Silver';\n        // if (!isWinWild) {\n        //     animationName = 'miss_' + FLYING_DIRECTION[randomIndex];\n        //     skinName = Math.random() < 0.5 ? 'Gold' : 'Silver';\n        // }\n        const fishFlyingTime = 1.35;\n        const fishFlyingMissTime = 1.5;\n        const animationTime = isWinWild ? fishFlyingTime : fishFlyingMissTime;\n        let delayTime = 0;\n        let timeScaleRate = 1;\n        if (timeStop >= animationTime) {\n            delayTime = timeStop - animationTime;\n        } else {\n            timeScaleRate = animationTime / timeStop;\n        }\n        return { animationName, delayTime, timeScaleRate, skinName, animationTime };\n    },\n\n    stopFishFlyingEffect() {\n        this.allFishFlyingData = new Array(5).fill(null);\n        this.vfxWaterLight.runAction(cc.fadeOut(0.3));\n    },\n\n    calculateAllAnimationTime() {\n        this.animationDataStore = {};\n        this.listAnimations = [];\n        for (const animationName in this.fishSkeleton.skeletonData.skeletonJson.animations) {\n            this.listAnimations.push(animationName);\n        }\n        this.playAnimation(0);\n    },\n\n    playAnimation(count) {\n        if (!this.listAnimations[count]) {\n            cc.log(this.animationDataStore, 'finish calculate all animation time');\n            return;\n        }\n        this.fishSkeleton.setAnimation(0, this.listAnimations[count], false);\n        const startTime = new Date().getTime();\n        this.fishSkeleton.setCompleteListener(() => {\n            const endTime = new Date().getTime();\n            const changeTime = (endTime - startTime) / 1000;\n            this.animationDataStore[this.listAnimations[count]] = changeTime;\n            this.fishSkeleton.setCompleteListener(() => { });\n            this.playAnimation(count + 1);\n        });\n    },\n});\n"]}