{"version":3,"sources":["DataStore.js"],"names":["BetDataStore","require","convertSlotMatrixTBLR","convertPayLine","cc","Class","extends","Component","properties","isEnableBGM","isEnableSFX","onLoad","node","gSlotDataStore","slotBetDataStore","playSession","lastEvent","modeTurbo","isAutoSpin","spinTimes","gameId","createDefaultBet","config","formatData","bind","convertSlotMatrix","TABLE_FORMAT","normalGameResult","freeGameResult","bonusGameResult","tableFormat","type","freeGameTableFormat","normalGameTableFormat","matrix","matrixTransform0","matrixTransform1","matrixTransform2","payLines","payLineJackPot"],"mappings":"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","file":"DataStore.js","sourceRoot":"../../../../../../assets/cc-common/cc-slotbase-v2/component","sourcesContent":["\n\nconst BetDataStore = require('MoneyDataStore');\nconst {convertSlotMatrixTBLR, convertPayLine} = require('utils');\n\ncc.Class({\n    extends: cc.Component,\n    properties: {\n        isEnableBGM: false,\n        isEnableSFX: true,\n    },\n    onLoad() {\n        this.node.gSlotDataStore = {\n            slotBetDataStore: new BetDataStore(),\n            playSession: {},\n            lastEvent: {},\n            modeTurbo: false,\n            isAutoSpin: false,\n            spinTimes: 0,\n            gameId: \"9000\",\n            isEnableBGM: false,\n            isEnableSFX: false,\n        };\n        this.node.gSlotDataStore.gameId = this.gameId;\n        this.node.gSlotDataStore.isEnableBGM = this.isEnableBGM;\n        this.node.gSlotDataStore.isEnableSFX = this.isEnableSFX;\n        this.node.gSlotDataStore.slotBetDataStore.createDefaultBet(this.node.config);\n\n        this.node.gSlotDataStore.formatData = this.formatData.bind(this);\n        this.node.gSlotDataStore.convertSlotMatrix = convertSlotMatrixTBLR.bind(this);\n        this.node.gSlotDataStore.convertPayLine = convertPayLine.bind(this);\n    },\n    formatData(playSession) {\n        const {TABLE_FORMAT} = this.node.config;\n        this.node.gSlotDataStore.playSession = playSession;\n        let lastEvent;\n        \n        const {normalGameResult, freeGameResult, bonusGameResult} = playSession.lastEvent;\n        let tableFormat = TABLE_FORMAT;\n        if (bonusGameResult) {\n            lastEvent = bonusGameResult;\n            lastEvent.type = \"bonusGame\";\n        } else if (freeGameResult) {\n            lastEvent = freeGameResult;\n            lastEvent.type = \"freeGame\";\n\n            const {freeGameTableFormat} = this.node.gSlotDataStore.playSession;\n            if (freeGameTableFormat) tableFormat = freeGameTableFormat;\n        } else {\n            lastEvent = normalGameResult;\n            lastEvent.type = \"normalGame\";\n\n            const {normalGameTableFormat} = this.node.gSlotDataStore.playSession;\n            if (normalGameTableFormat) tableFormat = normalGameTableFormat;\n        }\n\n        if (lastEvent.matrix) {\n            lastEvent.matrix = this.node.gSlotDataStore.convertSlotMatrix(lastEvent.matrix,tableFormat);\n        }\n        if (lastEvent.matrixTransform0) {\n            lastEvent.matrixTransform0 = this.node.gSlotDataStore.convertSlotMatrix(lastEvent.matrixTransform0,tableFormat);\n        }\n        if (lastEvent.matrixTransform1) {\n            lastEvent.matrixTransform1 = this.node.gSlotDataStore.convertSlotMatrix(lastEvent.matrixTransform1,tableFormat);\n        }\n        if (lastEvent.matrixTransform2) {\n            lastEvent.matrixTransform2 = this.node.gSlotDataStore.convertSlotMatrix(lastEvent.matrixTransform2,tableFormat);\n        }\n        if (lastEvent.payLines) {\n            lastEvent.payLines = this.node.gSlotDataStore.convertPayLine(lastEvent.payLines);\n        }\n        if (lastEvent.payLineJackPot) {\n            lastEvent.payLineJackPot = this.node.gSlotDataStore.convertPayLine(lastEvent.payLineJackPot);\n        }\n\n        this.node.gSlotDataStore.lastEvent = lastEvent;\n        return lastEvent;\n    },\n});"]}