{"version":3,"sources":["connectNetworkV3.js"],"names":["globalNetwork","require","userText","pwText","serviceRest","gameNetwork","window","GameNetwork","uuid","lib","vjsb","tokenClient","CC_CMD","js2cMessage","JSON","stringify","cmd","CMD_TEST","msg","msgTf","string","CMD_AUTH","CMD_GET_SOUND_ENABLE","CMD_SET_SOUND_ENABLE","enable","CMD_HOME","CMD_GET_MUSIC_ENABLE","CMD_SET_MUSIC_ENABLE","c2jsMessage","cc","log","jso","parse","token","sys","localStorage","setItem","bridgeAppClient","sendGetToken","Class","getToken","loadConfigAsync","getConfig","LOGIN_IFRAME","URL_TOKEN","USER_TOKEN","TOKEN","getUrlParam","addUrlParam","TRIAL_PARAM","trialMode","getUSS","getItem","getRefreshToken","URL_REFRESH_TOKEN","USER_REFRESH_TOKEN","refreshToken","loginScene","callback","gameId","userIndex","callbackAuthFailed","IS_FINISHED_REMOTE","DEV_ENV","setTimeout","envId","gameIdSocket","init","dataPost","userName","password","fingerPrint","USER_INDEX","post","url","data","callbackErr"],"mappings":"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","file":"connectNetworkV3.js","sourceRoot":"../../../../../../assets/cc-common/cc-network/v3","sourcesContent":["const globalNetwork = require('globalNetwork');\nlet { userText, pwText } = require('mock');\nconst serviceRest = require('serviceRest');\nconst gameNetwork = window.GameNetwork || require('game-network');\nconst { uuid } = gameNetwork.lib;\nlet vjsb = window['vjsb'];\nlet tokenClient = '';\n\nclass CC_CMD {\n  static CMD_HOME = 1;\n  static CMD_TEST = 2;\n  static CMD_AUTH = 3;\n  static CMD_GET_SOUND_ENABLE = 4;\n  static CMD_SET_SOUND_ENABLE = 5;\n  static CMD_GET_MUSIC_ENABLE = 6;\n  static CMD_SET_MUSIC_ENABLE = 7;\n  onSend() {\n    vjsb &&\n      vjsb.js2cMessage(\n        JSON.stringify({\n          cmd: CC_CMD.CMD_TEST,\n          msg: this.msgTf.string,\n        })\n      );\n  }\n\n  sendGetToken() {\n    vjsb &&\n      vjsb.js2cMessage(\n        JSON.stringify({\n          cmd: CC_CMD.CMD_AUTH,\n        })\n      );\n  }\n\n  sendGetSoundEnable() {\n    vjsb &&\n      vjsb.js2cMessage(\n        JSON.stringify({\n          cmd: CC_CMD.CMD_GET_SOUND_ENABLE,\n        })\n      );\n  }\n\n  sendSetSoundEnable() {\n    vjsb &&\n      vjsb.js2cMessage(\n        JSON.stringify({\n          cmd: CC_CMD.CMD_SET_SOUND_ENABLE,\n          enable: true,\n        })\n      );\n  }\n}\n\nif (vjsb)\n  vjsb.c2jsMessage = msg => {\n    cc.log('c2jsMessage: ' + msg);\n    let jso = JSON.parse(msg);\n    switch (jso.cmd) {\n      case CC_CMD.CMD_AUTH:\n        cc.log('token: ' + jso.token);\n        tokenClient = jso.token;\n        cc.sys.localStorage.setItem('user_token', tokenClient);\n        break;\n      case CC_CMD.CMD_GET_SOUND_ENABLE:\n        cc.log('enable: ' + jso.enable);\n        break;\n      case CC_CMD.CMD_GET_MUSIC_ENABLE:\n        cc.log('enable: ' + jso.enable);\n        break;\n    }\n  };\nconst bridgeAppClient = new CC_CMD();\nbridgeAppClient.sendGetToken();\n\ncc.Class({\n  getToken() {\n    const loadConfigAsync = require('loadConfigAsync');\n    const { LOGIN_IFRAME, URL_TOKEN, USER_TOKEN, TOKEN } =\n      loadConfigAsync.getConfig();\n    let token = '';\n    // if (vjsb && tokenClient) {\n    //     token = tokenClient;\n    // }\n    // else\n    if (TOKEN) {\n      token = TOKEN;\n    } else if (LOGIN_IFRAME) {\n      const { getUrlParam, addUrlParam } = require('gameCommonUtils');\n      const TRIAL_PARAM = 'trialMode';\n\n      let trialMode = false;\n      token = getUrlParam(URL_TOKEN);\n      trialMode = getUrlParam(TRIAL_PARAM) === 'true';\n      if (!token && trialMode) {\n        token = `tr-${uuid()}`;\n        addUrlParam('token', token);\n      }\n      cc.sys.localStorage.setItem(USER_TOKEN, token);\n    } else if (\n      typeof window !== 'undefined' &&\n      typeof window['__Game_Bridge'] !== 'undefined' &&\n      typeof window['__Game_Bridge'].getUSS === 'function'\n    ) {\n      token = window['__Game_Bridge'].getUSS();\n    } else {\n      token = cc.sys.localStorage.getItem(USER_TOKEN);\n    }\n    token = 'mob97';\n    return token;\n  },\n  getRefreshToken() {\n    const loadConfigAsync = require('loadConfigAsync');\n    const {\n      LOGIN_IFRAME,\n      URL_REFRESH_TOKEN = 'refresh-token',\n      USER_REFRESH_TOKEN = 'user-refresh-token',\n    } = loadConfigAsync.getConfig();\n    let refreshToken = '';\n    if (LOGIN_IFRAME) {\n      const { getUrlParam } = require('gameCommonUtils');\n      refreshToken = getUrlParam(URL_REFRESH_TOKEN);\n      cc.sys.localStorage.setItem(USER_REFRESH_TOKEN, refreshToken);\n    } else {\n      refreshToken = cc.sys.localStorage.getItem(USER_REFRESH_TOKEN);\n    }\n    return refreshToken;\n  },\n  loginScene({ callback, gameId, userIndex, callbackAuthFailed }) {\n    // cc.log(\"Login using V3\");\n    const loadConfigAsync = require('loadConfigAsync');\n    const { IS_FINISHED_REMOTE, DEV_ENV, USER_TOKEN } =\n      loadConfigAsync.getConfig();\n\n    cc.log('Login using V3', cc.sys.localStorage.getItem(USER_TOKEN));\n    cc.log('Login using V3', vjsb);\n    cc.log('Login using V3', tokenClient);\n\n    // if (vjsb && !cc.sys.localStorage.getItem(USER_TOKEN)) {\n    //     setTimeout(() => {\n    //         this.loginScene({callback, gameId, userIndex, callbackAuthFailed});\n    //     }, 100);\n    //     return;\n    // } else\n    if (!IS_FINISHED_REMOTE) {\n      setTimeout(() => {\n        this.loginScene({ callback, gameId, userIndex, callbackAuthFailed });\n      }, 100);\n      return;\n    }\n    this.gameId = gameId;\n    const token = this.getToken();\n    const { LOGIN_IFRAME } = loadConfigAsync.getConfig();\n    const envId = LOGIN_IFRAME ? 'iframe' : 'portal';\n    const gameIdSocket = LOGIN_IFRAME ? gameId : 'all';\n    // token = '2f8b65390e1d19c38e86394bb6b928c2';\n    if (token || !DEV_ENV) {\n      if (token) {\n        globalNetwork.init(token, envId, gameIdSocket);\n        callback();\n      } else {\n        callbackAuthFailed();\n      }\n    } else {\n      let dataPost = {\n        userName: userText,\n        password: pwText,\n        fingerPrint: 'test',\n      };\n      if (cc.USER_INDEX) {\n        dataPost = {\n          userName: 'user' + cc.USER_INDEX,\n          password: 'pwduser' + cc.USER_INDEX,\n          fingerPrint: 'test',\n        };\n      }\n      serviceRest.post({\n        url: 'auth/login',\n        data: dataPost,\n        callback: ({ data }) => {\n          cc.sys.localStorage.setItem(USER_TOKEN, data.data.token);\n          globalNetwork.init(data.data.token, '', envId, gameIdSocket);\n          callback();\n        },\n        callbackErr: () => {\n          callbackAuthFailed && callbackAuthFailed();\n        },\n      });\n    }\n  },\n});\n"]}