{"version":3,"sources":["SpinTimes.js"],"names":["cc","Class","extends","Component","properties","label","Node","labelPromotion","Label","onLoad","node","on","updateSpintimes","resetSpintimes","active","start","getComponent","string","spinTimes","gSlotDataStore","isAutoSpin","promotion"],"mappings":";;;;;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,eAAOL,GAAGM,IADF;AAERC,wBAAgBP,GAAGQ;AAFX,KAHP;;AAQLC,UARK,oBAQG;AACJ,aAAKC,IAAL,CAAUC,EAAV,CAAa,kBAAb,EAAgC,KAAKC,eAArC,EAAqD,IAArD;AACA,aAAKF,IAAL,CAAUC,EAAV,CAAa,iBAAb,EAA+B,KAAKE,cAApC,EAAmD,IAAnD;AACA,aAAKH,IAAL,CAAUI,MAAV,GAAmB,KAAnB;AACH,KAZI;AAaLC,SAbK,mBAaI,CACR,CAdI;AAgBLF,kBAhBK,4BAgBY;AACb,aAAKR,KAAL,CAAWW,YAAX,CAAwBhB,GAAGQ,KAA3B,EAAkCS,MAAlC,GAA2C,EAA3C;AACA,YAAG,KAAKV,cAAR,EAAuB;AACnB,iBAAKA,cAAL,CAAoBU,MAApB,GAA6B,EAA7B;AACH;AACD,aAAKP,IAAL,CAAUI,MAAV,GAAmB,KAAnB;AACH,KAtBI;AAwBLF,mBAxBK,6BAwB0B;AAAA,YAAfM,SAAe,uEAAH,CAAG;AAAA,mCACK,KAAKR,IAAL,CAAUS,cADf;AAAA,YACpBC,UADoB,wBACpBA,UADoB;AAAA,YACRC,SADQ,wBACRA,SADQ;;AAE3B,YAAKH,aAAa,CAAb,IAAkBE,UAAnB,IAAkCC,SAAtC,EAAiD;AAC7C,iBAAKX,IAAL,CAAUI,MAAV,GAAmB,IAAnB;AACH,SAFD,MAEO;AACH,iBAAKJ,IAAL,CAAUI,MAAV,GAAmB,KAAnB;AACH;;AAED,YAAII,YAAY,GAAhB,EAAqB;AACjB,iBAAKb,KAAL,CAAWW,YAAX,CAAwBhB,GAAGQ,KAA3B,EAAkCS,MAAlC,GAA2C,GAA3C;AACH,SAFD,MAEO;AACH,iBAAKZ,KAAL,CAAWW,YAAX,CAAwBhB,GAAGQ,KAA3B,EAAkCS,MAAlC,GAA2CC,SAA3C;AACA,gBAAI,KAAKX,cAAT,EAAyB;AACrB,qBAAKA,cAAL,CAAoBU,MAApB,GAA6BC,SAA7B;AACH;AACJ;AACJ;AAxCI,CAAT","file":"SpinTimes.js","sourceRoot":"../../../../../../assets/cc-common/cc-slotbase-v2/gui","sourcesContent":["\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        label: cc.Node,\n        labelPromotion: cc.Label\n    },\n\n    onLoad(){\n        this.node.on(\"UPDATE_SPINTIMES\",this.updateSpintimes,this);\n        this.node.on(\"RESET_SPINTIMES\",this.resetSpintimes,this);\n        this.node.active = false;\n    },\n    start () {\n    },\n    \n    resetSpintimes() {\n        this.label.getComponent(cc.Label).string = '';\n        if(this.labelPromotion){\n            this.labelPromotion.string = '';\n        }\n        this.node.active = false;\n    },\n\n    updateSpintimes(spinTimes = 0) {\n        const {isAutoSpin, promotion} = this.node.gSlotDataStore;\n        if ((spinTimes >= 0 && isAutoSpin) || promotion) {\n            this.node.active = true;\n        } else {\n            this.node.active = false;\n        }\n\n        if (spinTimes > 100) {\n            this.label.getComponent(cc.Label).string = \"âˆž\";\n        } else {\n            this.label.getComponent(cc.Label).string = spinTimes;\n            if (this.labelPromotion) {\n                this.labelPromotion.string = spinTimes;\n            }\n        }\n    },\n});\n"]}