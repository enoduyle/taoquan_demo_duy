{"version":3,"sources":["TestReelMixPhysics.js"],"names":["require","createLabel","cc","Class","extends","properties","symbolPrefab","Node","specialSymbolPrefab","onLoad","window","test","_super","_symbols","initTest","showNumber","gameConfig","col","isFreeMode","config","node","symbolList","SYMBOL_NAME_LIST_FREE","SYMBOL_NAME_LIST","showSymbols","totalNumber","TABLE_SYMBOL_BUFFER","TOP","BOT","symbolStartShowY","TABLE_FORMAT","SYMBOL_HEIGHT","symbolStartY","i","symbol","instantiate","name","parent","reel","setPosition","changeToSymbol","getRandomSymbolName","push","_bottomSymbol","length","unshift","_topSymbol","mode","curentConfig","STATS","index","reset","startSpinningWithDelay","evt","delay","scheduleOnce","stopSpinningWithDelay","reverse","setMode","startRespinWithDelay","rows","_tick","processRespinData","fadeOutWinSymbols","fallingSymbols","_showY","_getSymbolShowY","time","_getFallingTime","_hideY","runAction","sequence","delayTime","callFunc","opacity","moveTo","x","easing","easeQuadraticActionIn","TIME","_arrangeSymbols","_toHideSymbols","forEach","sb","spawn","fadeOut","scaleTo","y","scale","_randomRows","isWin","Math","random","_maxIndex","max","apply","_toFallSymbols","_toStaySymbols","count","indexOf","concat","row","height","sort","a","b","circularSymbols","lastSymbol","showResult","changeToBlurSymbol","stop","isRealSymbol","symbolValue","matrix","step","usingMotionBlur","stopBlur"],"mappings":"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","file":"TestReelMixPhysics.js","sourceRoot":"../../../../../../assets/cc-common/cc-slot-base-test/TestReel","sourcesContent":["const { createLabel } = require(\"testUtils\");\ncc.Class({\n    extends: require('SlotReelv2'),\n    properties: {\n        symbolPrefab: cc.Node,\n        specialSymbolPrefab: cc.Node\n    },\n    onLoad() {\n        window.test = this;\n        this._super();\n        this._symbols = [];\n        this.initTest();    \n    },\n    initTest(showNumber = 5, gameConfig = null, col = 0, symbolPrefab = null, isFreeMode = false) {\n        this.col = col;\n        this.config = gameConfig || this.node.config;\n        if (isFreeMode) {\n            this.symbolList = this.config.SYMBOL_NAME_LIST_FREE[col];\n        } else {\n            this.symbolList = this.config.SYMBOL_NAME_LIST[col];\n        }\n        // this.symbolPrefab = symbolPrefab;\n        this.showNumber = showNumber;\n        this.showSymbols = [];\n        this.totalNumber = this.showNumber + this.config.TABLE_SYMBOL_BUFFER.TOP + this.config.TABLE_SYMBOL_BUFFER.BOT;\n        this.isFreeMode = isFreeMode;\n        this.symbolStartShowY = (this.config.TABLE_FORMAT[col] / 2 - 0.5) * this.config.SYMBOL_HEIGHT;\n\n        this.symbolStartY = - (this.config.TABLE_FORMAT[col] / 2 + this.config.TABLE_SYMBOL_BUFFER.BOT - 0.5) * this.config.SYMBOL_HEIGHT;\n        for (let i = 0; i < this.totalNumber; ++i) {\n            const symbol = cc.instantiate(this.symbolPrefab);\n            symbol.name = \"Symbol_\" + i;\n            symbol.parent = this.reel;\n            symbol.setPosition(0, this.symbolStartY + i * this.config.SYMBOL_HEIGHT);\n            symbol.changeToSymbol(this.getRandomSymbolName());\n            this._symbols.push(symbol);\n            if (i === 0) {\n                this._bottomSymbol = symbol;\n            } if (i >= this.config.TABLE_SYMBOL_BUFFER.BOT && this.showSymbols.length < this.showNumber) {\n                this.showSymbols.unshift(symbol);\n            } else if (i === this.totalNumber - 1) {\n                this._topSymbol = symbol;\n            }\n        }\n\n        this.mode = 'FAST';\n        this.curentConfig = this.config.STATS[this.mode];\n        this.index = 0;\n        this.reset();\n    },\n    startSpinningWithDelay(evt, delay = 0) {\n        this._super(delay);\n        this.scheduleOnce(() => {\n            this.stopSpinningWithDelay(\n                0,\n                [\"2\", \"3\", \"4\", \"5\", \"6\",].reverse(), // fake data result\n                function () { }\n            );\n        }, 0.2) // time to get response from server: about 200ms\n    },\n    setMode(evt, mode) {\n        this.mode = mode;\n    },\n\n    startRespinWithDelay(evt, delay = 0.5, rows) {\n        this._tick++;\n        this.processRespinData(rows);\n        this.fadeOutWinSymbols(delay);\n        for (let index = 0; index < this.fallingSymbols.length; index++) {\n            const symbol = this.fallingSymbols[index];\n            symbol._showY = this._getSymbolShowY(index);\n            let time = this._getFallingTime(symbol._hideY - symbol._showY);\n            symbol.runAction(cc.sequence(\n                cc.delayTime(delay),\n                cc.callFunc(() => {\n                    symbol.opacity = 255;\n                }),\n                cc.moveTo(time, symbol.x, symbol._showY).easing(cc.easeQuadraticActionIn()),\n                cc.moveTo( this.curentConfig.TIME / 2, symbol.x, symbol._showY + 15).easing(cc.easeQuadraticActionIn()),\n                cc.moveTo( this.curentConfig.TIME / 2, symbol.x, symbol._showY).easing(cc.easeQuadraticActionIn()),\n                cc.callFunc(()=>{\n                    if(index === 0){\n                        this._arrangeSymbols();\n                    }\n                })\n            ));\n        }\n    },\n    fadeOutWinSymbols(time) {\n        this._toHideSymbols.forEach(sb => sb.runAction(cc.sequence(\n            cc.spawn(\n                cc.fadeOut(time),\n                cc.scaleTo(time, 0.5),\n            ),\n            cc.callFunc(() => {\n                sb.y = sb._hideY;\n                // sb.opacity = 255;\n                sb.scale = 1;\n                sb.changeToSymbol(this.getRandomSymbolName());\n            })\n        )))\n    },\n    _randomRows(){\n        let rows = []\n        for(let i = 0; i < 5; i++){\n            let isWin = Math.random() > 0.5;\n            if(isWin)rows.push(i);\n        }\n        if(rows.length === 0){\n            rows = [1,3];\n        }\n        return rows;\n    },\n    processRespinData(rows) {\n        rows = this._randomRows();\n        this._maxIndex = Math.max.apply(null, rows);\n        let _toHideSymbols = [],\n            _toFallSymbols = [],\n            _toStaySymbols = [];\n\n        let count = 0;\n        for (let index = 0; index < this.showSymbols.length; index++) {\n            const symbol = this.showSymbols[index];\n            // symbol._currentRow = index;\n            if (rows.indexOf(index) > - 1) {\n                count++;\n                symbol._hideY = this.symbolStartShowY + count * (this.config.SYMBOL_HEIGHT + 100);\n                _toHideSymbols.unshift(symbol);\n            } else if (index < this._maxIndex) {\n                _toFallSymbols.push(symbol);\n                symbol._hideY = symbol.y;\n            } else {\n                _toStaySymbols.push(symbol);\n            }\n        }\n        this._toHideSymbols = _toHideSymbols;\n        this.showSymbols = _toHideSymbols.concat(_toFallSymbols).concat(_toStaySymbols);\n        this.fallingSymbols = _toHideSymbols.concat(_toFallSymbols);\n    },\n    _getSymbolShowY(row) {\n        return this.symbolStartShowY - row * this.config.SYMBOL_HEIGHT;\n    },\n    _getFallingTime(height) {\n        return (height / this.config.SYMBOL_HEIGHT) * this.curentConfig.TIME * 2;\n    },\n    _arrangeSymbols() {\n        this._symbols.sort(function(a,b){return a.y - b.y});\n        this.index = 0;\n    },\n    circularSymbols() {\n        const lastSymbol = this._symbols[this.index % (this.totalNumber)];\n        if (!this.showResult) {\n            lastSymbol.changeToBlurSymbol(this.getRandomSymbolName());\n        } else if (this.stop < this.totalNumber) {\n            let isRealSymbol = this.stop >= this.config.TABLE_SYMBOL_BUFFER.TOP && this.stop < this.showNumber + this.config.TABLE_SYMBOL_BUFFER.TOP;\n            let symbolValue = this.matrix[this.stop];\n            this.step = this.totalNumber + this.showNumber - (this.stop + this.config.TABLE_SYMBOL_BUFFER.BOT);\n            if (isRealSymbol) {\n                lastSymbol.changeToSymbol(symbolValue);\n                this.usingMotionBlur && lastSymbol.stopBlur();\n                this.showSymbols.unshift(lastSymbol);\n            } else {\n                if (this.stop === 0) {\n                    this._bottomSymbol = lastSymbol;\n                } else if (this.stop === this.totalNumber - 1) {\n                    this._topSymbol = lastSymbol;\n                }\n                lastSymbol.changeToBlurSymbol(symbolValue);\n            }\n            this.stop++;\n        }\n        lastSymbol.y = lastSymbol.y + this.config.SYMBOL_HEIGHT * (this.totalNumber);\n        this.index++;\n    },\n});"]}