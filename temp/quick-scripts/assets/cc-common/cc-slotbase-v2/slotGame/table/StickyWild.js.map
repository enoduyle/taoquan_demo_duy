{"version":3,"sources":["StickyWild.js"],"names":["cc","Class","extends","Component","properties","wildSymbolPrefab","Prefab","defaultNumber","stickySymbol","onLoad","node","on","init","showStickyWild","reset","updateMatrix","changeMatrix","initWildPool","symbolPool","NodePool","i","put","instantiate","table","COLUMN","tableFormat","length","ROW","SYMBOL_HEIGHT","config","SYMBOL_WIDTH","wildMatrix","Array","from","symbolPrefab","reelIdx","skipAnimation","matrix","wild","getStickyWild","parent","emit","x","getXPosition","y","getYPosition","playWildAnimation","wildNode","isSkip","size","get","index","startY","j","removeAllChildren","onDestroy","clear"],"mappings":"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","file":"StickyWild.js","sourceRoot":"../../../../../../../assets/cc-common/cc-slotbase-v2/slotGame/table","sourcesContent":["\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        wildSymbolPrefab: cc.Prefab,\n        defaultNumber: 5,\n        stickySymbol: 'K',\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        this.node.on(\"INIT\", this.init, this);\n        this.node.on(\"SHOW_STICKY_WILD\", this.showStickyWild, this);\n        this.node.on(\"RESET\", this.reset, this);\n        this.node.on(\"UPDATE_MATRIX\", this.updateMatrix, this);\n        this.node.on(\"CHANGE_MATRIX\", this.changeMatrix, this);\n    },\n\n    initWildPool() {\n        this.symbolPool = new cc.NodePool(\"StickyWildPool\");\n        for (let i=0; i<this.defaultNumber; i++) {\n            this.symbolPool.put(cc.instantiate(this.wildSymbolPrefab));\n        }\n    },\n\n    init(table){\n        this.table = table;\n        this.COLUMN = this.table.tableFormat.length;\n        this.ROW = this.table.tableFormat[0];\n        this.SYMBOL_HEIGHT = this.table.node.config.SYMBOL_HEIGHT;\n        this.SYMBOL_WIDTH = this.table.node.config.SYMBOL_WIDTH;\n        this.wildMatrix = Array.from(Array(this.COLUMN), () => new Array(this.ROW) );\n        if(!this.wildSymbolPrefab) {\n            this.wildSymbolPrefab = this.table.symbolPrefab;\n        }\n        this.initWildPool();\n    },\n\n    showStickyWild(reelIdx, skipAnimation = false) {\n        for(let i = 0; i < this.ROW; ++i){\n            if(this.matrix[reelIdx][i] == this.stickySymbol && !this.wildMatrix[reelIdx][i]) {\n                let wild = this.getStickyWild();\n                this.wildMatrix[reelIdx][i] = wild;\n                wild.parent = this.node;\n                wild.emit('RESET');\n                wild.x = this.table.getXPosition(reelIdx);\n                wild.y = this.getYPosition(i);\n                this.playWildAnimation(wild, skipAnimation);\n            }\n        }\n    },\n\n    playWildAnimation(wildNode, isSkip = false) {\n        // extend when do anything with wild\n        wildNode.emit(\"PLAY_ANIMATION\", isSkip);\n    },\n\n    getStickyWild() {\n        if (!this.symbolPool.size()) {\n            this.symbolPool.put(cc.instantiate(this.wildSymbolPrefab));\n        }\n        return this.symbolPool.get();\n    },\n\n    getYPosition(index){\n        let startY = -(this.ROW / 2 + 0.5) * this.SYMBOL_HEIGHT;\n        return (startY + this.SYMBOL_HEIGHT * (this.ROW - index));\n    },\n\n    reset(){\n        for(let i = 0; i < this.COLUMN; ++i){\n            for(let j = 0; j < this.ROW; ++j) {\n                if(this.wildMatrix[i][j]) {\n                    this.wildMatrix[i][j].emit('RESET');\n                    this.symbolPool.put(this.wildMatrix[i][j]);\n                }\n                this.wildMatrix[i][j] = null;\n            }\n        }\n        this.node.removeAllChildren(true);\n    },\n\n    updateMatrix(matrix){\n        this.matrix = matrix;\n    },\n\n    changeMatrix(matrix){\n        this.reset();\n        this.updateMatrix(matrix);\n        for(let i = 0; i < this.COLUMN; ++i){\n            this.showStickyWild(i, true);\n        }\n    },\n\n    onDestroy(){\n        this.symbolPool.clear();\n    }\n\n    // update (dt) {},\n});\n"]}