{"version":3,"sources":["AlignmentControl.js"],"names":["cc","Class","extends","Component","properties","maxWidth","maxHeight","maxAlignByOrient","onLoad","_thisOnResized","onScreenResized","bind","sys","isMobile","window","addEventListener","view","on","_widget","node","getComponent","Widget","start","visibleViewSize","getVisibleSize","enabled","updateAlignment","width","height","log","onDestroy","removeEventListener","off"],"mappings":";;;;;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,kBAAU,IADF;AAERC,mBAAW,IAFH;AAGRC,0BAAkB;AAHV,KAHP;;AASL;;AAEAC,UAXK,oBAWK;AACN,aAAKC,cAAL,GAAsB,KAAKC,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAtB;AACA,YAAIX,GAAGY,GAAH,CAAOC,QAAX,EAAqB;AACjBC,mBAAOC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKN,cAAvC;AACH,SAFD,MAGK;AACDT,eAAGgB,IAAH,CAAQC,EAAR,CAAW,eAAX,EAA4B,KAAKR,cAAjC;AACH;AACD,aAAKS,OAAL,GAAe,KAAKC,IAAL,CAAUC,YAAV,CAAuBpB,GAAGqB,MAA1B,CAAf;AACH,KApBI;AAsBLC,SAtBK,mBAsBI;AACL,aAAKZ,eAAL;AACH,KAxBI;AA0BLA,mBA1BK,6BA0BY;AACb,YAAG,KAAKS,IAAR,EAAa;AACT,gBAAII,kBAAkBvB,GAAGgB,IAAH,CAAQQ,cAAR,EAAtB;AACA;AACA,gBAAG,KAAKN,OAAL,IAAc,IAAjB,EAAsB;AAClB,qBAAKA,OAAL,CAAaO,OAAb,GAAuB,IAAvB;AACA,qBAAKP,OAAL,CAAaQ,eAAb;AACH,aAHD,MAGK;AACD,qBAAKR,OAAL,GAAe,KAAKC,IAAL,CAAUC,YAAV,CAAuBpB,GAAGqB,MAA1B,CAAf;AACH;;AAGD,gBAAGE,gBAAgBI,KAAhB,GAAsB,KAAKtB,QAA9B,EAAuC;AACnC,oBAAG,KAAKa,OAAL,IAAc,IAAjB,EAAsB;AAClB,yBAAKA,OAAL,CAAaO,OAAb,GAAuB,KAAvB;AACH;;AAED,qBAAKN,IAAL,CAAUQ,KAAV,GAAkB,KAAKtB,QAAvB;AACA;AACH;;AAED,gBAAGkB,gBAAgBK,MAAhB,GAAyB,KAAKtB,SAAjC,EAA2C;AACvC,oBAAG,KAAKY,OAAL,IAAc,IAAjB,EAAsB;AAClB,yBAAKA,OAAL,CAAaO,OAAb,GAAuB,KAAvB;AACH;;AAED,qBAAKN,IAAL,CAAUS,MAAV,GAAmB,KAAKtB,SAAxB;AACAN,mBAAG6B,GAAH;AACH;;AAED,gBAAI,KAAKtB,gBAAT,EAA2B;AACvB,oBAAI,KAAKY,IAAL,CAAUS,MAAV,IAAoB,KAAKT,IAAL,CAAUQ,KAAV,GAAkB,CAAlB,GAAsB,CAA9C,EAAiD;AAC7C,wBAAG,KAAKT,OAAL,IAAc,IAAjB,EAAsB;AAClB,6BAAKA,OAAL,CAAaO,OAAb,GAAuB,KAAvB;AACH;AACD,yBAAKN,IAAL,CAAUS,MAAV,GAAmB,KAAKT,IAAL,CAAUQ,KAAV,GAAkB,CAAlB,GAAsB,CAAzC;AACH;AACJ;AACJ;AAEJ,KAlEI;AAoELG,aApEK,uBAoEM;AACP,YAAI9B,GAAGY,GAAH,CAAOC,QAAX,EAAqB;AACjBC,mBAAOiB,mBAAP,CAA2B,QAA3B,EAAqC,KAAKtB,cAA1C;AACH,SAFD,MAGK;AACDT,eAAGgB,IAAH,CAAQgB,GAAR,CAAY,eAAZ,EAA6B,KAAKvB,cAAlC;AACH;AACJ;AA3EI,CAAT","file":"AlignmentControl.js","sourceRoot":"../../../../../../assets/cc-common/cc-share-v1/common","sourcesContent":["\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        maxWidth: 1440,\n        maxHeight: 2436,\n        maxAlignByOrient: false,\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        this._thisOnResized = this.onScreenResized.bind(this);\n        if (cc.sys.isMobile) {\n            window.addEventListener('resize', this._thisOnResized);\n        }\n        else {\n            cc.view.on('canvas-resize', this._thisOnResized);\n        }\n        this._widget = this.node.getComponent(cc.Widget);\n    },\n\n    start () {\n        this.onScreenResized();\n    },\n\n    onScreenResized(){\n        if(this.node){\n            let visibleViewSize = cc.view.getVisibleSize();\n            // cc.log(`Visible size: ${visibleViewSize}`);\n            if(this._widget!=null){\n                this._widget.enabled = true;\n                this._widget.updateAlignment();\n            }else{\n                this._widget = this.node.getComponent(cc.Widget);\n            }\n            \n    \n            if(visibleViewSize.width>this.maxWidth){\n                if(this._widget!=null){\n                    this._widget.enabled = false;\n                }\n\n                this.node.width = this.maxWidth;\n                // cc.log(`Align with Max Width`);\n            }\n    \n            if(visibleViewSize.height > this.maxHeight){\n                if(this._widget!=null){\n                    this._widget.enabled = false;\n                }\n\n                this.node.height = this.maxHeight;\n                cc.log(`Align with Max Height`);\n            }\n\n            if (this.maxAlignByOrient) {\n                if (this.node.height >= this.node.width * 3 / 4) {\n                    if(this._widget!=null){\n                        this._widget.enabled = false;\n                    }\n                    this.node.height = this.node.width * 3 / 4;\n                }\n            }\n        }\n        \n    },\n\n    onDestroy(){\n        if (cc.sys.isMobile) {\n            window.removeEventListener('resize', this._thisOnResized);\n        }\n        else {\n            cc.view.off('canvas-resize', this._thisOnResized);\n        }\n    },\n});\n"]}