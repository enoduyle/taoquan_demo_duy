{"version":3,"sources":["SlotHistorySummaryImagesv2.js"],"names":["require","formatMoney","cc","Class","extends","Component","properties","scrollView","ScrollView","sessionLabel","Label","totalWinLabel","content","Node","onLoad","node","on","updateData","resetLabelTotalDetail","mapItem","children","forEach","it","getComponent","typeWin","scrollToTop","string","getWinMoney","emit","active","showItem","money","data","opacity","sessionId","totalWinAmount","freeSummary","totalNormalWinAmount","totalFreeWinAmount","totalJpWinAmount","totalBonusWinAmount","substring","length","updateWinAmount","selectOption","mode","winAmount","scheduleOnce","isShow","itemWinHistoryNode"],"mappings":"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","file":"SlotHistorySummaryImagesv2.js","sourceRoot":"../../../../../../../assets/cc-common/cc-slotbase-v2/slotGame/BetHistory","sourcesContent":["const { formatMoney } = require('utils');\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        scrollView: cc.ScrollView,\n        sessionLabel: cc.Label,\n        totalWinLabel: cc.Label,\n\n        content: cc.Node,\n    },\n\n    onLoad() {\n        this.node.on('DISPLAY_DATA', this.updateData, this);\n        this.node.on('CLEAR_TOTAL_DETAIL_DATA', this.resetLabelTotalDetail, this);\n        this.mapItem = {};\n        this.content.children.forEach(it => {\n            this.mapItem[it.getComponent(\"ItemWinHistory\").typeWin] = it;\n        });\n    },\n\n    resetLabelTotalDetail() {\n        this.scrollView && this.scrollView.scrollToTop();\n        this.totalWinLabel.string = this.getWinMoney(0);\n        this.content.children.forEach(it => {\n            it.emit(\"RESET_DATA\");\n            it.active = false;\n        });\n        this.showItem('NORMAL');\n        this.showItem('FREE');\n        this.showItem('JACKPOT');\n        this.showItem('BONUS');\n    },\n\n    getWinMoney(money = 0) {\n        return formatMoney(money);\n    },\n\n    updateData(data) {\n        this.node.opacity = 0;\n        this.resetLabelTotalDetail();\n        let { sessionId, totalWinAmount, freeSummary, totalNormalWinAmount,\n            totalFreeWinAmount, totalJpWinAmount, totalBonusWinAmount } = data;\n\n\n        sessionId = data.sessionId.substring(data.sessionId.length - 8, data.sessionId.length);\n\n\n        this.totalWinLabel.string = this.getWinMoney(totalWinAmount);\n\n        this.sessionLabel.node.active = true;\n        this.sessionLabel.string = `#${sessionId}`;\n\n        this.updateWinAmount('NORMAL', totalNormalWinAmount);\n        this.updateWinAmount('FREE', totalFreeWinAmount);\n        this.updateWinAmount('JACKPOT', totalJpWinAmount);\n        this.updateWinAmount('BONUS', totalBonusWinAmount);\n\n        if (freeSummary && freeSummary.length > 0) {\n            freeSummary.forEach(it => {\n                if (it.selectOption > 0) { //support for top up game\n                    this.showItem('FREE', false);\n                    const mode = 'FREE_' + it.selectOption;\n                    this.updateWinAmount(mode, it.winAmount, it.winAmount >= 0);\n                }\n            });\n        }\n\n\n        this.node.opacity = 1;\n        this.scheduleOnce(() => {\n            this.node.opacity = 255;\n        }, 0.02);\n    },\n\n    updateWinAmount(mode = '', winAmount = 0, isShow = true) {\n        const itemWinHistoryNode = this.mapItem[mode];\n        if (itemWinHistoryNode) {\n            itemWinHistoryNode.active = isShow;\n            itemWinHistoryNode.emit(\"UPDATE_WIN\", winAmount);\n        }\n\n    },\n\n    showItem(mode = '', isShow = true) {\n        const itemWinHistoryNode = this.mapItem[mode];\n        if (itemWinHistoryNode) itemWinHistoryNode.active = isShow;\n\n    },\n\n});\n"]}