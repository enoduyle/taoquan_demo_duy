{"version":3,"sources":["../../../../../../assets/cc-common/cc-slotbase-v2/component/assets/cc-common/cc-slotbase-v2/component/InterlacedTable.js"],"names":["require","convertAssetArrayToObject","convertSlotMatrixTBLR","getPostionInOtherNode","STATE","cc","Enum","STOPPED","SPINNING","POOL_QUANTITY","Class","extends","Component","properties","slotRowPrefab","Prefab","slotRowUnmasked","symbolPrefab","startSpinDelay","stopSpinDelay","startSpeed","acceleration","maxSpeed","speedToStop","speedToStopWithEffect","stopOffset","tableSpeed","symbolList","SpriteFrame","powerUpSprite","powerUpSpinAnim","sp","Skeleton","upgradeSprite","powerUpSymbol","String","emptySymbolFilter","onLoad","node","on","init","setMode","startSpinning","stopSpinning","fastToResult","changeMatrix","symbolPool","NodePool","i","put","instantiate","extendLoad","kyloSymbol","originalKylo","mode","start","config","cachedSpeed","maskRows","unmaskRows","cellList","initTable","state","cachedPosition","position","onCellStop","effect","format","width","SYMBOL_WIDTH","SYMBOL_MARGIN_RIGHT","height","SYMBOL_HEIGHT","startX","length","startRowY","row","setParent","name","setPosition","unMaskRow","j","index","symbol","get","getComponent","setParentNode","setIndex","totalCellSpin","totalCellStop","col","children","startSpin","error","data","callback","filterEmptySymbol","onStopSpinCallback","stopSpinWithEffect","matrix","setSpeed","isFastToResult","speed","log","result","Math","floor","stopSpin","resetAll","setKyloSymbol","reset","matrixLevel","removeAllChildren","expandRow","lastRowPosY","y","splice","map","it","onCellSpin","onTableFinishSpin","fillLastRow","delay","cell","fillSymbol","playEffectFillIn","timeoutFillRow","setTimeout","fillColumn","column","startIndex","hideColumn","hide","fillMatrix","expandAround","getPosition","arr","exRow","exCol","exIndex","getCurrentResult","playEffectFlyFrom","spinPowerUp","spinCell","dispatchEvent","Event","EventCustom","spinningPowerUp","parent","active","lastPowerupAnim","random","setAnimation","setCompleteListener","onPowerUpFinish","bind","powerUpRollCount","playResultAnim","stopSpinPowerUp","powerUpSpinResult","powerUpStopCb","powerUpIndexCached","animName","playAnimBuffer","playAnimResult","animBuffer","runAction","sequence","callFunc","runPowerUpEffect","powerUpValue","playExpandEffect","playAddRowEffect","upgradeLevel","playUpLevelEffect","playBonusEffect","getTableLevel","timeoutExpand","moveBy","level","symbolName","setSprite","applyColorMask","emit","changeFormat","newFormat","rowToAddMore","updateWinBonus","displayBonus","mergedSymbol","hideAllRows","forEach","prepareNearWin","newMatrix","foundSymbol","nearWinIndex","playNearWin","lightningGameRemain","playAppearEffect","playAnimation","testStopSpin","onDestroy","clearTimeout"],"mappings":"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","file":"InterlacedTable.js","sourceRoot":"../../../../../../assets/cc-common/cc-slotbase-v2/component","sourcesContent":["\n\nconst {convertAssetArrayToObject} = require(\"utils\");\nconst {convertSlotMatrixTBLR,} = require('utils');\nconst {getPostionInOtherNode} = require('utils');\n\nconst STATE = cc.Enum({\n    STOPPED: 0,\n    SPINNING: 1,\n});\n\nconst POOL_QUANTITY = 60;\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        slotRowPrefab: cc.Prefab,\n        slotRowUnmasked: cc.Prefab,\n        symbolPrefab: cc.Prefab,\n        startSpinDelay: 0.1,\n        stopSpinDelay: 0.1,\n        startSpeed: 1200,\n        acceleration: 600,\n        maxSpeed: 1200,\n        speedToStop: 600,\n        speedToStopWithEffect: 200,\n        stopOffset: 30,\n        tableSpeed: 2,\n        symbolList: [cc.SpriteFrame],\n        powerUpSprite: [cc.SpriteFrame],\n        powerUpSpinAnim: sp.Skeleton,\n        upgradeSprite: [cc.SpriteFrame],\n        powerUpSymbol: [cc.String],\n        emptySymbolFilter: \"10\",\n    },\n\n    onLoad()\n    {\n        this.symbolList = convertAssetArrayToObject(this.symbolList);\n        this.powerUpSprite = convertAssetArrayToObject(this.powerUpSprite);\n        this.upgradeSprite = convertAssetArrayToObject(this.upgradeSprite);\n        this.node.on(\"INIT\",this.init,this);\n        this.node.on(\"SET_MODE\",this.setMode,this);\n        this.node.on(\"START_SPINNING\",this.startSpinning,this);\n        this.node.on(\"STOP_SPINNING\",this.stopSpinning,this);\n        this.node.on(\"FAST_TO_RESULT\",this.fastToResult,this);\n        this.node.on(\"CHANGE_MATRIX\",this.changeMatrix,this);\n\n        this.symbolPool = new cc.NodePool(\"PoolHandler\");\n        for (let i=0; i<POOL_QUANTITY; i++)\n        {\n            this.symbolPool.put(cc.instantiate(this.symbolPrefab));\n        }\n\n        this.extendLoad();\n    },\n\n    extendLoad()\n    {\n        this.kyloSymbol = this.symbolList[2];\n        this.originalKylo = this.kyloSymbol;\n        this.node.mode = 'FAST';\n    },\n\n    init()\n    {\n        \n    },\n\n    setMode()\n    {\n        \n    },\n\n    start()\n    {\n        this.config = {\n            \"startSpeed\": this.startSpeed,\n            \"acceleration\": this.acceleration,\n            \"maxSpeed\": this.maxSpeed,\n            \"speedToStop\": this.speedToStop,\n            \"symbolList\": this.symbolList,\n            \"stopOffset\": this.stopOffset,\n            \"tableSpeed\": this.tableSpeed,\n            \"powerUpSymbol\": this.powerUpSymbol,\n            \"powerUpSprite\": this.powerUpSprite,\n            \"upgradeSprite\": this.upgradeSprite,\n            \"speedToStopWithEffect\": this.speedToStopWithEffect,\n            \"matrixLevel\": 0,\n        };\n\n        this.cachedSpeed = this.tableSpeed;\n\n        this.maskRows = [];\n        this.unmaskRows = [];\n        this.cellList = [];\n        this.initTable([8,8,8,8,8]);\n        this.state = STATE.STOPPED;\n        this.cachedPosition = this.node.position;\n\n        this.node.on(\"CELL_STOP\", ()=>{\n            this.onCellStop();\n        });\n\n        this.effect = [0,0,0,0,0,\n            0,0,0,0,0,\n            0,0,0,0,0,\n            0,0,0,0,0,\n            0,0,0,0,0,\n            0,0,0,0,0,\n            0,0,0,0,0,\n            0,0,0,0,0,];\n\n    },\n\n    //table format must be rectangle\n    initTable(format)\n    {\n        this.format = format;\n        const width = (this.node.config.SYMBOL_WIDTH + this.node.config.SYMBOL_MARGIN_RIGHT);\n        const height = (this.node.config.SYMBOL_HEIGHT); //should replace spaceY\n        const startX = -(format.length / 2 - 0.5) * width;\n\n        //init row\n        let startRowY = (format[0]/2 - 0.5) * height;\n        for (let i=0; i<format[0]; i++)\n        {\n            let row = cc.instantiate(this.slotRowPrefab);\n            row.setParent(this.node);\n            row.name = \"mask_row_\" + i;\n            row.setPosition(0, startRowY - i * height, 0);\n            row.height = height;\n            row.width = width * format.length;\n\n            let unMaskRow = cc.instantiate(this.slotRowUnmasked);\n            unMaskRow.setParent(this.node);\n            unMaskRow.name = \"unmask_row_\" + i;\n            unMaskRow.setPosition(0, startRowY - i * height, 0);\n            unMaskRow.height = height;\n            unMaskRow.width = width * format.length;\n\n            this.maskRows[i] = row;\n            this.unmaskRows[i] = unMaskRow;\n        }\n\n        //create symbol\n        for (let i=0; i<format.length; i++)\n        {\n            // let startY = (format[i]/2 - 0.5) * height;\n            for (let j=0; j<format[i]; j++)\n            {\n                let index = i*format[0] + j;\n                let symbol = this.symbolPool.get();\n                symbol.setParent(this.maskRows[j]);\n                symbol.setPosition(startX + i * width, 0);\n                symbol.getComponent(\"InterlacedSymbol\").init(this.config);\n                symbol.getComponent(\"InterlacedSymbol\").setParentNode(this.maskRows[j], this.unmaskRows[j]);\n                symbol.name = \"Symbol_\" + (i*format[0] + j);\n                this.cellList[index] = symbol.getComponent(\"InterlacedSymbol\");\n                this.cellList[index].setIndex(index);\n            }\n        }\n    },\n\n    startSpinning()\n    {\n        if (this.state == STATE.STOPPED)\n        {\n            this.effect = [0,0,0,0,0,\n                0,0,0,0,0,\n                0,0,0,0,0,\n                0,0,0,0,0,\n                0,0,0,0,0,\n                0,0,0,0,0,\n                0,0,0,0,0,\n                0,0,0,0,0,];\n\n            this.totalCellSpin = 0;\n            this.totalCellStop = 0;\n            for (let row=0; row<this.maskRows.length; row++)\n            {\n                for (let col=0; col<this.maskRows[row].children.length; col++)\n                {\n                    this.totalCellSpin += this.maskRows[row].children[col].getComponent(\"InterlacedSymbol\").startSpin(col*this.startSpinDelay);\n                }\n            }\n            if (this.totalCellSpin > 0)\n            {\n                this.state = STATE.SPINNING;\n            }\n        }\n        else\n        {\n            //error here\n            cc.error(\"Table is called spin 2 times\");\n        }\n    },\n\n    stopSpinning(data, callback)\n    {\n        data = this.filterEmptySymbol(data, this.emptySymbolFilter);\n        if (this.state == STATE.STOPPED)\n        {\n            callback();\n        }\n        else\n        {\n            this.onStopSpinCallback = callback;\n            this.stopSpinWithEffect(data);\n        }\n        this.matrix = data;\n    },\n\n    fastToResult()\n    {\n        if (this.state == STATE.SPINNING)\n        {\n            this.setSpeed(4);\n            this.isFastToResult = true;\n        }\n    },\n\n    setSpeed(speed)\n    {\n        for (let i=0; i< this.cellList.length; i++)\n        {\n            this.cellList[i].setSpeed(speed);\n        }\n    },\n\n    changeMatrix(matrix)\n    {\n        cc.log(\"InterlacedTable change matrix \" + matrix);\n    },\n\n    stopSpinWithEffect(result)\n    {\n        for (let i=0; i<this.cellList.length; i++)\n        {\n            let col = Math.floor(i/this.format[0]);\n            let row = Math.floor(i%this.format[0]);\n            this.cellList[i].stopSpin(result[col][row], col*this.stopSpinDelay, this.effect[i]);\n        }\n    },\n\n    resetAll()\n    {\n        this.state = STATE.STOPPED;\n        this.node.position = this.cachedPosition;\n        this.setSpeed(this.cachedSpeed);\n        for (let i=this.cellList.length -1; i>=0; i--)\n        {\n            this.cellList[i].setKyloSymbol(this.originalKylo);\n            this.cellList[i].reset();\n            this.symbolPool.put(this.cellList[i].node);\n        }\n        this.cellList = [];\n        this.config.matrixLevel = 0;\n        this.node.removeAllChildren(true);\n        this.initTable([8,8,8,8,8]);\n    },\n\n    expandRow()\n    {\n        const width = (this.node.config.SYMBOL_WIDTH + this.node.config.SYMBOL_MARGIN_RIGHT);\n        const height = (this.node.config.SYMBOL_HEIGHT); //should replace spaceY\n        const startX = -(this.format.length / 2 - 0.5) * width;\n        const lastRowPosY = this.node.children[this.node.children.length-1].y;\n\n        let index = this.maskRows.length;\n        let row = cc.instantiate(this.slotRowPrefab);\n        row.setParent(this.node);\n        row.name = \"mask_row_\" + index;\n        row.setPosition(0, lastRowPosY - height);\n        row.height = height;\n        row.width = width * this.format.length;\n\n        let unMaskRow = cc.instantiate(this.slotRowUnmasked);\n        unMaskRow.setParent(this.node);\n        unMaskRow.name = \"unmask_row_\" + index;\n        unMaskRow.setPosition(0, lastRowPosY - height);\n        unMaskRow.height = height;\n        unMaskRow.width = width * this.format.length;\n\n        this.maskRows[index] = row;\n        this.unmaskRows[index] = unMaskRow;\n\n        for (let j=0; j<this.format.length; j++)\n        {\n            let symbol = this.symbolPool.get();\n            symbol.setParent(this.maskRows[index]);\n            symbol.setPosition(startX + j * width, 0);\n            symbol.getComponent(\"InterlacedSymbol\").init(this.config);\n            symbol.getComponent(\"InterlacedSymbol\").setParentNode(this.maskRows[index], this.unmaskRows[index]);\n            symbol.name = \"Symbol_\" + (index * this.format[0] + j);\n            this.cellList.splice((j + 1) * (this.format[0] + 1) - 1, 0, symbol.getComponent(\"InterlacedSymbol\"));\n        }\n        //reset Index\n        for (let i=0; i<this.cellList.length; i++)\n        {\n            this.cellList[i].setIndex(i);\n        }\n        this.format = this.format.map(it => it + 1);\n    },\n\n    onCellSpin()\n    {\n        this.totalCellSpin += 1;\n    },\n\n    onCellStop()\n    {\n        this.totalCellStop += 1;\n        if (this.totalCellStop == this.totalCellSpin)\n        {\n            this.onTableFinishSpin();\n        }\n    },\n\n    onTableFinishSpin()\n    {\n        this.state = STATE.STOPPED;\n        if (this.isFastToResult)\n        {\n            this.setSpeed(this.cachedSpeed); //reset table speed\n            this.isFastToResult = false;\n        }\n        this.onStopSpinCallback();\n    },\n\n    fillLastRow(symbol, delay = 0, callback = null)\n    {\n        for (let i=0; i<this.format.length; i++)\n        {\n            let index = (i+1) * this.format[0] - 1;\n            let cell = this.cellList[index];\n            cell.fillSymbol(symbol, delay * i, ()=>{\n                cell.playEffectFillIn();\n            });\n        }\n        this.timeoutFillRow = setTimeout(()=>{\n            callback && callback();\n        }, delay * this.format.length * 1000);\n    },\n\n    fillColumn(column, symbol)\n    {\n        let startIndex = column * this.format[0];\n        for (let i=startIndex; i<startIndex + this.format[0]; i++)\n        {\n            this.cellList[i].fillSymbol(symbol);\n        }\n    },\n\n    hideColumn(column)\n    {\n        let startIndex = column * this.format[0];\n        for (let i=startIndex; i<startIndex + this.format[0]; i++)\n        {\n            this.cellList[i].hide();\n        }\n    },\n\n    fillMatrix(data, callback)\n    {\n        data = this.filterEmptySymbol(data, this.emptySymbolFilter);\n        for (let i=0; i<this.cellList.length; i++)\n        {\n            this.cellList[i].fillSymbol(data[i]);\n        }\n        this.matrix = convertSlotMatrixTBLR(data, this.format);\n        callback && callback();\n    },\n\n    filterEmptySymbol(matrix, symbol)\n    {\n        let result = matrix;\n        for (let i=0; i<result.length; i++)\n            for (let j=0; j<result[i].length; j++)\n            {\n                if (result[i][j] == symbol)\n                {\n                    result[i][j] = \"0\";\n                }\n            }\n        result = result.map(function(it){\n            if (it == symbol) return \"0\";\n            return it;\n        });\n        return result;\n    },\n\n\n    expandAround(index, symbol)\n    {\n        let position = this.cellList[index].getPosition();\n        let col = Math.floor(index / this.format[0]);\n        let row = Math.floor(index % this.format[0]);\n        let arr = [[-1,-1],[-1,0],[-1,1],[0,1],[1,1],[1,0],[1,-1],[0,-1]];\n        //let arr = [-this.format[0]-1, -this.format[0], - this.format[0] + 1, -1, 1, this.format[0] - 1, this.format[0], this.format[0] + 1];\n        for (let i=0; i<arr.length; i++)\n        {\n            let exRow = row + arr[i][0];\n            let exCol = col + arr[i][1];\n            if (exRow >= 0 && exCol >= 0 && exRow < this.format[0] && exCol < this.format.length)\n            {\n                const exIndex = exCol * this.format[0] + exRow;\n                if (this.cellList[exIndex] && this.cellList[exIndex].getCurrentResult() == 0)\n                {\n                    this.cellList[exIndex].fillSymbol(symbol, 0);\n                    this.cellList[exIndex].playEffectFlyFrom(position);\n                }\n            }\n        }\n    },\n\n    spinPowerUp(spinCell)\n    {\n        this.node.dispatchEvent( new cc.Event.EventCustom('KYLO_PRE_ATTACK', true) );\n        this.cellList[spinCell].spinPowerUp();\n        this.spinningPowerUp = this.cellList[spinCell];\n        let position = getPostionInOtherNode(this.node.parent, this.cellList[spinCell].node);\n        this.powerUpSpinAnim.node.active = true;\n        this.powerUpSpinAnim.node.setPosition(position);\n        this.lastPowerupAnim = \"PU\" + Math.floor(Math.random()*4 + 1);\n        this.powerUpSpinAnim.setAnimation(0, this.lastPowerupAnim);\n        this.powerUpSpinAnim.setCompleteListener(this.onPowerUpFinish.bind(this));\n        this.node.dispatchEvent( new cc.Event.EventCustom('POWER_UP_SPIN', true) );\n        this.powerUpRollCount = 0;\n        this.playResultAnim = false;\n    },\n\n    stopSpinPowerUp(spinCell, result, matrix, callback = null)\n    {\n        this.powerUpSpinResult = result;\n        this.powerUpStopCb = callback;\n        this.powerUpIndexCached = spinCell;\n        this.matrix = matrix;\n    },\n\n    onPowerUpFinish()\n    {\n        if (!this.powerUpSpinResult || this.powerUpRollCount <= 6)\n        {\n            let animName = this.lastPowerupAnim;\n            while (animName == this.lastPowerupAnim)\n                this.lastPowerupAnim = \"PU\" + Math.floor(Math.random()*4 + 1);\n            this.powerUpSpinAnim.setAnimation(0, this.lastPowerupAnim);\n            this.node.dispatchEvent( new cc.Event.EventCustom('POWER_UP_SPIN', true) );\n            this.powerUpRollCount += 1;\n            this.playAnimBuffer = false;\n            this.playAnimResult = false;\n        } else if (!this.playAnimBuffer)\n        {\n            this.spinningPowerUp.node.dispatchEvent( new cc.Event.EventCustom('FINISH_SPIN_POWERUP', true) );\n            let animBuffer = this.powerUpSpinResult;\n            while (animBuffer == this.powerUpSpinResult || animBuffer == this.lastPowerupAnim)\n                animBuffer = \"PU\" + Math.floor(Math.random()*4 + 1);\n\n            this.powerUpSpinAnim.setAnimation(0, animBuffer);\n            this.playAnimBuffer = true;\n        } else if (!this.playAnimResult)\n        {\n            this.powerUpSpinAnim.setAnimation(0, this.powerUpSpinResult);\n            this.playAnimResult = true;\n        }\n        else //ready to get result\n        {\n            this.node.runAction(cc.sequence(cc.callFunc(()=>{\n                this.spinningPowerUp.node.dispatchEvent( new cc.Event.EventCustom('PLAY_POWERUP_EFFECT', true) );\n                this.spinningPowerUp.stopSpinPowerUp(this.powerUpSpinResult, ()=>{\n                    this.spinningPowerUp = null;\n                    this.powerUpSpinResult = null;\n                    this.powerUpStopCb && this.powerUpStopCb();\n                }); \n            }), cc.callFunc(()=>{\n                this.powerUpSpinAnim.node.active = false;\n            })));\n        }\n    },\n\n    //kronos functions\n    runPowerUpEffect(data, callback)\n    {\n        // let effect = null;\n        switch (data.powerUpValue)\n        {\n            case \"PU1\":\n                this.playExpandEffect(callback);\n                break;\n            case \"PU2\":\n                this.playAddRowEffect(callback);\n                break;\n            case \"PU3\":\n                this.config.matrixLevel = data.upgradeLevel;\n                this.playUpLevelEffect(this.config.matrixLevel, callback);\n                break;\n            case \"PU4\":\n                this.playBonusEffect(callback);\n                break;\n        }\n    },\n\n    getTableLevel()\n    {\n        if (this.config)\n            return this.config.matrixLevel;\n        return 0;\n    },\n\n    playExpandEffect(callback = null)\n    {\n        this.expandAround(this.powerUpIndexCached, \"2\");\n\n        //TODO: ????\n        this.timeoutExpand = setTimeout(()=>{\n            callback && callback();}, 800);\n    },\n\n    playAddRowEffect(callback = null)\n    {\n        this.node.dispatchEvent( new cc.Event.EventCustom('TABLE_MOVE_UP', true) );\n        this.node.runAction(cc.sequence(cc.moveBy(1, 0, this.node.config.SYMBOL_HEIGHT), cc.callFunc(()=>{\n            this.expandRow();\n            this.fillLastRow(\"2\", 0.4, callback);\n        })));\n    },\n\n    playUpLevelEffect(level, callback = null)\n    {\n        if (level)\n        {\n            let symbolName = \"2\" + level;\n            this.kyloSymbol = this.upgradeSprite[symbolName];\n            for (let i=0; i<this.cellList.length; i++)\n            {\n                if (this.cellList[i].getCurrentResult() == \"2\")\n                {\n                    this.cellList[i].setSprite(this.kyloSymbol);\n                }\n                else {\n                    this.cellList[i].setKyloSymbol(this.kyloSymbol);\n                }\n                this.cellList[i].applyColorMask(level);\n            }\n            this.node.emit(\"APPLY_COLOR_MASK\", level);\n        }\n        callback && callback();\n    },\n\n    playBonusEffect(callback = null)\n    {\n        callback && callback();\n    },\n\n\n    changeFormat(newFormat)\n    {\n        let rowToAddMore = newFormat[0] - this.format[0];\n        for (let i=0; i<rowToAddMore; i++)\n        {\n            this.expandRow();\n            this.node.y += this.node.config.SYMBOL_HEIGHT;\n        }\n        this.format = newFormat;\n    },\n\n    updateWinBonus(data)\n    {\n        this.cellList[data.position].displayBonus(data);\n    },\n\n    mergedSymbol()\n    {\n        this.node.emit(\"MERGE_SYMBOL\", this.matrix, this.config.matrixLevel);\n    },\n\n    hideAllRows()\n    {\n        this.maskRows.forEach(it => {\n            it.active = false;\n        });\n        this.unmaskRows.forEach(it => {\n            it.active = false;\n        });\n    },\n\n    prepareNearWin(data)\n    {\n        let newMatrix = this.filterEmptySymbol(data.matrix, this.emptySymbolFilter);\n        let foundSymbol = false;\n        let nearWinIndex = -1;\n        let playNearWin = true;\n\n        for (let i=0; i<this.cellList.length; i++)\n        {\n            let index = this.cellList.length - i - 1;\n            if (this.cellList[index].getCurrentResult() == \"0\" && !foundSymbol)\n            {\n                nearWinIndex = index;\n                break;\n            }\n        }\n\n        /*for (let i=0; i<this.matrix.length; i++)\n        {\n            for (let j=0; j<this.matrix[i].length; j++)\n            if ((this.matrix[i][j] != newMatrix[i][j]) && ((i*this.matrix[0].length + j) != nearWinIndex))\n            {\n                cc.log(this.matrix[i][j], \" \", newMatrix[i][j])\n                playNearWin = false;\n                break;\n            }\n        }*/\n        let col = Math.floor(nearWinIndex / this.format[0]);\n        let row = nearWinIndex % this.format[0];\n\n        playNearWin = (!data.lightningGameRemain) || (data.lightningGameRemain == 1 && newMatrix[col][row] != \"0\");\n        if (playNearWin)\n        {\n            this.effect[nearWinIndex] = 1;\n        }\n    },\n\n    playAppearEffect()\n    {\n        for (let i=0; i<this.cellList.length; i++)\n        {\n            if (this.cellList[i].getCurrentResult() == \"2\")\n            {\n                this.cellList[i].playAnimation(true, 1);\n            }\n        }\n    },\n\n    ///test purpose only ------------------------------------------------\n    testStopSpin()\n    {\n        let result = ['2','0','0','0','0',\n            '2','0','0','0','0',\n            '2','0','0','PU','0',\n            '2','2','0','0','0',\n            '2','0','2','0','0',\n            '2','0','0','2','0',\n            '2','0','2','0','0',\n            '2','0','0','0','0',];\n\n        let effect = [0,0,0,0,0,\n            0,0,0,0,0,\n            0,0,0,0,0,\n            0,0,0,0,0,\n            0,0,0,0,0,\n            0,0,0,0,0,\n            0,0,0,0,0,\n            0,0,0,0,0,];\n        this.stopSpin(result, effect);\n    },\n\n    onDestroy()\n    {\n        clearTimeout(this.timeoutFillRow);\n        clearTimeout(this.timeoutExpand);\n    }\n});\n"]}